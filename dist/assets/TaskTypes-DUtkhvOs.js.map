{"version":3,"file":"TaskTypes-DUtkhvOs.js","sources":["../../src/components/lists/TaskTypeList.vue","../../src/components/pages/TaskTypes.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\" v-if=\"entries.length > 0\">\n          <tr>\n            <th scope=\"col\" class=\"department\">\n              {{ $t('task_types.fields.department') }}\n            </th>\n            <th scope=\"col\" class=\"name\">\n              {{ $t('task_types.fields.name') }}\n            </th>\n            <th scope=\"col\" class=\"short_name\">\n              {{ $t('task_types.fields.short_name') }}\n            </th>\n            <th scope=\"col\" class=\"allow-timelog\">\n              {{ $t('task_types.fields.allow_timelog') }}\n            </th>\n            <th scope=\"col\" class=\"description\">\n              {{ $t('task_types.fields.description') }}\n            </th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n\n        <draggable\n          class=\"datatable-body\"\n          item-key=\"id\"\n          tag=\"tbody\"\n          @end=\"updatePriority\"\n          v-model=\"items\"\n        >\n          <template #item=\"{ element: taskType }\">\n            <tr class=\"datatable-row tasktype-item\">\n              <td class=\"department\">\n                <department-name\n                  :department=\"getDepartment(taskType.department_id)\"\n                  v-if=\"!isEmpty(taskType.department_id)\"\n                />\n              </td>\n              <task-type-cell class=\"name\" :task-type=\"taskType\" />\n              <td class=\"short_name\">\n                {{ taskType.short_name }}\n              </td>\n              <boolean-cell\n                class=\"allow-timelog\"\n                :value=\"taskType.allow_timelog\"\n              />\n              <td>\n                {{ taskType.description }}\n              </td>\n              <row-actions-cell\n                :task-type-id=\"taskType.id\"\n                @delete-clicked=\"$emit('delete-clicked', taskType)\"\n                @edit-clicked=\"$emit('edit-clicked', taskType)\"\n              />\n            </tr>\n          </template>\n          <template #footer v-if=\"!entries.length\">\n            <tr class=\"empty\">\n              <th scope=\"rowgroup\" colspan=\"6\">\n                <span class=\"text\">\n                  {{ $t('task_types.no_task_types') }}\n                </span>\n              </th>\n            </tr>\n          </template>\n        </draggable>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <p class=\"has-text-centered nb-task-types\" v-if=\"entries.length > 0\">\n      {{ entries.length }} {{ $tc('task_types.number', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport draggable from 'vuedraggable'\n\nimport BooleanCell from '@/components/cells/BooleanCell.vue'\nimport DepartmentName from '@/components/widgets/DepartmentName.vue'\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell.vue'\n\nexport default {\n  name: 'task-type-list',\n\n  components: {\n    draggable,\n    BooleanCell,\n    DepartmentName,\n    RowActionsCell,\n    TableInfo,\n    TaskTypeCell\n  },\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  emits: ['delete-clicked', 'edit-clicked', 'update-priorities'],\n\n  data() {\n    return {\n      items: []\n    }\n  },\n\n  computed: {\n    ...mapGetters(['getDepartment'])\n  },\n\n  methods: {\n    updatePriority() {\n      const items = this.items\n      const forms = []\n      items.forEach((item, index) => {\n        index += 1\n        const form = {\n          id: item.id,\n          name: item.name,\n          priority: String(index)\n        }\n        item.priority = index\n        forms.push(form)\n      })\n      this.$emit('update-priorities', forms)\n    },\n\n    isEmpty(value) {\n      return value === undefined || value === null || value === ''\n    }\n  },\n\n  watch: {\n    entries: {\n      deep: true,\n      immediate: true,\n      handler() {\n        this.items = JSON.parse(JSON.stringify(this.entries))\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.department {\n  width: 200px;\n  min-width: 200px;\n}\n\n.name {\n  width: 300px;\n  min-width: 300px;\n}\n\n.short_name {\n  width: 200px;\n  min-width: 200px;\n}\n\n.priority {\n  width: 80px;\n  min-width: 80px;\n}\n\n.allow-timelog {\n  width: 100px;\n  min-width: 100px;\n  text-align: center;\n}\n\n.actions {\n  min-width: 100px;\n}\n\n.color {\n  width: 100px;\n}\n\n.tasktype-item {\n  cursor: grab;\n}\n\n.tasktype-item[draggable='true'] {\n  cursor: grabbing;\n}\n\n.empty {\n  th {\n    font-size: 1.2rem;\n    padding-top: 30px;\n    text-align: center;\n  }\n  span {\n    color: var(--text);\n    font-weight: normal;\n    font-style: italic;\n  }\n}\n\n.data-list {\n  margin-top: 0;\n}\n</style>\n","<template>\n  <div class=\"task-types page fixed-page\">\n    <list-page-header\n      :title=\"$t('task_types.library_title')\"\n      :new-entry-label=\"$t('task_types.new_task_type')\"\n      :is-exportable=\"isActiveTab\"\n      @export-clicked=\"onExportClicked\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <route-tabs class=\"mt2\" :active-tab=\"activeTab\" :tabs=\"tabs\" />\n\n    <route-tabs :active-tab=\"entityTab\" :tabs=\"entityTabs\" route-key=\"entity\" />\n\n    <task-type-list\n      :entries=\"listTaskTypes\"\n      :is-loading=\"loading.taskTypes || loading.departments\"\n      :is-error=\"errors.taskTypes || errors.departments\"\n      @update-priorities=\"updatePriorities\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-task-type-modal\n      :active=\"modals.edit\"\n      :for-entity=\"forEntity\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :task-type-to-edit=\"taskTypeToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditTaskType\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('task_types.delete_error')\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeleteTaskType\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport func from '@/lib/func'\nimport stringHelpers from '@/lib/string'\n\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditTaskTypeModal from '@/components/modals/EditTaskTypeModal.vue'\nimport ListPageHeader from '@/components/widgets/ListPageHeader.vue'\nimport RouteTabs from '@/components/widgets/RouteTabs.vue'\nimport TaskTypeList from '@/components/lists/TaskTypeList.vue'\n\nexport default {\n  name: 'task-types',\n\n  components: {\n    DeleteModal,\n    EditTaskTypeModal,\n    ListPageHeader,\n    RouteTabs,\n    TaskTypeList\n  },\n\n  data() {\n    return {\n      activeTab: 'active',\n      entityTab: 'assets',\n      errors: {\n        taskTypes: false,\n        departments: false,\n        edit: false,\n        del: false\n      },\n      loading: {\n        taskTypes: false,\n        departments: false,\n        edit: false,\n        del: false\n      },\n      modals: {\n        del: false,\n        edit: false\n      },\n      tabs: [\n        {\n          name: 'active',\n          label: this.$t('main.active')\n        },\n        {\n          name: 'archived',\n          label: this.$t('main.archived')\n        }\n      ],\n      entityTabs: [\n        {\n          name: 'assets',\n          label: this.$t('assets.title')\n        },\n        {\n          name: 'shots',\n          label: this.$t('shots.title')\n        },\n        {\n          name: 'sequences',\n          label: this.$t('sequences.title')\n        },\n        {\n          name: 'episodes',\n          label: this.$t('episodes.title')\n        },\n        {\n          name: 'edits',\n          label: this.$t('edits.title')\n        }\n      ],\n      taskTypeToDelete: { color: '#999999' },\n      taskTypeToEdit: null\n    }\n  },\n\n  computed: {\n    ...mapGetters(['archivedTaskTypes', 'departmentMap', 'taskTypes']),\n\n    forEntity() {\n      return stringHelpers.capitalize(\n        this.entityTab.substring(0, this.entityTab.length - 1)\n      )\n    },\n\n    isActiveTab() {\n      return this.activeTab === 'active'\n    },\n\n    listTaskTypes() {\n      const taskTypes = this.isActiveTab\n        ? this.taskTypes\n        : this.archivedTaskTypes\n      const forEntity = this.entityTab.substring(0, this.entityTab.length - 1)\n      return taskTypes.filter(\n        taskType => taskType.for_entity.toLowerCase() === forEntity\n      )\n    }\n  },\n\n  mounted() {\n    this.activeTab = this.$route.query.tab || 'active'\n    this.entityTab = this.$route.query.entity || 'assets'\n    this.loading.taskTypes = true\n    this.errors.taskTypes = false\n    this.loading.departments = true\n    this.errors.departments = false\n    this.loadDepartments()\n      .then(() => {\n        this.loading.departments = false\n      })\n      .catch(err => {\n        console.error(err)\n        this.loading.departments = false\n        this.errors.departments = true\n      })\n    this.loadTaskTypes()\n      .then(() => {\n        this.loading.taskTypes = false\n      })\n      .catch(err => {\n        console.error(err)\n        this.loading.taskTypes = false\n        this.errors.taskTypes = true\n      })\n  },\n\n  methods: {\n    ...mapActions([\n      'editTaskType',\n      'deleteTaskType',\n      'loadTaskTypes',\n      'loadDepartments'\n    ]),\n\n    confirmEditTaskType(form) {\n      let action = 'newTaskType'\n      if (this.taskTypeToEdit && this.taskTypeToEdit.id) {\n        action = 'editTaskType'\n        form.id = this.taskTypeToEdit.id\n      }\n      this.loading.edit = true\n      this.errors.edit = false\n      this.$store\n        .dispatch(action, form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    updatePriorities(forms) {\n      forms.forEach(form => {\n        this.$store.commit('EDIT_TASK_TYPE_END', form)\n      })\n      this.savePriorities(forms)\n    },\n\n    savePriorities(forms) {\n      const now = new Date().getTime()\n      this.lastCall = this.lastCall || 0\n      if (now - this.lastCall > 1000 && !this.isSaving) {\n        this.lastCall = now\n        this.isSaving = true\n        func.runPromiseMapAsSeries(forms, this.editTaskType).then(() => {\n          this.isSaving = false\n          if (this.newSaveCall) this.savePriorities(forms)\n        })\n      } else {\n        this.newSaveCall = true\n      }\n    },\n\n    confirmDeleteTaskType() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteTaskType(this.taskTypeToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.del = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.del = false\n          this.errors.del = true\n        })\n    },\n\n    deleteText() {\n      const taskType = this.taskTypeToDelete\n      if (taskType) {\n        return this.$t('task_types.delete_text', { name: taskType.name })\n      } else {\n        return ''\n      }\n    },\n\n    onDeleteClicked(taskType) {\n      this.taskTypeToDelete = taskType\n      this.modals.del = true\n    },\n\n    onEditClicked(taskType) {\n      this.taskTypeToEdit = taskType\n      this.modals.edit = true\n    },\n\n    onExportClicked() {\n      const name = stringHelpers.slugify(this.$t('task_types.title'))\n      const headers = [\n        this.$t('main.type'),\n        this.$t('task_types.fields.dedicated_to'),\n        this.$t('task_types.fields.department'),\n        this.$t('task_types.fields.name'),\n        this.$t('task_types.fields.description'),\n        this.$t('task_types.fields.color'),\n        this.$t('task_types.fields.allow_timelog')\n      ]\n      const entries = [headers].concat(\n        this.taskTypes.map(taskType => [\n          taskType.type,\n          taskType.for_entity,\n          this.departmentMap.get(taskType.department_id)?.name,\n          taskType.name,\n          taskType.description,\n          taskType.color,\n          taskType.allow_timelog\n        ])\n      )\n      csv.buildCsvFile(name, entries)\n    },\n\n    onNewClicked() {\n      this.taskTypeToEdit = { color: '#999999' }\n      this.modals.edit = true\n    }\n  },\n\n  watch: {\n    '$route.query'() {\n      this.activeTab = this.$route.query.tab || 'active'\n      this.entityTab = this.$route.query.entity || 'assets'\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.$t('task_types.title')} - Kitsu`\n    }\n  }\n}\n</script>\n"],"names":["_sfc_main","draggable","BooleanCell","DepartmentName","RowActionsCell","TableInfo","TaskTypeCell","mapGetters","items","forms","item","index","form","value","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_15","_openBlock","_createElementBlock","_createElementVNode","$props","_hoisted_4","_hoisted_5","_toDisplayString","_ctx","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createCommentVNode","_createVNode","_component_draggable","$options","$data","_cache","$event","_createSlots","_withCtx","taskType","_createBlock","_component_department_name","_component_task_type_cell","_component_boolean_cell","_component_row_actions_cell","_hoisted_14","_component_table_info","_hoisted_16","DeleteModal","EditTaskTypeModal","ListPageHeader","RouteTabs","TaskTypeList","stringHelpers","taskTypes","forEntity","err","mapActions","action","now","func","name","entries","csv","_component_list_page_header","_component_route_tabs","_component_task_type_list","_component_edit_task_type_modal","_component_delete_modal"],"mappings":"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"}