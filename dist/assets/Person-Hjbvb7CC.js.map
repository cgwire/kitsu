{"version":3,"file":"Person-Hjbvb7CC.js","sources":["../../src/components/pages/Person.vue"],"sourcesContent":["<template>\n  <div ref=\"page\" class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"person page\" v-if=\"person\">\n        <div ref=\"header\" class=\"flexrow page-header\">\n          <div class=\"flexrow-item\">\n            <people-avatar\n              :person=\"person\"\n              :size=\"80\"\n              :font-size=\"30\"\n              :is-text=\"false\"\n            />\n          </div>\n          <div class=\"flexrow-item entity-title\">\n            {{ person.name }}\n          </div>\n        </div>\n\n        <template v-if=\"!person.is_bot && isCurrentUserAllowed\">\n          <route-section-tabs\n            class=\"section-tabs mt1\"\n            :active-tab=\"activeTab\"\n            :route=\"$route\"\n            :tabs=\"todoTabs\"\n          />\n\n          <div ref=\"search\" class=\"flexrow\" v-show=\"!isActiveTab('calendar')\">\n            <search-field\n              ref=\"person-tasks-search-field\"\n              class=\"search-field flexrow-item\"\n              can-save\n              @change=\"onSearchChange\"\n              @save=\"saveSearchQuery\"\n            />\n            <combobox-production\n              class=\"flexrow-item production-field\"\n              :label=\"$t('main.production')\"\n              :production-list=\"productionList\"\n              v-model=\"productionId\"\n            />\n            <span class=\"filler\"></span>\n            <combobox-number\n              class=\"flexrow-item zoom-level mb0\"\n              :label=\"$t('schedule.zoom_level')\"\n              :options=\"zoomOptions\"\n              v-model=\"zoomLevel\"\n              v-if=\"isActiveTab('schedule')\"\n            />\n            <combobox\n              class=\"flexrow-item\"\n              :label=\"$t('main.sorted_by')\"\n              :options=\"sortOptions\"\n              locale-key-prefix=\"tasks.fields.\"\n              v-model=\"currentSort\"\n            />\n          </div>\n\n          <div ref=\"query\" class=\"query-list\" v-if=\"!isActiveTab('calendar')\">\n            <search-query-list\n              :queries=\"personTaskSearchQueries\"\n              type=\"person\"\n              @remove-search=\"removeSearchQuery\"\n            />\n          </div>\n\n          <todos-list\n            ref=\"task-list\"\n            :empty-text=\"$t('people.no_task_assigned')\"\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :selection-grid=\"personTaskSelectionGrid\"\n            :tasks=\"sortedTasks\"\n            @scroll=\"setPersonTasksScrollPosition\"\n            v-if=\"isActiveTab('todos')\"\n          />\n\n          <todos-list\n            ref=\"done-list\"\n            done\n            :empty-text=\"$t('people.no_task_assigned')\"\n            :is-loading=\"isDoneTasksLoading\"\n            :is-error=\"isDoneTasksLoadingError\"\n            :selection-grid=\"personTaskSelectionGrid\"\n            :tasks=\"sortedDoneTasks\"\n            v-else-if=\"isActiveTab('done')\"\n          />\n\n          <kanban-board\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :production=\"selectedProduction\"\n            :statuses=\"boardStatuses\"\n            :tasks=\"boardTasks\"\n            :user=\"user\"\n            v-else-if=\"isActiveTab('board')\"\n          />\n\n          <user-calendar\n            class=\"calendar\"\n            :is-loading=\"isTasksLoading\"\n            :days-off=\"daysOff\"\n            :tasks=\"sortedAllTasks\"\n            v-else-if=\"isActiveTab('calendar')\"\n          />\n\n          <timesheet-list\n            ref=\"timesheet-list\"\n            :tasks=\"loggablePersonTasks\"\n            :done-tasks=\"loggableDoneTasks\"\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :day-off-error=\"dayOffError\"\n            :time-spent-map=\"personTimeSpentMap\"\n            :time-spent-total=\"personTimeSpentTotal\"\n            :hide-done=\"false\"\n            :hide-day-off=\"!(isCurrentUserAdmin || user.id === person.id)\"\n            @date-changed=\"onDateChanged\"\n            @time-spent-change=\"onTimeSpentChange\"\n            @set-day-off=\"onSetDayOff\"\n            @unset-day-off=\"onUnsetDayOff\"\n            v-else-if=\"isActiveTab('timesheets') && isCurrentUserManager\"\n          />\n\n          <div v-else-if=\"isActiveTab('schedule')\">\n            <schedule\n              ref=\"schedule-widget\"\n              :days-off=\"daysOff\"\n              :start-date=\"tasksStartDate.clone().add(-3, 'months')\"\n              :end-date=\"tasksEndDate.clone().add(3, 'months')\"\n              :hierarchy=\"scheduleItems\"\n              :zoom-level=\"zoomLevel\"\n              :height=\"scheduleHeight\"\n              :is-loading=\"isTasksLoading\"\n              :is-estimation-linked=\"true\"\n              :with-milestones=\"false\"\n              @item-changed=\"saveTaskScheduleItem\"\n              @estimation-changed=\"event => saveTaskScheduleItem(event.item)\"\n              v-if=\"scheduleItems.length > 0\"\n            />\n            <div class=\"has-text-centered\" v-else>\n              {{ $t('main.empty_schedule') }}\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n    <div class=\"column side-column\" v-if=\"nbSelectedTasks === 1\">\n      <task-info :task=\"selectedTasks.values().next().value\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport { firstBy } from 'thenby'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport colors from '@/lib/colors'\nimport { sortTaskStatuses } from '@/lib/sorting'\nimport {\n  addBusinessDays,\n  getFirstStartDate,\n  getLastEndDate,\n  minutesToDays,\n  parseDate\n} from '@/lib/time'\n\nimport { formatListMixin } from '@/components/mixins/format'\nimport { searchMixin } from '@/components/mixins/search'\n\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber.vue'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction.vue'\nimport KanbanBoard from '@/components/lists/KanbanBoard.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport RouteSectionTabs from '@/components/widgets/RouteSectionTabs.vue'\nimport Schedule from '@/components/widgets/Schedule.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport TimesheetList from '@/components/lists/TimesheetList.vue'\nimport TodosList from '@/components/lists/TodosList.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\nimport UserCalendar from '@/components/widgets/UserCalendar.vue'\n\nexport default {\n  name: 'person',\n\n  mixins: [formatListMixin, searchMixin],\n\n  components: {\n    Combobox,\n    ComboboxNumber,\n    ComboboxProduction,\n    KanbanBoard,\n    PeopleAvatar,\n    RouteSectionTabs,\n    Schedule,\n    SearchField,\n    SearchQueryList,\n    TaskInfo,\n    TimesheetList,\n    TodosList,\n    UserCalendar\n  },\n\n  data() {\n    return {\n      activeTab: 'todos',\n      currentSort: 'entity_name',\n      daysOff: [],\n      dayOffError: false,\n      init: false,\n      isDoneTasksLoading: false,\n      isDoneTasksLoadingError: false,\n      isTasksLoading: false,\n      isTasksLoadingError: false,\n      loading: {\n        savingSearch: false\n      },\n      person: null,\n      productionId: undefined,\n      scheduleHeight: 0,\n      selectedDate: moment().format('YYYY-MM-DD'),\n      sortOptions: [\n        'entity_name',\n        'priority',\n        'task_status_short_name',\n        'start_date',\n        'due_date',\n        'estimation',\n        'last_comment_date'\n      ].map(name => ({ label: name, value: name })),\n      zoomLevel: 1,\n      zoomOptions: [\n        { label: this.$t('main.week'), value: 0 },\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ]\n    }\n  },\n\n  mounted() {\n    this.productionId = this.$route.query.productionId || undefined\n\n    this.updateActiveTab()\n    this.loadPerson(this.$route.params.person_id)\n    setTimeout(() => {\n      this.searchField?.focus()\n      this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n    }, 300)\n    window.addEventListener('resize', this.resetScheduleHeight)\n\n    this.setSearchFromUrl()\n    this.onSearchChange()\n\n    this.init = true\n  },\n\n  afterDestroy() {\n    window.removeEventListener('resize', this.resetScheduleHeight)\n    this.$store.commit('LOAD_PERSON_TASKS_END', {\n      tasks: [],\n      userFilters: {},\n      taskTypeMap: this.taskTypeMap\n    })\n  },\n\n  computed: {\n    ...mapGetters([\n      'displayedPersonTasks',\n      'displayedPersonDoneTasks',\n      'getProductionTaskStatuses',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'nbSelectedTasks',\n      'personMap',\n      'personTasksScrollPosition',\n      'personTaskSearchQueries',\n      'personTaskSelectionGrid',\n      'personTimeSpentMap',\n      'personTimeSpentTotal',\n      'openProductions',\n      'productionMap',\n      'selectedTasks',\n      'taskStatuses',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isCurrentUserAllowed() {\n      if (this.isCurrentUserManager || this.user.id === this.person.id) {\n        return true\n      }\n      if (this.isCurrentUserSupervisor) {\n        const isSupervisorInDepartments = this.user.departments.some(\n          department => this.person.departments.includes(department)\n        )\n        return isSupervisorInDepartments\n      }\n      return false\n    },\n\n    loggablePersonTasks() {\n      return this.sortedTasks.filter(task => {\n        return this.taskTypeMap.get(task.task_type_id).allow_timelog\n      })\n    },\n\n    loggableDoneTasks() {\n      return this.sortedDoneTasks.filter(task => {\n        return this.taskTypeMap.get(task.task_type_id).allow_timelog\n      })\n    },\n\n    searchField() {\n      return this.$refs['person-tasks-search-field']\n    },\n\n    taskList() {\n      return this.$refs['task-list']\n    },\n\n    haveDoneList() {\n      return this.$refs['done-list']\n    },\n\n    sortedTasks() {\n      let tasks = this.sortTasks([...this.displayedPersonTasks])\n      if (this.productionId) {\n        tasks = tasks.filter(task => task.project_id === this.productionId)\n      }\n      return tasks\n    },\n\n    sortedDoneTasks() {\n      let tasks = this.sortTasks([...this.displayedPersonDoneTasks])\n      if (this.productionId) {\n        tasks = tasks.filter(task => task.project_id === this.productionId)\n      }\n      return tasks\n    },\n\n    sortedAllTasks() {\n      let tasks = this.sortTasks([\n        ...this.displayedPersonTasks,\n        ...this.displayedPersonDoneTasks\n      ])\n      if (this.productionId) {\n        tasks = tasks.filter(task => task.project_id === this.productionId)\n      }\n      return tasks\n    },\n\n    tasksStartDate() {\n      if (this.scheduleTasks.length) {\n        return getFirstStartDate(this.scheduleTasks)\n      } else {\n        return moment()\n      }\n    },\n\n    tasksEndDate() {\n      if (this.scheduleTasks.length) {\n        return getLastEndDate(this.scheduleTasks)\n      } else {\n        return moment().add(15, 'days')\n      }\n    },\n\n    scheduleTasks() {\n      return this.scheduleItems.flatMap(item => item.children)\n    },\n\n    scheduleItems() {\n      const rootMap = new Map()\n      this.sortedAllTasks.forEach(task => {\n        if (!rootMap.get(task.project_id)) {\n          const project = this.productionMap.get(task.project_id)\n          const rootElement = this.buildProjectScheduleItem(project)\n          rootMap.set(task.project_id, rootElement)\n        }\n        const rootElement = rootMap.get(task.project_id)\n        const taskItem = this.buildTaskScheduleItem(rootElement, task)\n        if (taskItem) rootElement.children.push(taskItem)\n      })\n\n      const rootElements = Array.from(rootMap.values())\n      rootElements.forEach(rootElement => {\n        let rootStartDate = moment()\n        let rootEndDate = moment().add(1, 'days')\n        let manDays = 0\n        if (rootElement.children.length > 0) {\n          rootStartDate = getFirstStartDate(rootElement.children)\n          rootEndDate = getLastEndDate(rootElement.children)\n        }\n        rootElement.children.forEach(task => {\n          if (task.estimation) manDays += task.estimation\n        })\n        Object.assign(rootElement, {\n          startDate: rootStartDate,\n          endDate: rootEndDate,\n          man_days: manDays,\n          daysOff: this.daysOff\n        })\n      })\n      return rootElements\n    },\n\n    boardTasks() {\n      const tasks = this.sortedAllTasks\n      if (this.selectedProduction) {\n        return tasks.filter(\n          task => task.project_id === this.selectedProduction.id\n        )\n      }\n      return tasks\n    },\n\n    boardStatuses() {\n      if (this.selectedProduction) {\n        return this.getBoardStatusesByProduction(this.selectedProduction)\n      }\n\n      const productionsByStatus = {}\n      this.userOpenProductions.forEach(production => {\n        const statuses = this.getBoardStatusesByProduction(production)\n        statuses.forEach(status => {\n          if (!productionsByStatus[status.id]) {\n            productionsByStatus[status.id] = []\n          }\n          productionsByStatus[status.id].push(production.id)\n        })\n      })\n\n      return this.taskStatuses\n        .filter(status => !status.for_concept)\n        .map(status => ({\n          ...status,\n          productions: productionsByStatus[status.id] || []\n        }))\n        .filter(status => status.productions.length > 0)\n        .sort((a, b) => a.priority - b.priority)\n    },\n\n    productionList() {\n      return [{ name: this.$t('main.all') }, ...this.userOpenProductions]\n    },\n\n    selectedProduction() {\n      return this.productionMap.get(this.productionId)\n    },\n\n    userOpenProductions() {\n      if (!this.person) {\n        return []\n      }\n      return this.openProductions.filter(production =>\n        production.team.includes(this.person.id)\n      )\n    },\n\n    todoTabs() {\n      const hasAvailableBoard = this.openProductions.some(\n        production => this.getBoardStatusesByProduction(production).length\n      )\n      return [\n        {\n          label: this.$t('main.tasks'),\n          name: 'todos'\n        },\n        hasAvailableBoard\n          ? {\n              label: this.$t('board.title'),\n              name: 'board'\n            }\n          : undefined,\n        {\n          label: this.$t('tasks.calendar'),\n          name: 'calendar'\n        },\n        {\n          label: this.$t('schedule.title'),\n          name: 'schedule'\n        },\n        {\n          label: `${this.$t('tasks.validated')} (${\n            this.isDoneTasksLoading ? '…' : this.displayedPersonDoneTasks.length\n          })`,\n          name: 'done'\n        },\n        {\n          label: this.$t('timesheets.title'),\n          name: 'timesheets'\n        }\n      ].filter(Boolean)\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'loadAggregatedPersonDaysOff',\n      'loadPersonDoneTasks',\n      'loadPersonTasks',\n      'loadPersonTimeSpents',\n      'setPersonTasksSearch',\n      'savePersonTasksSearch',\n      'removePersonTasksSearch',\n      'setDayOff',\n      'setPersonTasksScrollPosition',\n      'setTimeSpent',\n      'unsetDayOff',\n      'updateTask'\n    ]),\n\n    sortTasks(tasks) {\n      const isName = this.currentSort === 'entity_name'\n      const isPriority = this.currentSort === 'priority'\n      const isDueDate = this.currentSort === 'due_date'\n      const isStartDate = this.currentSort === 'start_date'\n\n      if (isName) {\n        return tasks.sort(\n          firstBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('full_entity_name')\n        )\n      } else if (isPriority) {\n        return tasks.sort(\n          firstBy('priority', -1)\n            .thenBy((a, b) => {\n              if (!a.due_date) return 1\n              else if (!b.due_date) return -1\n              else return a.due_date.localeCompare(b.due_date)\n            })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isDueDate) {\n        return tasks.sort(\n          firstBy((a, b) => {\n            if (!a.due_date) return 1\n            else if (!b.due_date) return -1\n            else return a.due_date.localeCompare(b.due_date)\n          })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isStartDate) {\n        return tasks.sort(\n          firstBy((a, b) => {\n            if (!a.start_date) return 1\n            else if (!b.start_date) return -1\n            else return a.start_date.localeCompare(b.start_date)\n          })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else {\n        return tasks.sort(\n          firstBy(this.currentSort, -1)\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      }\n    },\n\n    onAssignation(eventData) {\n      if (this.person.id === eventData.person_id) {\n        this.loadPerson(this.person.id)\n      }\n    },\n\n    resetScheduleHeight() {\n      this.$nextTick(() => {\n        if (this.isActiveTab('schedule')) {\n          const pageHeight = this.$refs.page?.offsetHeight || 0\n          const headerHeight = this.$refs.header?.offsetHeight || 0\n          const tabsHeight = this.$refs.tabs?.offsetHeight || 0\n          const searchHeight = this.$refs.search?.offsetHeight || 0\n          const queryHeight = this.$refs.query?.offsetHeight || 0\n          this.scheduleHeight =\n            pageHeight - headerHeight - tabsHeight - searchHeight - queryHeight\n          this.$refs['schedule-widget']?.resetScheduleSize()\n        }\n      })\n    },\n\n    buildProjectScheduleItem(project) {\n      return {\n        ...project,\n        avatar: true,\n        color: colors.fromString(project.name, true),\n        priority: 1,\n        expanded: true,\n        loading: false,\n        children: [],\n        editable: false\n      }\n    },\n\n    buildTaskScheduleItem(parentElement, task) {\n      let startDate = moment()\n      let endDate\n\n      if (\n        !task.start_date &&\n        !task.real_start_date &&\n        !task.due_date &&\n        !task.end_date\n      ) {\n        return null\n      }\n\n      if (task.start_date) {\n        startDate = parseDate(task.start_date)\n      } else if (task.real_start_date) {\n        startDate = parseDate(task.real_start_date)\n      }\n\n      const estimation = task.estimation\n      if (task.due_date) {\n        endDate = parseDate(task.due_date)\n      } else if (task.end_date) {\n        endDate = parseDate(task.end_date)\n      } else if (task.estimation) {\n        endDate = startDate.clone().add(estimation, 'days')\n      }\n      if (!endDate || endDate.isBefore(startDate)) {\n        endDate = startDate.clone().add(1, 'days')\n      }\n\n      const taskType = this.taskTypeMap.get(task.task_type_id)\n      return {\n        ...task,\n        name: `${task.full_entity_name} / ${taskType.name}`,\n        startDate,\n        endDate,\n        expanded: false,\n        loading: false,\n        man_days: estimation,\n        editable: false,\n        unresizable: false,\n        parentElement,\n        color: taskType.color,\n        children: []\n      }\n    },\n\n    isActiveTab(tab) {\n      return this.init && this.activeTab === tab\n    },\n\n    onSearchChange(search) {\n      search = search || this.searchField?.getValue()\n      this.setSearchInUrl(search)\n      this.setPersonTasksSearch(search)\n    },\n\n    async loadPerson(personId) {\n      this.person = this.personMap.get(personId)\n\n      if (!this.person) {\n        this.$router.push({ name: 'not-found' })\n        return\n      }\n\n      if (this.person.is_bot || !this.isCurrentUserAllowed) return\n\n      this.isTasksLoading = true\n      this.isDoneTasksLoading = true\n      this.isTasksLoadingError = false\n\n      try {\n        await this.loadPersonTasks({\n          personId: this.person.id,\n          date: this.selectedDate\n        })\n        setTimeout(() => {\n          this.$nextTick(() => {\n            this.taskList?.setScrollPosition(this.personTasksScrollPosition)\n          })\n          this.resizeHeaders()\n        }, 0)\n\n        this.isTasksLoading = false\n        try {\n          await this.loadPersonDoneTasks(this.person.id)\n          this.isDoneTasksLoading = false\n        } catch (error) {\n          this.isDoneTasksLoadingError = true\n          this.isDoneTasksLoading = false\n        }\n      } catch (error) {\n        this.isTasksLoading = false\n        this.isTasksLoadingError = true\n      }\n\n      try {\n        this.daysOff = await this.loadAggregatedPersonDaysOff({ personId })\n      } catch (error) {\n        console.error(error)\n      }\n    },\n\n    async loadTimeSpents() {\n      this.isTasksLoading = true\n      await this.loadPersonTimeSpents({\n        personId: this.person.id,\n        date: this.selectedDate\n      })\n      this.isTasksLoading = false\n    },\n\n    resizeHeaders() {\n      this.$nextTick(() => {\n        this.taskList?.resizeHeaders()\n        this.haveDoneList?.resizeHeaders()\n      })\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.savePersonTasksSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removePersonTasksSearch(searchQuery).catch(err => {\n        if (err) console.error(err)\n      })\n    },\n\n    updateActiveTab() {\n      const availableSections = [\n        'board',\n        'calendar',\n        'done',\n        'schedule',\n        'timesheets'\n      ]\n      const currentSection = this.$route.query.section\n      this.activeTab = availableSections.includes(currentSection)\n        ? currentSection\n        : 'todos'\n\n      if (this.activeTab === 'board') {\n        const currentProduction = this.userOpenProductions.find(\n          ({ id }) => id === this.$route.query.productionId\n        )\n        if (currentProduction) {\n          this.productionId = currentProduction.id\n        } else {\n          this.$router.push({\n            query: {\n              productionId: this.productionId,\n              section: this.activeTab,\n              search: this.$route.query.search\n            }\n          })\n        }\n      }\n\n      this.clearSelectedTasks()\n    },\n\n    onTimeSpentChange(timeSpentInfo) {\n      timeSpentInfo.personId = this.person.id\n      timeSpentInfo.date = this.selectedDate\n      this.setTimeSpent(timeSpentInfo)\n    },\n\n    async onDateChanged(date) {\n      this.selectedDate = moment(date).format('YYYY-MM-DD')\n      await this.loadTimeSpents()\n    },\n\n    async onSetDayOff(dayOff) {\n      this.dayOffError = false\n      try {\n        await this.setDayOff({\n          ...dayOff,\n          personId: this.person.id\n        })\n        this.$refs['timesheet-list']?.closeSetDayOffModal()\n      } catch (error) {\n        this.dayOffError = error.body?.message || true\n      }\n    },\n\n    async onUnsetDayOff() {\n      this.dayOffError = false\n      try {\n        await this.unsetDayOff()\n        this.$refs['timesheet-list']?.closeUnsetDayOffModal()\n      } catch (error) {\n        this.dayOffError = error.body?.message || true\n      }\n    },\n\n    saveTaskScheduleItem(item) {\n      if (item.estimation) {\n        item.endDate = addBusinessDays(\n          item.startDate,\n          Math.ceil(minutesToDays(this.organisation, item.estimation)) - 1,\n          item.parentElement.daysOff\n        )\n      }\n      item.man_days = item.estimation || 0\n\n      if (item.startDate && item.endDate) {\n        this.updateTask({\n          taskId: item.id,\n          data: {\n            estimation: item.estimation,\n            start_date: item.startDate.format('YYYY-MM-DD'),\n            due_date: item.endDate.format('YYYY-MM-DD')\n          }\n        })\n      }\n    },\n\n    getBoardStatusesByProduction(production) {\n      const statuses = this.getProductionTaskStatuses(production.id).filter(\n        status => {\n          if (status.for_concept) {\n            return false\n          }\n          const roles_for_board =\n            production.task_statuses_link?.[status.id]?.roles_for_board\n          return roles_for_board?.includes(this.user.role)\n        }\n      )\n      return sortTaskStatuses(statuses, production)\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.person?.name || '...'} - Kitsu`\n    }\n  },\n\n  watch: {\n    '$route.params.person_id'(personId) {\n      this.updateActiveTab()\n      if (this.person && this.person.id !== personId) {\n        this.loadPerson(personId)\n      }\n    },\n\n    '$route.query.search'(search) {\n      this.searchField?.setValue(search)\n      this.onSearchChange(search)\n    },\n\n    activeTab() {\n      this.resetScheduleHeight()\n      this.$nextTick(() => {\n        this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n      })\n    },\n\n    '$route.query.section'() {\n      this.updateActiveTab()\n    },\n\n    productionId() {\n      this.$router.push({\n        query: {\n          ...this.$route.query,\n          productionId: this.productionId\n        }\n      })\n    },\n\n    zoomLevel() {\n      this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n    }\n  },\n\n  socket: {\n    events: {\n      'task:assign'(eventData) {\n        this.onAssignation(eventData)\n      },\n\n      'task:unassign'(eventData) {\n        this.onAssignation(eventData)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n  width: 230px;\n  min-width: 230px;\n}\n\n.page {\n  overflow: hidden;\n}\n\n.email {\n  width: 210px;\n  min-width: 210px;\n}\n.phone {\n  width: 140px;\n  min-width: 140px;\n}\n.skills {\n  width: 250px;\n}\n\n.search-field {\n  margin: 25px 2em 5px 0;\n}\n\n.query-list {\n  margin-top: 0.5em;\n}\n\n.task-tabs {\n  margin-top: 2em;\n}\n\n.task-tabs ul {\n  margin: 0;\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.person {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.zoom-level {\n  margin-top: -0.5em;\n}\n\n.field {\n  margin-bottom: 0;\n}\n\n.tabs {\n  min-height: 30px;\n}\n\n.page-header {\n  margin-top: 0.5em;\n}\n\n.calendar {\n  flex: 1;\n  overflow: auto;\n}\n</style>\n"],"names":["_sfc_main","formatListMixin","searchMixin","Combobox","ComboboxNumber","ComboboxProduction","KanbanBoard","PeopleAvatar","RouteSectionTabs","Schedule","SearchField","SearchQueryList","TaskInfo","TimesheetList","TodosList","UserCalendar","moment","name","mapGetters","department","task","tasks","getFirstStartDate","getLastEndDate","item","rootMap","project","rootElement","taskItem","rootElements","rootStartDate","rootEndDate","manDays","productionsByStatus","production","status","a","b","hasAvailableBoard","mapActions","isName","isPriority","isDueDate","isStartDate","firstBy","eventData","pageHeight","headerHeight","tabsHeight","searchHeight","queryHeight","colors","parentElement","startDate","endDate","parseDate","estimation","taskType","tab","search","personId","error","searchQuery","err","availableSections","currentSection","currentProduction","id","timeSpentInfo","date","dayOff","addBusinessDays","minutesToDays","statuses","sortTaskStatuses","_hoisted_2","_hoisted_5","_hoisted_6","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","$data","_hoisted_3","_hoisted_4","_createVNode","_component_people_avatar","_toDisplayString","$options","_Fragment","_component_route_section_tabs","_ctx","_withDirectives","_hoisted_7","_component_search_field","_component_combobox_production","_cache","$event","_createBlock","_component_combobox_number","_createCommentVNode","_component_combobox","_hoisted_8","_component_search_query_list","_component_todos_list","_component_kanban_board","_component_user_calendar","_component_timesheet_list","_hoisted_9","_component_schedule","event","_hoisted_10","_hoisted_11","_component_task_info"],"mappings":"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"}