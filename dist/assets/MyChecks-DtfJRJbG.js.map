{"version":3,"file":"MyChecks-DtfJRJbG.js","sources":["../../src/components/pages/MyChecks.vue"],"sourcesContent":["<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"todos page\">\n        <div class=\"flexrow\">\n          <combobox-production\n            class=\"flexrow-item\"\n            :label=\"$t('main.production')\"\n            :production-list=\"productionList\"\n            v-model=\"productionId\"\n            v-if=\"productionList.length > 0\"\n          />\n\n          <combobox\n            class=\"flexrow-item\"\n            :label=\"$t('shots.fields.episode')\"\n            :options=\"episodeOptions\"\n            v-model=\"episodeId\"\n            v-show=\"productionId\"\n            v-if=\"episodeOptions.length > 0\"\n          />\n\n          <combobox-task-type\n            class=\"flexrow-item selector\"\n            :label=\"$t('news.task_type')\"\n            :task-type-list=\"taskTypeList\"\n            v-model=\"taskTypeId\"\n            v-if=\"taskTypeList.length > 0\"\n          />\n\n          <combobox-status\n            class=\"flexrow-item selector\"\n            :label=\"$t('news.task_status')\"\n            :task-status-list=\"taskStatusList\"\n            v-model=\"taskStatusId\"\n          />\n\n          <div class=\"field flexrow-item selector\">\n            <label class=\"label person-label\">\n              {{ $t('main.person') }}\n            </label>\n            <people-field :people=\"assignees\" small v-model=\"person\" />\n          </div>\n\n          <combobox\n            class=\"flexrow-item\"\n            :label=\"$t('main.show')\"\n            :options=\"filterOptions\"\n            locale-key-prefix=\"tasks.\"\n            v-model=\"currentFilter\"\n          />\n\n          <combobox\n            class=\"flexrow-item\"\n            :label=\"$t('main.sorted_by')\"\n            :options=\"sortOptions\"\n            locale-key-prefix=\"tasks.fields.\"\n            v-model=\"currentSort\"\n          />\n        </div>\n\n        <div class=\"flexrow\">\n          <h1 class=\"title mt1 flexrow-item filler\">\n            {{ nbTasksToCheck }}\n            {{ $tc('my_checks.title', nbTasksToCheck) }}\n          </h1>\n          <button-simple\n            class=\"flexrow-item\"\n            @click=\"isPlaylist = true\"\n            :text=\"$t('tasks.build_playlist')\"\n          />\n        </div>\n\n        <todos-list\n          :tasks=\"sortedTasks\"\n          :is-loading=\"isLoading\"\n          :is-error=\"isLoadingError\"\n          :selection-grid=\"selectionGrid\"\n          :is-to-check=\"true\"\n        />\n      </div>\n    </div>\n\n    <div class=\"column side-column\" v-if=\"nbSelectedTasks === 1\">\n      <task-info :task=\"selectedTasks.values().next().value\" />\n    </div>\n\n    <view-playlist-modal\n      :active=\"isPlaylist\"\n      :task-ids=\"sortedTasks.map(t => t.id)\"\n      @cancel=\"isPlaylist = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport moment from 'moment-timezone'\nimport { firstBy } from 'thenby'\n\nimport { populateTask } from '@/lib/models'\nimport { sortByName, sortPeople } from '@/lib/sorting'\nimport { buildSelectionGrid } from '@/lib/selection'\nimport { parseDate } from '@/lib/time'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxStatus from '@/components/widgets/ComboboxStatus.vue'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction.vue'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\nimport TodosList from '@/components/lists/TodosList.vue'\nimport ViewPlaylistModal from '@/components/modals/ViewPlaylistModal.vue'\n\nexport default {\n  name: 'my-checks',\n\n  components: {\n    ButtonSimple,\n    Combobox,\n    ComboboxProduction,\n    ComboboxStatus,\n    ComboboxTaskType,\n    PeopleField,\n    TaskInfo,\n    TodosList,\n    ViewPlaylistModal\n  },\n\n  data() {\n    return {\n      currentFilter: 'all_tasks',\n      currentSort: 'priority',\n      episodeId: '',\n      isLoading: false,\n      isLoadingError: false,\n      isPlaylist: false,\n      filterOptions: ['all_tasks', 'due_this_week'].map(name => ({\n        label: name,\n        value: name\n      })),\n      person: {},\n      productionId: '',\n      productionList: [],\n      selectionGrid: {},\n      sortOptions: [\n        'entity_name',\n        'priority',\n        'due_date',\n        'estimation',\n        'last_comment_date'\n      ].map(name => ({ label: name, value: name })),\n      taskStatusId: '',\n      taskTypeId: '',\n      taskStatusList: [],\n      taskTypeList: [],\n      tasksToCheck: []\n    }\n  },\n\n  mounted() {\n    this.isLoading = true\n    this.clearSelectedTasks()\n    this.loadTasksToCheck()\n      .then(tasks => {\n        if (tasks) {\n          tasks.forEach(populateTask)\n          this.buildSelectionGrid(tasks)\n          this.resetProductionList(tasks)\n          this.resetTaskTypeList(tasks)\n          this.resetTaskStatusList(tasks)\n          this.tasksToCheck = tasks\n          this.isLoading = false\n        }\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  },\n\n  computed: {\n    ...mapGetters([\n      'nbSelectedTasks',\n      'personMap',\n      'productionMap',\n      'selectedTasks',\n      'taskStatusMap',\n      'taskTypeMap'\n    ]),\n\n    nbTasksToCheck() {\n      return this.sortedTasks.filter(task => {\n        return this.taskStatusMap.get(task.task_status_id).is_feedback_request\n      }).length\n    },\n\n    assignees() {\n      const assignees = []\n      const assigneesMap = {}\n      this.tasksToCheck.forEach(task => {\n        task.assignees.forEach(personId => {\n          if (!assigneesMap[personId]) {\n            assignees.push(this.personMap.get(personId))\n            assigneesMap[personId] = true\n          }\n        })\n      })\n      return sortPeople(assignees)\n    },\n\n    episodeOptions() {\n      const episodeOptions = []\n      const episodeMap = {}\n      if (!this.productionId) return []\n      const production = this.productionMap.get(this.productionId)\n      if (production.production_type !== 'tvshow') return []\n      this.tasksToCheck\n        .filter(t => t.project_id === this.productionId)\n        .forEach(task => {\n          if (\n            task.episode_id &&\n            !episodeMap[task.episode_id] &&\n            task.entity_type_name === 'Shot'\n          ) {\n            episodeMap[task.episode_id] = true\n            episodeOptions.push({\n              label: task.episode_name,\n              value: task.episode_id\n            })\n          }\n        })\n      return [\n        {\n          label: this.$t('main.all'),\n          value: 'all'\n        }\n      ].concat(\n        episodeOptions.sort((a, b) =>\n          a.label.localeCompare(b.label, undefined, {\n            numeric: true\n          })\n        )\n      )\n    },\n\n    filteredTasks() {\n      let tasks =\n        this.currentFilter === 'all_tasks'\n          ? [...this.tasksToCheck]\n          : this.tasksToCheck.filter(t => {\n              const dueDate = parseDate(t.due_date)\n              return moment().startOf('week').isSame(dueDate, 'week')\n            })\n      if (this.productionId !== '') {\n        tasks = tasks.filter(t => t.project_id === this.productionId)\n      }\n      if (this.taskTypeId !== '') {\n        tasks = tasks.filter(t => t.task_type_id === this.taskTypeId)\n      }\n      if (this.taskStatusId !== '') {\n        tasks = tasks.filter(t => t.task_status_id === this.taskStatusId)\n      }\n      if (this.person && this.person.id) {\n        tasks = tasks.filter(t => t.assignees.includes(this.person.id))\n      }\n      if (this.productionId && this.episodeId && this.episodeId !== 'all') {\n        tasks = tasks.filter(t => t.episode_id === this.episodeId)\n      }\n      return tasks\n    },\n\n    sortedTasks() {\n      const isName = this.currentSort === 'entity_name'\n      const isPriority = this.currentSort === 'priority'\n      const isDueDate = this.currentSort === 'due_date'\n      const tasks = [...this.filteredTasks]\n      if (isName) {\n        return tasks.sort(\n          firstBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('full_entity_name')\n        )\n      } else if (isPriority) {\n        return tasks.sort(\n          firstBy('priority', -1)\n            .thenBy((a, b) => {\n              if (!a.due_date) return 1\n              else if (!b.due_date) return -1\n              else return a.due_date.localeCompare(b.due_date)\n            })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isDueDate) {\n        return tasks.sort(\n          firstBy((a, b) => {\n            if (!a.due_date) return 1\n            else if (!b.due_date) return -1\n            else return a.due_date.localeCompare(b.due_date)\n          })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else {\n        return tasks.sort(\n          firstBy(this.currentSort, -1)\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['clearSelectedTasks', 'loadTasksToCheck']),\n\n    buildSelectionGrid(tasks) {\n      this.selectionGrid = buildSelectionGrid(tasks.length, 1)\n    },\n\n    resetProductionList(tasks = []) {\n      const productionIds = {}\n      const productionList = []\n      tasks.forEach(task => {\n        if (!productionIds[task.project_id]) {\n          productionIds[task.project_id] = true\n          productionList.push(this.productionMap.get(task.project_id))\n        }\n      })\n      this.productionList = [\n        {\n          id: '',\n          name: this.$t('main.all')\n        }\n      ].concat(sortByName(productionList))\n    },\n\n    resetTaskTypeList(tasks) {\n      const taskTypeIds = {}\n      const taskTypeList = []\n      tasks.forEach(task => {\n        if (!taskTypeIds[task.task_type_id]) {\n          taskTypeIds[task.task_type_id] = true\n          taskTypeList.push(this.taskTypeMap.get(task.task_type_id))\n        }\n      })\n      this.taskTypeList = [\n        {\n          id: '',\n          color: '#999',\n          name: this.$t('news.all')\n        }\n      ].concat(sortByName(taskTypeList))\n    },\n\n    resetTaskStatusList(tasks) {\n      const taskStatusIds = {}\n      const taskStatusList = []\n      tasks.forEach(task => {\n        if (!taskStatusIds[task.task_status_id]) {\n          taskStatusIds[task.task_status_id] = true\n          taskStatusList.push(this.taskStatusMap.get(task.task_status_id))\n        }\n      })\n      this.taskStatusList = [\n        {\n          id: '',\n          color: '#999',\n          name: this.$t('news.all'),\n          short_name: this.$t('news.all')\n        }\n      ].concat(sortByName(taskStatusList))\n    }\n  },\n\n  watch: {\n    productionId() {\n      this.episodeId = ''\n    },\n\n    nbSelectedTasks() {\n      if (this.nbSelectedTasks === 0) {\n        this.buildSelectionGrid(this.sortedTasks)\n      }\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.$t('tasks.my_checks')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-list {\n  margin-top: 0;\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.todos {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.push-right {\n  flex: 1;\n  text-align: right;\n}\n\n.field {\n  margin-bottom: 0;\n}\n</style>\n"],"names":["_sfc_main","ButtonSimple","Combobox","ComboboxProduction","ComboboxStatus","ComboboxTaskType","PeopleField","TaskInfo","TodosList","ViewPlaylistModal","name","tasks","populateTask","err","mapGetters","task","assignees","assigneesMap","personId","sortPeople","episodeOptions","episodeMap","t","a","b","dueDate","parseDate","moment","isName","isPriority","isDueDate","firstBy","mapActions","buildSelectionGrid","productionIds","productionList","sortByName","taskTypeIds","taskTypeList","taskStatusIds","taskStatusList","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_openBlock","_createElementBlock","_createElementVNode","$data","_createBlock","_component_combobox_production","_ctx","_cache","$event","_createCommentVNode","$options","_component_combobox","_component_combobox_task_type","_createVNode","_component_combobox_status","_toDisplayString","_component_people_field","_component_button_simple","_component_todos_list","_hoisted_9","_component_task_info","_component_view_playlist_modal"],"mappings":"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"}