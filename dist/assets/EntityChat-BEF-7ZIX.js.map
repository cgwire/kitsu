{"version":3,"file":"EntityChat-BEF-7ZIX.js","sources":["../../src/components/pages/entities/EntityChatDays.vue","../../src/components/pages/entities/EntityChat.vue"],"sourcesContent":["<template>\n  <div class=\"messages\" ref=\"messages\">\n    <div class=\"day-messages\" :key=\"day.title\" v-for=\"day in messageList\">\n      <div class=\"day-title\">\n        <span>\n          {{ day.title }}\n        </span>\n      </div>\n      <div\n        class=\"message\"\n        :key=\"chatMessage.id\"\n        v-for=\"chatMessage in day.messages\"\n      >\n        <people-avatar\n          class=\"message-avatar flexrow-item\"\n          :person=\"personMap.get(chatMessage.data.person_id)\"\n          :size=\"30\"\n          :font-size=\"15\"\n        />\n        <div class=\"message-content\">\n          <div class=\"message-header-wrapper flexrow\">\n            <div class=\"message-sender mr05\">\n              {{ personMap.get(chatMessage.data.person_id).name }}\n            </div>\n            <div class=\"message-date\">\n              {{ renderDate(chatMessage.data.created_at) }}\n            </div>\n          </div>\n\n          <div\n            class=\"message-text\"\n            :key=\"'submessage-' + messageText.id\"\n            v-for=\"messageText in chatMessage.texts\"\n          >\n            <div\n              v-html=\"\n                renderComment(\n                  messageText ? messageText.text : '',\n                  [],\n                  [],\n                  personMap,\n                  departmentMap\n                )\n              \"\n            ></div>\n            <div class=\"attachments\" v-if=\"messageText\">\n              <img\n                class=\"attachment-thumbnail\"\n                :key=\"attachment.id\"\n                :src=\"getAttachmentThumbnailPath(attachment)\"\n                @click=\"currentAttachment = attachment\"\n                v-for=\"attachment in pictureAttachments(\n                  messageText.attachment_files\n                )\"\n              />\n              <a\n                class=\"attachment\"\n                target=\"_blank\"\n                :key=\"attachment.id\"\n                :href=\"getDownloadAttachmentPath(attachment)\"\n                v-for=\"attachment in fileAttachments(\n                  messageText.attachment_files\n                )\"\n              >\n                {{ attachment.name }}\n              </a>\n            </div>\n            <div\n              class=\"delete-message-button\"\n              @click=\"$emit('delete-message', chatMessage.data.id)\"\n              v-if=\"chatMessage.data.person_id === user.id\"\n            >\n              <x-icon :size=\"12\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <preview-modal\n      :active=\"currentAttachment != null\"\n      :attachment=\"currentAttachment\"\n      @cancel=\"currentAttachment = null\"\n    />\n  </div>\n</template>\n\n<script>\nimport { XIcon } from 'lucide-vue-next'\nimport moment from 'moment-timezone'\nimport { mapGetters } from 'vuex'\n\nimport { domMixin } from '@/components/mixins/dom'\nimport {\n  getAttachmentThumbnailPath,\n  getDownloadAttachmentPath\n} from '@/lib/path'\nimport { parseDate } from '@/lib/time'\nimport { renderComment } from '@/lib/render'\nimport files from '@/lib/files'\n\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport PreviewModal from '@/components/modals/PreviewModal.vue'\n\nexport default {\n  name: 'entity-chat-days',\n\n  mixins: [domMixin],\n\n  components: {\n    PeopleAvatar,\n    PreviewModal,\n    XIcon\n  },\n\n  emits: ['delete-message'],\n\n  data() {\n    return {\n      currentAttachment: null\n    }\n  },\n\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  computed: {\n    ...mapGetters(['departmentMap', 'personMap', 'user']),\n\n    messageList() {\n      const messages = [...this.messages].sort((a, b) =>\n        moment(a.created_at).isAfter(moment(b.created_at))\n      )\n      const dayList = []\n      let lastMessage = { data: null }\n      let lastDay = null\n\n      messages.forEach(message => {\n        const messageDate = moment(message.created_at).tz(this.user.timezone)\n        if (lastDay && messageDate.format('YYYY-MM-DD') === lastDay.date) {\n          if (\n            lastMessage &&\n            lastMessage.data &&\n            message.person_id === lastMessage.data.person_id &&\n            moment(message.created_at).diff(lastMessage.data.created_at, 'm') <\n              5\n          ) {\n            lastMessage.texts.push(message)\n          } else {\n            const element = {\n              data: message,\n              texts: [message ? message : '']\n            }\n            lastMessage = element\n            lastDay.messages.push(element)\n          }\n        } else {\n          const element = {\n            data: message,\n            texts: [message ? message : '']\n          }\n          lastDay = {\n            title: messageDate.format('LL'),\n            date: messageDate.format('YYYY-MM-DD'),\n            messages: [element]\n          }\n          lastMessage = element\n          dayList.push(lastDay)\n        }\n      })\n\n      return dayList.reverse()\n    }\n  },\n\n  methods: {\n    renderComment,\n\n    renderDate(date) {\n      date = moment(parseDate(date)).tz(this.user.timezone)\n      return date.tz(this.user.timezone).format('HH:mm')\n    },\n\n    getAttachmentThumbnailPath,\n\n    getDownloadAttachmentPath,\n\n    pictureAttachments(attachments) {\n      if (!attachments) return []\n      return attachments\n        .filter(attachment =>\n          files.IMG_EXTENSIONS.includes(attachment.extension)\n        )\n        .sort((a, b) =>\n          a.name.localeCompare(b.name, undefined, {\n            numeric: true\n          })\n        )\n    },\n\n    fileAttachments(attachments) {\n      if (!attachments) return []\n      return attachments\n        .filter(\n          attachment => !files.IMG_EXTENSIONS.includes(attachment.extension)\n        )\n        .sort((a, b) =>\n          a.name.localeCompare(b.name, undefined, {\n            numeric: true\n          })\n        )\n    },\n\n    scrollToBottom() {\n      this.$refs.messages.scrollTop = this.$refs.messages.offsetHeight\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .messages {\n    background-color: var(--background-alt);\n    .message-box {\n      textarea {\n        background: var(--background-alt);\n      }\n    }\n  }\n}\n\n.day-messages {\n  width: 100%;\n}\n\n.day-title {\n  border-bottom: 1px solid var(--border-alt);\n  margin-top: 2em;\n  margin-bottom: 2em;\n  position: relative;\n\n  span {\n    background: var(--background-alt);\n    left: 50%;\n    padding: 0 1em;\n    position: absolute;\n    top: -10px;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n.messages {\n  align-items: flex-end;\n  color: var(--text);\n  display: flex;\n  flex: 1;\n  flex-direction: column-reverse;\n  overflow: auto;\n  padding-bottom: 1em;\n\n  .message {\n    align-items: flex-start;\n    display: flex;\n    background: transparent;\n    margin-bottom: 0.5rem;\n    width: 100%;\n\n    .message-avatar {\n      margin-left: 10px;\n      margin-top: 6px;\n\n      &.flexrow-item {\n        margin-right: 0.2rem;\n      }\n    }\n\n    .message-header-wrapper {\n      align-items: flex-end;\n      display: flex;\n      margin-left: 0.5rem;\n      margin-top: 0.2rem;\n\n      .message-date {\n        font-size: 10px;\n        line-height: 20px;\n      }\n    }\n\n    .message-sender {\n      font-weight: bold;\n    }\n\n    .message-content {\n      margin-left: 0.2rem;\n      width: 100%;\n    }\n\n    .attachment-thumbnail {\n      border-radius: 10px;\n      cursor: pointer;\n      height: 100px;\n      margin-right: 5px;\n      margin-top: 10px;\n      width: 100px;\n    }\n\n    .message-text {\n      border-radius: 4px;\n      margin-right: 10px;\n      padding: 0.1em 0.5em;\n      position: relative;\n\n      .delete-message-button {\n        cursor: pointer;\n        display: none;\n        position: absolute;\n        right: 5px;\n        top: 0;\n      }\n\n      &:hover {\n        background-color: var(--background-alt);\n        .delete-message-button {\n          display: block;\n        }\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"mt1 entity-chat\">\n    <template v-if=\"!entity\">\n      <p>\n        {{ $t('chats.no_chat') }}\n      </p>\n      <div class=\"has-text-centered\" v-if=\"mainConfig.indexer_configured\">\n        <button-simple\n          :text=\"$t('chats.search_entity')\"\n          @click=\"$router.push('entity-search')\"\n        />\n      </div>\n    </template>\n    <template v-else>\n      <div class=\"participants flexrow\">\n        <people-avatar\n          class=\"flexrow-item\"\n          :key=\"participant.id\"\n          :person=\"participant\"\n          :size=\"20\"\n          :font-size=\"10\"\n          v-for=\"participant in participantList\"\n        />\n        <span class=\"filler\"></span>\n        <button-simple\n          class=\"flexrow-item\"\n          :text=\"$t('chats.leave')\"\n          :is-loading=\"loading.leave\"\n          @click=\"leaveChat\"\n          v-if=\"isInChat\"\n        />\n      </div>\n      <div class=\"has-text-centered filler\" v-if=\"loading.chat\">\n        <spinner class=\"mt1\" />\n      </div>\n      <entity-chat-days\n        ref=\"messages\"\n        :messages=\"messages\"\n        @delete-message=\"showConfirmDeleteMessage\"\n        v-else\n      />\n      <div class=\"join-chat\" v-if=\"!isInChat\">\n        <button class=\"button\" :is-loading=\"loading.join\" @click=\"joinChat\">\n          {{ $t('chats.join') }}\n        </button>\n      </div>\n      <div class=\"message-box\" v-else>\n        <div>\n          <textarea\n            id=\"message-box\"\n            ref=\"messageBox\"\n            :disabled=\"loading.send\"\n            @keydown.enter.prevent=\"sendMessage\"\n            v-focus\n            v-model=\"currentMessage\"\n          >\n          </textarea>\n          <div class=\"buttons\">\n            <emoji-button @select=\"onSelectEmoji\" />\n            <button-simple\n              class=\"attach-button\"\n              icon=\"attach\"\n              @click=\"modals.addAttachment = true\"\n            />\n            <div class=\"filler\"></div>\n            <button-simple\n              class=\"send-button\"\n              icon=\"send\"\n              :is-loading=\"loading.send\"\n              @click=\"sendMessage\"\n            />\n          </div>\n        </div>\n        <div class=\"attachments\" v-if=\"attachments.length > 0\">\n          <div\n            class=\"attachment-name\"\n            :key=\"attachment.name\"\n            v-for=\"attachment in attachments\"\n          >\n            {{ attachment.get('file').name }}\n            <span @click=\"removeAttachment(attachment)\">\n              <x-icon :size=\"8\" />\n            </span>\n          </div>\n        </div>\n      </div>\n    </template>\n\n    <add-attachment-modal\n      ref=\"add-attachment-modal\"\n      :active=\"modals.addAttachment\"\n      :is-loading=\"loading.addAttachment\"\n      :is-error=\"errors.addAttachment\"\n      :title=\"name\"\n      @cancel=\"closeAttachmentModal\"\n      @confirm=\"addAttachment\"\n    />\n\n    <confirm-modal\n      :active=\"modals.deleteMessage\"\n      :confirm-button-text=\"$t('chats.delete_message_confirm')\"\n      :text=\"$t('chats.delete_message')\"\n      :is-loading=\"loading.deleteMessage\"\n      :is-error=\"errors.deleteMessage\"\n      @cancel=\"modals.deleteMessage = false\"\n      @confirm=\"deleteMessage\"\n    />\n  </div>\n</template>\n\n<script>\nimport { XIcon } from 'lucide-vue-next'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { sortPeople } from '@/lib/sorting'\nimport stringHelpers from '@/lib/string'\nimport { domMixin } from '@/components/mixins/dom'\n\nimport AddAttachmentModal from '@/components/modals/AddAttachmentModal.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport ConfirmModal from '@/components/modals/ConfirmModal.vue'\nimport EmojiButton from '@/components/widgets/EmojiButton.vue'\nimport EntityChatDays from '@/components/pages/entities/EntityChatDays.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\n\nexport default {\n  name: 'entity-chat',\n\n  mixins: [domMixin],\n\n  components: {\n    AddAttachmentModal,\n    ButtonSimple,\n    ConfirmModal,\n    EmojiButton,\n    EntityChatDays,\n    PeopleAvatar,\n    Spinner,\n    XIcon\n  },\n\n  data() {\n    return {\n      attachments: [],\n      chat: {},\n      errors: {\n        addAttachment: false,\n        chat: false,\n        deleteMessage: false,\n        join: false,\n        leave: false,\n        send: false\n      },\n      loading: {\n        addAttachment: false,\n        chat: false,\n        deleteMessage: false,\n        join: false,\n        leave: false,\n        send: false\n      },\n      modals: {\n        addAttachment: false,\n        deleteMessage: false\n      },\n      participants: [],\n      currentMessage: '',\n      messages: [],\n      messageMap: new Map()\n    }\n  },\n\n  props: {\n    entity: {\n      type: Object,\n      default: () => {}\n    },\n    name: {\n      type: String,\n      default: ''\n    }\n  },\n\n  mounted() {\n    if (!this.entity) return\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters(['mainConfig', 'personMap', 'user']),\n\n    isInChat() {\n      return this.participants.includes(this.user.id)\n    },\n\n    participantList() {\n      return sortPeople(this.participants.map(pid => this.personMap.get(pid)))\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'deleteChatMessage',\n      'getChatMessage',\n      'getEntityChat',\n      'getEntityChatMessages',\n      'joinEntityChat',\n      'leaveEntityChat',\n      'sendChatMessage'\n    ]),\n\n    async reset() {\n      this.loading.chat = true\n      this.errors.chat = false\n      try {\n        this.chat = await this.getEntityChat(this.entity.id)\n        this.messages = await this.getEntityChatMessages(this.entity.id)\n        this.messages.forEach(m => this.messageMap.set(m.id, m))\n        this.participants = this.chat.participants || []\n      } catch (e) {\n        this.errors.chat = true\n        console.error(e)\n      } finally {\n        this.loading.chat = false\n      }\n    },\n\n    async joinChat() {\n      this.loading.join = true\n      this.errors.join = false\n      try {\n        await this.joinEntityChat(this.entity.id)\n      } catch (e) {\n        this.errors.join = true\n        console.error(e)\n      } finally {\n        this.loading.join = false\n      }\n    },\n\n    async leaveChat() {\n      this.loading.leave = true\n      this.errors.leave = false\n      try {\n        await this.leaveEntityChat(this.entity.id)\n      } catch (e) {\n        this.errors.leave = true\n        console.error(e)\n      } finally {\n        this.loading.leave = false\n      }\n    },\n\n    async sendMessage(event) {\n      if (event && event.keyCode === 13 && event.shiftKey) {\n        this.currentMessage += '\\n'\n        return\n      }\n      this.errors.send = false\n      this.loading.send = true\n      try {\n        const message = await this.sendChatMessage({\n          entityId: this.entity.id,\n          message: this.currentMessage,\n          attachments: this.attachments\n        })\n        this.currentMessage = ''\n        this.attachments = []\n        this.messages.push(message)\n        this.messageMap.set(message.id, message)\n        this.$refs.messages.scrollToBottom()\n        this.$nextTick(() => {\n          this.$refs.messageBox.focus()\n        })\n      } catch (e) {\n        this.errors.send = true\n        console.error(e)\n      } finally {\n        this.loading.send = false\n      }\n    },\n\n    showConfirmDeleteMessage(messageId) {\n      this.modals.deleteMessage = true\n      this.errors.deleteMessage = false\n      this.loading.deleteMessage = false\n      this.messageToDeleteId = messageId\n    },\n\n    async deleteMessage() {\n      const messageId = this.messageToDeleteId\n      this.errors.deleteMessage = false\n      try {\n        this.loading.deleteMessage = true\n        this.messages = this.messages.filter(m => m.id !== messageId)\n        this.messageMap.delete(messageId)\n        await this.deleteChatMessage({\n          entityId: this.entity.id,\n          messageId\n        })\n        this.modals.deleteMessage = false\n        this.messageToDeleteId = null\n      } catch (e) {\n        this.errors.deleteMessage = true\n        console.error(e)\n      } finally {\n        this.loading.deleteMessage = false\n      }\n    },\n\n    focusMessageBox() {\n      const messageBox = this.$refs.messageBox\n      if (messageBox) messageBox.focus()\n    },\n\n    addAttachment(forms) {\n      this.attachments = this.attachments.concat(forms)\n      this.closeAttachmentModal()\n    },\n\n    closeAttachmentModal() {\n      this.modals.addAttachment = false\n    },\n\n    removeAttachment(form) {\n      this.attachments = this.attachments.filter(f => f !== form)\n    },\n\n    onSelectEmoji(emoji) {\n      this.currentMessage = stringHelpers.insertInTextArea(\n        this.$refs.messageBox,\n        emoji.i\n      )\n    }\n  },\n\n  socket: {\n    events: {\n      'chat:joined'(eventData) {\n        if (\n          eventData.chat_id === this.chat.id &&\n          !this.participants.includes(eventData.person_id)\n        ) {\n          this.participants.push(eventData.person_id)\n        }\n      },\n\n      'chat:left'(eventData) {\n        if (\n          eventData.chat_id === this.chat.id &&\n          this.participants.includes(eventData.person_id)\n        ) {\n          this.participants = this.participants.filter(\n            pId => pId !== eventData.person_id\n          )\n        }\n      },\n\n      async 'chat:new-message'(eventData) {\n        if (eventData.chat_id === this.chat.id) {\n          const message = await this.getChatMessage({\n            entityId: this.entity.id,\n            messageId: eventData.chat_message_id\n          })\n          if (!this.messageMap.has(eventData.chat_message_id)) {\n            this.messageMap.set(message.id, message)\n            this.messages.push(message)\n            this.focusMessageBox()\n          }\n        }\n      },\n\n      'chat:deleted-message'(eventData) {\n        if (eventData.chat_id === this.chat.id) {\n          this.messages = this.messages.filter(\n            m => m.id !== eventData.message_id\n          )\n        }\n      }\n    }\n  },\n\n  watch: {\n    entity() {\n      if (this.entity) this.reset()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .entity-chat {\n    .participants {\n      background: var(--background);\n    }\n\n    .messages {\n      background-color: var(--background-alt);\n      .message-box {\n        textarea {\n          background: var(--background-alt);\n        }\n      }\n    }\n  }\n}\n\n.entity-chat {\n  border-radius: 16px;\n  border: 1px solid var(--border-alt);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 100%;\n  overflow: hidden;\n\n  p {\n    color: var(--text);\n    padding: 2em;\n    text-align: center;\n  }\n\n  .participants {\n    background: var(--background-alt);\n    border-bottom: 2px solid var(--border-alt);\n    border-top-left-radius: 17px;\n    border-top-right-radius: 17px;\n    display: flex;\n    justify-content: space-between;\n    min-height: 30px;\n    padding: 5px 10px;\n\n    .flexrow-item {\n      margin-right: 3px;\n    }\n  }\n\n  .join-chat {\n    text-align: center;\n    width: 100%;\n\n    .button {\n      width: 100%;\n    }\n  }\n\n  .message-box {\n    position: relative;\n\n    textarea {\n      background: var(--background);\n      box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.1);\n      font-size: 14px;\n      margin-bottom: -5px;\n      height: 60px;\n      padding: 10px;\n      width: 100%;\n    }\n\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 5px;\n      margin-top: 5px;\n      padding-left: 5px;\n      padding-right: 5px;\n    }\n  }\n}\n\n.attachments {\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 5px;\n  padding: 5px;\n\n  .attachment-name {\n    background: var(--background-alt);\n    border-radius: 10px;\n    color: var(--text);\n    cursor: pointer;\n    font-size: 12px;\n    margin-right: 5px;\n    padding: 5px;\n  }\n}\n</style>\n"],"names":["_sfc_main","domMixin","PeopleAvatar","PreviewModal","XIcon","mapGetters","messages","a","b","moment","dayList","lastMessage","lastDay","message","messageDate","element","renderComment","date","parseDate","getAttachmentThumbnailPath","getDownloadAttachmentPath","attachments","attachment","files","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_openBlock","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","day","_createElementVNode","_toDisplayString","chatMessage","_createVNode","_component_people_avatar","_ctx","messageText","_hoisted_8","$event","$data","_createCommentVNode","_component_x_icon","_component_preview_modal","AddAttachmentModal","ButtonSimple","ConfirmModal","EmojiButton","EntityChatDays","Spinner","sortPeople","pid","mapActions","m","event","e","messageId","messageBox","forms","form","f","emoji","stringHelpers","eventData","pId","$props","participant","_createBlock","_component_button_simple","_component_spinner","_component_entity_chat_days","_cache","_withKeys","_withModifiers","args","_createTextVNode","_component_emoji_button","_component_add_attachment_modal","_component_confirm_modal"],"mappings":"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"}