{"version":3,"file":"Sequences-B1ZqH2Xt.js","sources":["../../src/components/lists/SequenceList.vue","../../src/components/pages/Sequences.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\" ref=\"body\" @scroll.passive=\"onBodyScroll\">\n      <table-header-menu\n        ref=\"headerMenu\"\n        :is-minimized=\"hiddenColumns[lastHeaderMenuDisplayed]\"\n        :is-edit-allowed=\"isCurrentUserManager\"\n        :is-sticked=\"stickedColumns[lastHeaderMenuDisplayed]\"\n        @minimize-clicked=\"onMinimizeColumnToggled()\"\n        @delete-all-clicked=\"onDeleteAllTasksClicked()\"\n        @sort-by-clicked=\"onSortByTaskTypeClicked()\"\n        @select-column=\"onSelectColumn('sequence')\"\n        @toggle-stick=\"stickColumnClicked()\"\n      />\n\n      <table-metadata-header-menu\n        ref=\"headerMetadataMenu\"\n        :is-edit-allowed=\"isCurrentUserManager\"\n        :is-sticked=\"stickedColumns[lastMetadaDataHeaderMenuDisplayed]\"\n        @edit-clicked=\"onEditMetadataClicked()\"\n        @delete-clicked=\"onDeleteMetadataClicked()\"\n        @sort-by-clicked=\"onSortByMetadataClicked()\"\n        @toggle-stick=\"metadataStickColumnClicked($event)\"\n      />\n\n      <table class=\"datatable\">\n        <thead\n          class=\"datatable-head\"\n          id=\"datatable-sequence\"\n          v-columns-resizable\n        >\n          <tr>\n            <th\n              scope=\"col\"\n              class=\"name sequence-name datatable-row-header\"\n              ref=\"th-sequence\"\n            >\n              <div class=\"flexrow\">\n                <span class=\"flexrow-item\">\n                  {{ $t('sequences.fields.name') }}\n                </span>\n                <button-simple\n                  class=\"is-small flexrow-item\"\n                  icon=\"plus\"\n                  :text=\"''\"\n                  @click=\"onAddMetadataClicked\"\n                  v-if=\"\n                    (isCurrentUserManager || isCurrentUserSupervisor) &&\n                    !isLoading\n                  \"\n                />\n              </div>\n            </th>\n            <template v-if=\"displaySettings.showInfos\">\n              <metadata-header\n                :ref=\"`editor-${j}`\"\n                :key=\"descriptor.id\"\n                :descriptor=\"descriptor\"\n                :left=\"\n                  offsets['editor-' + j] ? `${offsets['editor-' + j]}px` : '0'\n                \"\n                is-stick\n                :style=\"{\n                  'z-index': 1001\n                }\"\n                @show-metadata-header-menu=\"\n                  event => showMetadataHeaderMenu(descriptor.id, event)\n                \"\n                v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n              />\n            </template>\n            <validation-header\n              :ref=\"`validation-${columnIndexInGrid}`\"\n              :key=\"columnId\"\n              :hidden-columns=\"hiddenColumns\"\n              :column-id=\"columnId\"\n              :validation-style=\"getValidationStyle(columnId)\"\n              :left=\"\n                offsets['validation-' + columnIndexInGrid]\n                  ? `${offsets['validation-' + columnIndexInGrid]}px`\n                  : '0'\n              \"\n              type=\"editor\"\n              is-stick\n              @show-header-menu=\"\n                event => showHeaderMenu(columnId, columnIndexInGrid, event)\n              \"\n              v-for=\"(\n                columnId, columnIndexInGrid\n              ) in stickedDisplayedValidationColumns\"\n            />\n\n            <th\n              scope=\"col\"\n              class=\"description selectable\"\n              v-if=\"\n                !isCurrentUserClient &&\n                displaySettings.showInfos &&\n                isSequenceDescription\n              \"\n            >\n              {{ $t('sequences.fields.description') }}\n            </th>\n\n            <th\n              scope=\"col\"\n              class=\"resolution\"\n              v-if=\"isSequenceResolution && displaySettings.showInfos\"\n            >\n              {{ $t('shots.fields.resolution') }}\n            </th>\n\n            <template v-if=\"displaySettings.showInfos\">\n              <metadata-header\n                :key=\"descriptor.id\"\n                :descriptor=\"descriptor\"\n                @show-metadata-header-menu=\"\n                  event => showMetadataHeaderMenu(descriptor.id, event)\n                \"\n                v-for=\"descriptor in nonStickedVisibleMetadataDescriptors\"\n              />\n            </template>\n            <th\n              scope=\"col\"\n              class=\"time-spent\"\n              ref=\"th-spent\"\n              v-if=\"\n                !isCurrentUserClient &&\n                displaySettings.showInfos &&\n                isSequenceTime &&\n                metadataDisplayHeaders.timeSpent\n              \"\n            >\n              {{ $t('sequences.fields.time_spent') }}\n            </th>\n            <th\n              scope=\"col\"\n              class=\"estimation\"\n              :title=\"$t('main.estimation')\"\n              ref=\"th-spent\"\n              v-if=\"\n                !isCurrentUserClient &&\n                displaySettings.showInfos &&\n                isSequenceEstimation &&\n                metadataDisplayHeaders.estimation\n              \"\n            >\n              {{ $t('main.estimation_short') }}\n            </th>\n\n            <template v-if=\"!isLoading\">\n              <validation-header\n                :key=\"columnId\"\n                :hidden-columns=\"hiddenColumns\"\n                :column-id=\"columnId\"\n                :validation-style=\"getValidationStyle(columnId)\"\n                type=\"sequences\"\n                @show-header-menu=\"\n                  event => {\n                    showHeaderMenu(columnId, columnIndexInGrid, event)\n                  }\n                \"\n                v-for=\"(\n                  columnId, columnIndexInGrid\n                ) in nonStickedDisplayedValidationColumns\"\n              />\n            </template>\n            <th scope=\"col\" class=\"actions\" ref=\"actionsSection\">\n              <button-simple\n                :class=\"{\n                  'is-small': true,\n                  highlighted: isEmptyTask\n                }\"\n                icon=\"plus\"\n                :text=\"$t('tasks.create_tasks')\"\n                @click=\"$emit('create-tasks')\"\n                v-if=\"\n                  isCurrentUserManager &&\n                  displayedSequences.length > 0 &&\n                  !isLoading\n                \"\n              />\n\n              <table-metadata-selector-menu\n                :descriptors=\"sequenceMetadataDescriptors\"\n                :exclude=\"{\n                  timeSpent: !isSequenceTime,\n                  estimation: !isSequenceEstimation\n                }\"\n                namespace=\"sequences\"\n                v-model=\"metadataDisplayHeaders\"\n                v-show=\"columnSelectorDisplayed\"\n                v-if=\"displaySettings.showInfos\"\n              />\n\n              <button-simple\n                class=\"is-small is-pulled-right mr05\"\n                icon=\"down\"\n                @click=\"toggleColumnSelector\"\n                v-if=\"\n                  sequenceMetadataDescriptors.length > 0 &&\n                  displaySettings.showInfos\n                \"\n              />\n            </th>\n          </tr>\n        </thead>\n        <tbody\n          class=\"datatable-body\"\n          @mousedown=\"startBrowsing\"\n          @touchstart=\"startBrowsing\"\n        >\n          <template v-if=\"!isLoading && isListVisible\">\n            <tr\n              class=\"datatable-row\"\n              scope=\"row\"\n              :key=\"sequence.id\"\n              :class=\"{ canceled: sequence.canceled }\"\n              v-for=\"(sequence, i) in displayedSequences\"\n            >\n              <th\n                :class=\"{\n                  'datatable-row-header': true,\n                  'sequence-name': true,\n                  name: true,\n                  strong: !sequence.canceled\n                }\"\n              >\n                <div class=\"flexrow\">\n                  <entity-thumbnail\n                    :entity=\"sequence\"\n                    :width=\"displaySettings.bigThumbnails ? 150 : 50\"\n                    :height=\"displaySettings.bigThumbnails ? 100 : 33\"\n                    :empty-width=\"displaySettings.bigThumbnails ? 150 : 50\"\n                    :empty-height=\"displaySettings.bigThumbnails ? 100 : 34\"\n                  />\n                  <router-link\n                    tabindex=\"-1\"\n                    :title=\"sequence.name\"\n                    :to=\"sequencePath(sequence.id)\"\n                  >\n                    {{ sequence.name }}\n                  </router-link>\n                </div>\n              </th>\n\n              <!-- Metadata stick -->\n              <template v-if=\"displaySettings.showInfos && !isLoading\">\n                <td\n                  :ref=\"`editor-${i}-${j}`\"\n                  class=\"metadata-descriptor datatable-row-header\"\n                  :title=\"\n                    sequence.data ? sequence.data[descriptor.field_name] : ''\n                  \"\n                  :style=\"{\n                    'z-index': 1000 - i, // Need for combo to be above the next cell\n                    left: offsets['editor-' + j]\n                      ? `${offsets['editor-' + j]}px`\n                      : '0'\n                  }\"\n                  :key=\"sequence.id + '-' + descriptor.id\"\n                  v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n                >\n                  <metadata-input\n                    :entity=\"sequence\"\n                    :descriptor=\"descriptor\"\n                    @metadata-changed=\"$emit('metadata-changed', $event)\"\n                    :indexes=\"{ i, j }\"\n                  />\n                </td>\n              </template>\n\n              <template v-if=\"!isLoading\">\n                <validation-cell\n                  :ref=\"`validation-${i}-${j}`\"\n                  :key=\"columnId + '-' + sequence.id\"\n                  :class=\"{\n                    'validation-cell': !hiddenColumns[columnId],\n                    'hidden-validation-cell': hiddenColumns[columnId],\n                    'datatable-row-header': true\n                  }\"\n                  :contact-sheet=\"displaySettings.contactSheetMode\"\n                  :column=\"taskTypeMap.get(columnId)\"\n                  :column-y=\"j\"\n                  :entity=\"sequence\"\n                  :is-assignees=\"displaySettings.showAssignations\"\n                  :is-static=\"true\"\n                  :left=\"\n                    offsets['validation-' + j]\n                      ? `${offsets['validation-' + j]}px`\n                      : '0'\n                  \"\n                  :minimized=\"hiddenColumns[columnId]\"\n                  :row-x=\"i\"\n                  :selected=\"isSelected(i, j)\"\n                  :sticked=\"true\"\n                  :task-test=\"taskMap.get(sequence.validations.get(columnId))\"\n                  @select=\"infos => onTaskSelected(infos, true)\"\n                  @unselect=\"infos => onTaskUnselected(infos, true)\"\n                  v-for=\"(columnId, j) in stickedDisplayedValidationColumns\"\n                />\n              </template>\n\n              <description-cell\n                class=\"description\"\n                :entry=\"sequence\"\n                :editable=\"isCurrentUserManager\"\n                @description-changed=\"\n                  value => onDescriptionChanged(sequence, value)\n                \"\n                v-if=\"\n                  !isCurrentUserClient &&\n                  displaySettings.showInfos &&\n                  isSequenceDescription\n                \"\n              />\n\n              <td\n                class=\"resolution\"\n                v-if=\"isSequenceResolution && displaySettings.showInfos\"\n              >\n                <input\n                  :class=\"{\n                    'input-editor': true,\n                    error: !isValidResolution(sequence)\n                  }\"\n                  :value=\"\n                    getMetadataFieldValue(\n                      { field_name: 'resolution' },\n                      sequence\n                    )\n                  \"\n                  @input=\"\n                    event =>\n                      onMetadataFieldChanged(\n                        sequence,\n                        { field_name: 'resolution' },\n                        event\n                      )\n                  \"\n                  @keyup.ctrl=\"\n                    event =>\n                      onInputKeyUp(event, getIndex(i, k), descriptorLength + 3)\n                  \"\n                  v-if=\"isCurrentUserManager\"\n                />\n\n                <span class=\"metadata-value selectable\" v-else>\n                  {{\n                    getMetadataFieldValue(\n                      { field_name: 'resolution' },\n                      sequence\n                    )\n                  }}\n                </span>\n              </td>\n\n              <!-- other Metadata cells -->\n              <template v-if=\"displaySettings.showInfos\">\n                <td\n                  class=\"metadata-descriptor\"\n                  :title=\"\n                    sequence.data ? sequence.data[descriptor.field_name] : ''\n                  \"\n                  :key=\"sequence.id + '-' + descriptor.id\"\n                  v-for=\"(\n                    descriptor, j\n                  ) in nonStickedVisibleMetadataDescriptors\"\n                >\n                  <metadata-input\n                    :entity=\"sequence\"\n                    :descriptor=\"descriptor\"\n                    :indexes=\"{ i, j }\"\n                    @metadata-changed=\"$emit('metadata-changed', $event)\"\n                  />\n                </td>\n              </template>\n\n              <td\n                class=\"time-spent selectable\"\n                v-if=\"\n                  !isCurrentUserClient &&\n                  displaySettings.showInfos &&\n                  isSequenceTime &&\n                  metadataDisplayHeaders.timeSpent\n                \"\n              >\n                {{ formatDuration(sequence.timeSpent) }}\n              </td>\n\n              <td\n                class=\"estimation selectable\"\n                v-if=\"\n                  !isCurrentUserClient &&\n                  displaySettings.showInfos &&\n                  isSequenceEstimation &&\n                  metadataDisplayHeaders.estimation\n                \"\n              >\n                {{ formatDuration(sequence.estimation) }}\n              </td>\n\n              <template v-if=\"!isLoading\">\n                <validation-cell\n                  :ref=\"`validation-${i}-${\n                    j + stickedDisplayedValidationColumns.length\n                  }`\"\n                  :class=\"{\n                    'validation-cell': !hiddenColumns[columnId],\n                    'hidden-validation-cell': hiddenColumns[columnId]\n                  }\"\n                  :contact-sheet=\"displaySettings.contactSheetMode\"\n                  :key=\"`${columnId}-${sequence.id}`\"\n                  :column=\"taskTypeMap.get(columnId)\"\n                  :entity=\"sequence\"\n                  :task-test=\"\n                    taskMap.get(\n                      sequence.validations\n                        ? sequence.validations.get(columnId)\n                        : null\n                    )\n                  \"\n                  :minimized=\"hiddenColumns[columnId]\"\n                  :selected=\"\n                    isSelected(i, j + stickedDisplayedValidationColumns.length)\n                  \"\n                  :row-x=\"i\"\n                  :column-y=\"j\"\n                  :is-assignees=\"displaySettings.showAssignations\"\n                  @select=\"onTaskSelected\"\n                  @unselect=\"onTaskUnselected\"\n                  v-for=\"(columnId, j) in nonStickedDisplayedValidationColumns\"\n                />\n              </template>\n              <row-actions-cell\n                :entry=\"sequence\"\n                @delete-clicked=\"$emit('delete-clicked', sequence)\"\n                @edit-clicked=\"$emit('edit-clicked', sequence)\"\n                v-if=\"isCurrentUserManager\"\n              />\n              <td class=\"actions\" v-else></td>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <div\n      class=\"has-text-centered\"\n      v-if=\"isEmptyList && !isCurrentUserClient && !isLoading\"\n    >\n      <p class=\"info\">\n        <img src=\"../../assets/illustrations/empty_shot.png\" />\n      </p>\n      <p class=\"info\">{{ $t('sequences.empty_list_client') }}</p>\n    </div>\n\n    <p class=\"has-text-centered nb-sequences\" v-if=\"!isEmptyList && !isLoading\">\n      {{ displayedSequencesLength }}\n      {{ $tc('sequences.number', displayedSequencesLength) }}\n      <span\n        v-if=\"\n          displayedSequencesTimeSpent > 0 && displayedSequencesEstimation > 0\n        \"\n      >\n        ({{ formatDuration(displayedSequencesTimeSpent) }}\n        {{ $tc('main.days_spent', displayedSequencesTimeSpent) }},\n        {{ formatDuration(displayedSequencesEstimation) }}\n        {{ $tc('main.man_days', displayedSequencesEstimation) }})\n      </span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { getEntityPath } from '@/lib/path'\nimport { descriptorMixin } from '@/components/mixins/descriptors'\nimport { domMixin } from '@/components/mixins/dom'\nimport { entityListMixin } from '@/components/mixins/entity_list'\nimport { formatListMixin } from '@/components/mixins/format'\nimport { selectionListMixin } from '@/components/mixins/selection'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport DescriptionCell from '@/components/cells/DescriptionCell.vue'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\nimport MetadataHeader from '@/components/cells/MetadataHeader.vue'\nimport MetadataInput from '@/components/cells/MetadataInput.vue'\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\nimport TableMetadataHeaderMenu from '@/components/widgets/TableMetadataHeaderMenu.vue'\nimport TableMetadataSelectorMenu from '@/components/widgets/TableMetadataSelectorMenu.vue'\nimport TableHeaderMenu from '@/components/widgets/TableHeaderMenu.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport ValidationCell from '@/components/cells/ValidationCell.vue'\nimport ValidationHeader from '@/components/cells/ValidationHeader.vue'\n\nexport default {\n  name: 'sequence-list',\n\n  mixins: [\n    descriptorMixin,\n    domMixin,\n    formatListMixin,\n    entityListMixin,\n    selectionListMixin\n  ],\n\n  props: {\n    displaySettings: {\n      type: Object,\n      default: () => ({})\n    },\n    displayedSequences: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    validationColumns: {\n      type: Array,\n      default: () => []\n    },\n    departmentFilter: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  emits: ['create-tasks', 'delete-clicked', 'edit-clicked', 'metadata-changed'],\n\n  data() {\n    return {\n      type: 'sequence',\n      hiddenColumns: {},\n      lastHeaderMenuDisplayed: null,\n      lastMetadaDataHeaderMenuDisplayed: null,\n      lastHeaderMenuDisplayedIndexInGrid: null,\n      lastSelectedSequence: null,\n      lastSelection: null,\n      metadataDisplayHeaders: {\n        estimation: true,\n        timeSpent: true\n      },\n      offsets: {},\n      stickedColumns: {},\n      domEvents: [\n        ['mousemove', this.onMouseMove],\n        ['touchmove', this.onMouseMove],\n        ['mouseup', this.stopBrowsing],\n        ['mouseleave', this.stopBrowsing],\n        ['touchend', this.stopBrowsing],\n        ['touchcancel', this.stopBrowsing],\n        ['keyup', this.stopBrowsing]\n      ]\n    }\n  },\n\n  components: {\n    ButtonSimple,\n    DescriptionCell,\n    EntityThumbnail,\n    MetadataHeader,\n    MetadataInput,\n    RowActionsCell,\n    TableHeaderMenu,\n    TableMetadataHeaderMenu,\n    TableMetadataSelectorMenu,\n    TableInfo,\n    ValidationCell,\n    ValidationHeader\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'currentSequence',\n      'displayedSequencesEstimation',\n      'displayedSequencesLength',\n      'displayedSequencesTimeSpent',\n      'displaySettings.bigThumbnails',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isCurrentUserClient',\n      'isSingleSequence',\n      'isSequenceDescription',\n      'isSequenceEstimation',\n      'isSequenceResolution',\n      'isSequenceTime',\n      'nbSelectedTasks',\n      'selectedTasks',\n      'sequenceMap',\n      'sequenceFilledColumns',\n      'sequenceMetadataDescriptors',\n      'sequences',\n      'sequenceSearchText',\n      'sequenceSelectionGrid',\n      'sequences',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isEmptyList() {\n      return (\n        this.displayedSequences &&\n        this.displayedSequences.length === 0 &&\n        !this.isLoading &&\n        !this.isError &&\n        (!this.sequenceSearchText || this.sequenceSearchText.length === 0)\n      )\n    },\n\n    isListVisible() {\n      return (\n        !this.isLoading && !this.isError && this.displayedSequencesLength > 0\n      )\n    },\n\n    visibleColumns() {\n      let count = 2\n      count +=\n        !this.isCurrentUserClient &&\n        this.displaySettings.showInfos &&\n        this.isSequenceDescription\n          ? 1\n          : 0\n      count += this.visibleMetadataDescriptors.length\n      count +=\n        !this.isCurrentUserClient &&\n        this.displaySettings.showInfos &&\n        this.isSequenceTime &&\n        this.metadataDisplayHeaders.timeSpent\n          ? 1\n          : 0\n      count +=\n        !this.isCurrentUserClient &&\n        this.displaySettings.showInfos &&\n        this.isSequenceEstimation &&\n        this.metadataDisplayHeaders.estimation\n          ? 1\n          : 0\n      count += this.displayedValidationColumns.length\n      return count\n    },\n\n    displayedValidationColumns() {\n      return this.validationColumns.filter(columnId => {\n        return (\n          this.sequenceFilledColumns[columnId] &&\n          (!this.hiddenColumns[columnId] || this.displaySettings.showInfos)\n        )\n      })\n    },\n\n    metadataDescriptors() {\n      return this.sequenceMetadataDescriptors\n    },\n\n    localStorageStickKey() {\n      return `stick-sequences-${this.currentProduction.id}`\n    }\n  },\n\n  methods: {\n    ...mapActions(['setSequenceSelection']),\n\n    isSelected(lineIndex, columnIndex) {\n      return (\n        this.sequenceSelectionGrid[lineIndex] &&\n        this.sequenceSelectionGrid[lineIndex][columnIndex]\n      )\n    },\n\n    sequencePath(sequenceId) {\n      return this.getPath('sequence', sequenceId)\n    },\n\n    getPath(section, sequenceId) {\n      const productionId = this.currentProduction.id\n      const episodeId = this.currentEpisode ? this.currentEpisode.id : null\n      return getEntityPath(sequenceId, productionId, section, episodeId)\n    }\n  },\n\n  watch: {\n    displayedSequences() {\n      this.$options.lineIndex = {}\n    },\n\n    validationColumns() {\n      this.initHiddenColumns(this.validationColumns, this.hiddenColumns)\n    },\n\n    stickedColumns() {\n      this.updateOffsets()\n    },\n\n    isLoading() {\n      this.updateOffsets()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  th .input-editor,\n  td .select select,\n  td .input-editor {\n    color: $white;\n\n    option {\n      background: $dark-grey-light;\n      color: $white;\n    }\n\n    &:focus,\n    &:active,\n    &:hover {\n      background: $dark-grey-light;\n    }\n  }\n}\n\n.datatable-wrapper {\n  min-height: 40px;\n}\n\n.actions {\n  min-width: 160px;\n  position: sticky;\n}\n\nth.actions {\n  padding: 0.4em;\n}\n\n.name {\n  min-width: 100px;\n  width: 100px;\n}\n\n.name a {\n  color: inherit;\n}\n\n.name.sequence-name {\n  min-width: 110px;\n  width: 110px;\n}\n\n.description {\n  min-width: 200px;\n  max-width: 200px;\n  width: 200px;\n}\n\n.validation-cell {\n  min-width: 150px;\n  max-width: 150px;\n  width: 150px;\n}\n\n.estimation,\n.time-spent {\n  min-width: 70px;\n  max-width: 70px;\n  width: 70px;\n}\n\ntd.resolution {\n  min-width: 110px;\n  max-width: 110px;\n  width: 110px;\n}\n\ntd.name {\n  font-size: 1.2em;\n}\n\nspan.thumbnail-empty {\n  display: block;\n  width: 50px;\n  height: 30px;\n  background: #f3f3f3;\n}\n\n.info {\n  margin-top: 2em;\n}\n\n.info img {\n  max-width: 80vh;\n}\n\n.datatable-row th.name {\n  font-size: 1.1em;\n  padding: 6px;\n}\n\n.datatable-row-header {\n  cursor: pointer;\n}\n\nth .input-editor,\ntd .input-editor {\n  color: $grey-strong;\n  height: 100%;\n  padding: 0.5rem;\n  width: 100%;\n  background: transparent;\n  border: 1px solid transparent;\n  z-index: 100;\n\n  &:active,\n  &:focus,\n  &:hover {\n    background: transparent;\n    background: white;\n  }\n\n  &:active,\n  &:focus {\n    border: 1px solid $green;\n  }\n\n  &:hover {\n    border: 1px solid $light-green;\n  }\n\n  &:invalid {\n    color: $red;\n  }\n}\n\ninput[type='number']::-webkit-outer-spin-button,\ninput[type='number']::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n\n// Metadata cell CSS\n\ntd.metadata-descriptor {\n  height: 3.1rem;\n  max-width: 120px;\n  padding: 0;\n}\n\ntd .select {\n  color: $grey-strong;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  border: 1px solid transparent;\n\n  &::after {\n    border-color: transparent;\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    &::after {\n      border-color: $green;\n    }\n  }\n\n  select {\n    color: $grey-strong;\n    height: 100%;\n    width: 100%;\n    background: transparent;\n    border-radius: 0;\n    border: 1px solid transparent;\n\n    &:focus {\n      border: 1px solid $green;\n      background: white;\n    }\n\n    &:hover {\n      background: transparent;\n      background: white;\n      border: 1px solid $light-green;\n    }\n  }\n}\n\n.metadata-value {\n  padding: 0.8rem;\n}\n</style>\n","<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"sequences page\">\n        <div class=\"sequence-list-header page-header\">\n          <div class=\"flexrow\">\n            <search-field\n              ref=\"sequence-search-field\"\n              :can-save=\"true\"\n              @change=\"onSearchChange\"\n              @save=\"saveSearchQuery\"\n              placeholder=\"ex: e01 sequence=wip\"\n            />\n            <button-simple\n              class=\"flexrow-item\"\n              :title=\"$t('entities.build_filter.title')\"\n              icon=\"filter\"\n              @click=\"() => (modals.isBuildFilterDisplayed = true)\"\n            />\n            <div class=\"filler\"></div>\n            <div class=\"flexrow flexrow-item\" v-if=\"!isCurrentUserClient\">\n              <combobox-department\n                class=\"combobox-department flexrow-item\"\n                :selectable-departments=\"selectableDepartments('Sequence')\"\n                :display-all-and-my-departments=\"true\"\n                rounded\n                v-model=\"selectedDepartment\"\n                v-if=\"departments.length > 0\"\n              />\n              <combobox-display-options\n                class=\"flexrow-item\"\n                :type=\"type\"\n                v-model=\"displaySettings\"\n              />\n            </div>\n            <div class=\"flexrow\" v-if=\"isCurrentUserManager\">\n              <button-simple\n                class=\"flexrow-item\"\n                :text=\"$t('sequences.new_sequence')\"\n                icon=\"plus\"\n                @click=\"showNewModal\"\n              />\n            </div>\n          </div>\n\n          <div class=\"query-list mt1\">\n            <search-query-list\n              :queries=\"sequenceSearchQueries\"\n              type=\"sequence\"\n              @remove-search=\"removeSearchQuery\"\n              v-if=\"!isSequencesLoading && !initialLoading\"\n            />\n          </div>\n        </div>\n\n        <sorting-info\n          :sorting=\"sequenceSorting\"\n          @clear-sorting=\"onChangeSortClicked(null)\"\n          v-if=\"sequenceSorting?.length\"\n        />\n        <sequence-list\n          ref=\"sequence-list\"\n          :contact-sheet-mode=\"contactSheetMode\"\n          :display-settings=\"displaySettings\"\n          :displayed-sequences=\"displayedSequences\"\n          :is-loading=\"isSequencesLoading || initialLoading\"\n          :is-error=\"isSequencesLoadingError\"\n          :validation-columns=\"sequenceValidationColumns\"\n          :department-filter=\"departmentFilter\"\n          @add-metadata=\"onAddMetadataClicked\"\n          @change-sort=\"onChangeSortClicked\"\n          @create-tasks=\"showCreateTasksModal\"\n          @delete-all-tasks=\"onDeleteAllTasksClicked\"\n          @delete-clicked=\"onDeleteClicked\"\n          @delete-metadata=\"onDeleteMetadataClicked\"\n          @edit-clicked=\"onEditClicked\"\n          @edit-metadata=\"onEditMetadataClicked\"\n          @field-changed=\"onFieldChanged\"\n          @metadata-changed=\"onMetadataChanged\"\n          @scroll=\"saveScrollPosition\"\n          @keep-task-panel-open=\"onKeepTaskPanelOpenChanged\"\n        />\n      </div>\n    </div>\n\n    <div\n      id=\"side-column\"\n      class=\"column side-column\"\n      v-show=\"isTaskSidePanelOpen\"\n    >\n      <task-info\n        :task=\"selectedTasks.values().next().value\"\n        entity-type=\"Sequence\"\n        with-actions\n      />\n    </div>\n\n    <delete-modal\n      ref=\"delete-sequence-modal\"\n      :active=\"modals.isDeleteDisplayed\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('sequences.delete_error')\"\n      @cancel=\"modals.isDeleteDisplayed = false\"\n      @confirm=\"confirmDeleteSequence\"\n    />\n\n    <delete-modal\n      ref=\"delete-metadata-modal\"\n      :active=\"modals.isDeleteMetadataDisplayed\"\n      :is-loading=\"loading.deleteMetadata\"\n      :is-error=\"errors.deleteMetadata\"\n      :text=\"$t('productions.metadata.delete_text')\"\n      :error-text=\"$t('productions.metadata.delete_error')\"\n      @cancel=\"modals.isDeleteMetadataDisplayed = false\"\n      @confirm=\"confirmDeleteMetadata\"\n    />\n\n    <hard-delete-modal\n      ref=\"delete-all-tasks-modal\"\n      :active=\"modals.isDeleteAllTasksDisplayed\"\n      :is-loading=\"loading.deleteAllTasks\"\n      :is-error=\"errors.deleteAllTasks\"\n      :text=\"deleteAllTasksText()\"\n      :error-text=\"$t('tasks.delete_all_error')\"\n      :lock-text=\"deleteAllTasksLockText\"\n      :selection-option=\"true\"\n      @cancel=\"modals.isDeleteAllTasksDisplayed = false\"\n      @confirm=\"confirmDeleteAllTasks\"\n    />\n\n    <create-tasks-modal\n      :active=\"modals.isCreateTasksDisplayed\"\n      :is-loading=\"loading.creatingTasks\"\n      :is-loading-stay=\"loading.creatingTasksStay\"\n      :is-error=\"errors.creatingTasks\"\n      :title=\"$t('tasks.create_tasks_sequence')\"\n      :text=\"$t('tasks.create_tasks_sequence_explaination')\"\n      :error-text=\"$t('tasks.create_tasks_sequence_failed')\"\n      @cancel=\"hideCreateTasksModal\"\n      @confirm=\"confirmCreateTasks\"\n      @confirm-and-stay=\"confirmCreateTasksAndStay\"\n    />\n\n    <add-metadata-modal\n      :active=\"modals.isAddMetadataDisplayed\"\n      :is-loading=\"loading.addMetadata\"\n      :is-error=\"errors.addMetadata\"\n      :descriptor-to-edit=\"descriptorToEdit\"\n      entity-type=\"Sequence\"\n      @cancel=\"closeMetadataModal\"\n      @confirm=\"confirmAddMetadata\"\n    />\n\n    <add-thumbnails-modal\n      ref=\"add-thumbnails-modal\"\n      entity-type=\"Sequence\"\n      parent=\"sequences\"\n      :active=\"modals.isAddThumbnailsDisplayed\"\n      :is-loading=\"loading.addThumbnails\"\n      :is-error=\"errors.addThumbnails\"\n      @cancel=\"hideAddThumbnailsModal\"\n      @confirm=\"confirmAddThumbnails\"\n      v-if=\"false\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      entity-type=\"sequence\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n      @confirm=\"confirmBuildFilter\"\n    />\n\n    <edit-sequence-modal\n      :active=\"modals.isNewDisplayed\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :sequence-to-edit=\"sequenceToEdit\"\n      @cancel=\"modals.isNewDisplayed = false\"\n      @confirm=\"confirmEditSequence\"\n    />\n\n    <hard-delete-modal\n      :active=\"modals.isDeleteDisplayed\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('sequences.delete_error')\"\n      :lock-text=\"sequenceToDelete ? sequenceToDelete.name : ''\"\n      @cancel=\"modals.isDeleteDisplayed = false\"\n      @confirm=\"confirmDeleteSequence\"\n    />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { mapGetters, mapActions } from 'vuex'\nimport csv from '@/lib/csv'\nimport { sortByName } from '@/lib/sorting'\nimport stringHelpers from '@/lib/string'\n\nimport { searchMixin } from '@/components/mixins/search'\nimport { entitiesMixin } from '@/components/mixins/entities'\n\nimport AddMetadataModal from '@/components/modals/AddMetadataModal.vue'\nimport AddThumbnailsModal from '@/components/modals/AddThumbnailsModal.vue'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment.vue'\nimport ComboboxDisplayOptions from '@/components/widgets/ComboboxDisplayOptions.vue'\nimport CreateTasksModal from '@/components/modals/CreateTasksModal.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditSequenceModal from '@/components/modals/EditSequenceModal.vue'\nimport SequenceList from '@/components/lists/SequenceList.vue'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport SortingInfo from '@/components/widgets/SortingInfo.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'sequences',\n\n  mixins: [searchMixin, entitiesMixin],\n\n  components: {\n    AddMetadataModal,\n    AddThumbnailsModal,\n    BuildFilterModal,\n    ButtonSimple,\n    ComboboxDepartment,\n    ComboboxDisplayOptions,\n    CreateTasksModal,\n    DeleteModal,\n    EditSequenceModal,\n    SequenceList,\n    HardDeleteModal,\n    SearchField,\n    SearchQueryList,\n    SortingInfo,\n    TaskInfo\n  },\n\n  data() {\n    return {\n      type: 'sequence',\n      contactSheetMode: false,\n      deleteAllTasksLockText: null,\n      descriptorToEdit: {},\n      departmentFilter: [],\n      sequenceToDelete: null,\n      sequenceToEdit: null,\n      formData: null,\n      genericColumns: [\n        'Metadata column name (text value)',\n        'Task type name (task status name value)',\n        'Task type name + comment (text value)'\n      ],\n      historyEdit: {},\n      initialLoading: true,\n      optionalColumns: ['Description'],\n      pageName: 'Sequences',\n      parsedCSV: [],\n      selectedDepartment: 'ALL',\n      taskTypeForTaskDeletion: null,\n      modals: {\n        isAddMetadataDisplayed: false,\n        isAddThumbnailsDisplayed: false,\n        isBuildFilterDisplayed: false,\n        isCreateTasksDisplayed: false,\n        isDeleteDisplayed: false,\n        isDeleteMetadataDisplayed: false,\n        isDeleteAllTasksDisplayed: false,\n        isImportRenderDisplayed: false,\n        isImportDisplayed: false,\n        isNewDisplayed: false\n      },\n      loading: {\n        addMetadata: false,\n        addThumbnails: false,\n        creatingTasks: false,\n        creatingTasksStay: false,\n        del: false,\n        deleteAllTasks: false,\n        deleteMetadata: false,\n        edit: false,\n        importing: false,\n        savingSearch: false,\n        sequence: false,\n        stay: false\n      },\n      errors: {\n        addMetadata: false,\n        creatingTasks: false,\n        deleteAllTasks: false,\n        deleteMetadata: false,\n        edit: false,\n        importing: false,\n        importingError: null\n      }\n    }\n  },\n\n  beforeUnmount() {\n    this.clearSelectedSequences()\n  },\n\n  created() {\n    this.setLastProductionScreen('sequences')\n  },\n\n  mounted() {\n    this.$refs['sequence-list'].setScrollPosition(\n      this.sequenceListScrollPosition\n    )\n    this.$refs['sequence-list'].setScrollPosition(\n      this.sequenceListScrollPosition\n    )\n    if (!this.isCurrentUserManager && this.user.departments.length > 0) {\n      this.selectedDepartment = 'MY_DEPARTMENTS'\n      this.departmentFilter = this.user.departments\n    } else {\n      this.departmentFilter = []\n    }\n\n    const finalize = () => {\n      this.initialLoading = false\n      if (this.$refs['sequence-list']) {\n        this.$refs['sequence-list'].setScrollPosition(\n          this.sequenceListScrollPosition\n        )\n        this.$refs['sequence-list'].selectTaskFromQuery()\n\n        setTimeout(() => {\n          this.applySearchFromUrl()\n        }, 200)\n      }\n    }\n\n    if (\n      this.sequenceMap.size < 1 ||\n      this.sequenceValidationColumns.length === 0 ||\n      this.sequenceMap.values().next().project_id !== this.currentProduction.id\n    ) {\n      this.loadSequencesWithTasks()\n        .then(() => {\n          this.initialLoading = false\n          finalize()\n        })\n        .catch(console.error)\n    } else {\n      if (!this.isSequencesLoading) this.initialLoading = false\n      finalize()\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'currentSection',\n      'displayedSequences',\n      'departmentMap',\n      'departments',\n      'sequenceMap',\n      'sequences',\n      'sequenceSearchQueries',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isSequenceDescription',\n      'isSequenceEstimation',\n      'isSequenceTime',\n      'isSequencesLoading',\n      'isSequencesLoadingError',\n      'isShowAssignations',\n      'isTVShow',\n      'openProductions',\n      'productionSequenceTaskTypes',\n      'sequenceMap',\n      'sequenceFilledColumns',\n      'sequenceSearchText',\n      'sequenceValidationColumns',\n      'sequenceListScrollPosition',\n      'sequenceSorting',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    searchField() {\n      return this.$refs['sequence-search-field']\n    },\n\n    renderColumns() {\n      const collection = [...this.dataMatchers, ...this.optionalColumns]\n\n      this.productionSequenceTaskTypes.forEach(item => {\n        collection.push(item.name)\n        collection.push(`${item.name} comment`)\n      })\n      return collection\n    },\n\n    filteredSequences() {\n      const sequences = {}\n      this.displayedSequences.forEach(sequence => {\n        const sequenceKey = sequence.name\n        sequences[sequenceKey] = true\n      })\n      return sequences\n    },\n\n    metadataDescriptors() {\n      return this.sequenceMetadataDescriptors\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addMetadataDescriptor',\n      'createTasks',\n      'changeSequenceSort',\n      'clearSelectedSequences',\n      'commentTaskWithPreview',\n      'deleteAllTasks',\n      'deleteSequence',\n      'deleteMetadataDescriptor',\n      'editSequence',\n      'getSequencesCsvLines',\n      'hideAssignations',\n      'loadSequencesWithTasks',\n      'newSequence',\n      'removeSequenceSearch',\n      'saveSequenceSearch',\n      'setLastProductionScreen',\n      'setPreview',\n      'setSequenceSearch',\n      'showAssignations',\n      'uploadSequenceFile'\n    ]),\n\n    confirmAddMetadata(form) {\n      this.loading.addMetadata = true\n      form.entity_type = 'Sequence'\n      this.addMetadataDescriptor(form)\n        .then(() => {\n          this.loading.addMetadata = false\n          this.modals.isAddMetadataDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.addMetadata = false\n          this.errors.addMetadata = true\n        })\n    },\n\n    showNewModal() {\n      this.sequenceToEdit = {}\n      this.modals.isNewDisplayed = true\n    },\n\n    confirmDeleteSequence() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteSequence(this.sequenceToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.isDeleteDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.del = false\n          this.errors.del = true\n        })\n    },\n\n    runTasksCreation(form, selectionOnly) {\n      this.errors.creatingTasks = false\n      return this.createTasks({\n        type: 'sequences',\n        task_type_id: form.task_type_id,\n        project_id: this.currentProduction.id,\n        selectionOnly\n      })\n    },\n\n    reset() {\n      this.initialLoading = false\n      this.loadSequencesWithTasks(err => {\n        if (err) console.error(err)\n        this.applySearchFromUrl()\n        this.initialLoading = false\n      })\n    },\n\n    resetEditModal() {\n      const form = { name: '' }\n      if (this.openProductions.length > 0) {\n        form.production_id = this.openProductions[0].id\n      }\n      this.sequenceToEdit = form\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.saveSequenceSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removeSequenceSearch(searchQuery).catch(console.error)\n    },\n\n    onExportClick() {\n      this.getSequencesCsvLines().then(sequenceLines => {\n        const nameData = [\n          moment().format('YYYY-MM-DD'),\n          'kitsu',\n          this.currentProduction.name,\n          this.$t('sequences.title')\n        ]\n        const name = stringHelpers.slugify(nameData.join('_'))\n        const headers = [\n          this.$t('sequences.fields.name'),\n          this.$t('sequences.fields.description')\n        ]\n        if (this.currentSequence) {\n          headers.splice(0, 0, 'Sequence')\n        }\n        sortByName([...this.currentProduction.descriptors])\n          .filter(d => d.entity_type === 'Sequence')\n          .forEach(descriptor => {\n            headers.push(descriptor.name)\n          })\n        if (this.isSequenceTime) {\n          headers.push(this.$t('sequences.fields.time_spent'))\n        }\n        if (this.isSequenceEstimation) {\n          headers.push(this.$t('main.estimation_short'))\n        }\n        this.sequenceValidationColumns.forEach(taskTypeId => {\n          headers.push(this.taskTypeMap.get(taskTypeId).name)\n          headers.push('Assignations')\n        })\n        csv.buildCsvFile(name, [headers].concat(sequenceLines))\n      })\n    },\n\n    async onFieldChanged({ entry, fieldName, value }) {\n      const data = {\n        id: entry.id,\n        [fieldName]: value\n      }\n      await this.editSequence(data)\n      this.applySearchFromUrl()\n    },\n\n    async onMetadataChanged({ entry, descriptor, value }) {\n      const data = {\n        id: entry.id,\n        data: {\n          [descriptor.field_name]: value\n        }\n      }\n      await this.editSequence(data)\n      this.applySearchFromUrl()\n    },\n\n    onEditClicked(sequence) {\n      this.sequenceToEdit = sequence\n      this.modals.isNewDisplayed = true\n    },\n\n    onDeleteClicked(sequence) {\n      this.sequenceToDelete = sequence\n      this.modals.isDeleteDisplayed = true\n    },\n\n    confirmEditSequence(form) {\n      this.loading.edit = true\n      this.errors.edit = false\n      if (form.id) {\n        this.editSequence(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n            this.applySearchFromUrl()\n          })\n          .catch(err => {\n            console.error(err)\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      } else {\n        form.project_id = this.currentProduction.id\n        if (this.currentEpisode) {\n          form.episode_id = this.currentEpisode.id\n        }\n        this.newSequence(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n          })\n          .catch(err => {\n            console.error(err)\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      }\n    },\n\n    deleteText() {\n      const sequence = this.sequenceToDelete\n      if (sequence) {\n        return this.$t('sequences.delete_text', { name: sequence.name })\n      }\n      return ''\n    }\n  },\n\n  watch: {\n    currentProduction() {\n      this.$refs['sequence-search-field'].setValue('')\n      this.$store.commit('SET_SEQUENCE_LIST_SCROLL_POSITION', 0)\n      this.initialLoading = false\n      this.reset()\n    },\n\n    currentEpisode() {\n      this.$refs['sequence-search-field'].setValue('')\n      this.$store.commit('SET_SEQUENCE_LIST_SCROLL_POSITION', 0)\n      this.initialLoading = false\n      this.reset()\n    },\n\n    currentSection() {\n      if (\n        (this.isTVShow && this.displayedSequences.length === 0) ||\n        this.displayedSequences[0]?.episode_id !== this.currentEpisode?.id\n      ) {\n        this.$refs['sequence-search-field'].setValue('')\n        this.$store.commit('SET_SEQUENCE_LIST_SCROLL_POSITION', 0)\n        this.initialLoading = false\n        this.reset()\n      }\n    },\n\n    isSequencesLoading() {\n      if (!this.isSequencesLoading) {\n        this.initialLoading = false\n        if (this.$refs['sequence-list']) {\n          this.$refs['sequence-list'].setScrollPosition(\n            this.sequenceListScrollPosition\n          )\n        }\n      }\n    }\n  },\n\n  head() {\n    if (this.isTVShow) {\n      return {\n        title:\n          `${this.currentProduction?.name || ''}` +\n          ` - ${this.currentEpisode?.name || ''}` +\n          ` | ${this.$t('sequences.title')} - Kitsu`\n      }\n    }\n    return {\n      title: `${this.currentProduction.name} | ${this.$t('sequences.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-list {\n  margin-top: 0;\n}\n\n.page-header {\n  margin-bottom: 1em;\n}\n\n.flexcolumn {\n  align-items: flex-start;\n}\n\n.sequences {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n</style>\n"],"names":["_sfc_main","descriptorMixin","domMixin","formatListMixin","entityListMixin","selectionListMixin","ButtonSimple","DescriptionCell","EntityThumbnail","MetadataHeader","MetadataInput","RowActionsCell","TableHeaderMenu","TableMetadataHeaderMenu","TableMetadataSelectorMenu","TableInfo","ValidationCell","ValidationHeader","mapGetters","count","columnId","mapActions","lineIndex","columnIndex","sequenceId","section","productionId","episodeId","getEntityPath","_hoisted_1","_hoisted_2","_hoisted_5","_hoisted_6","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_14","_hoisted_16","_hoisted_21","_openBlock","_createElementBlock","_createElementVNode","_cache","args","_ctx","_createVNode","_component_table_header_menu","$data","_component_table_metadata_header_menu","$event","_withDirectives","_hoisted_3","_hoisted_4","_toDisplayString","$props","_createBlock","_component_button_simple","_createCommentVNode","_Fragment","_renderList","descriptor","j","_component_metadata_header","event","columnIndexInGrid","_component_validation_header","_hoisted_7","_hoisted_8","_hoisted_10","_normalizeClass","_component_table_metadata_selector_menu","$options","sequence","i","_component_entity_thumbnail","_component_router_link","_withCtx","_createTextVNode","_normalizeStyle","_component_metadata_input","_component_validation_cell","infos","_component_description_cell","value","_hoisted_13","_withModifiers","_hoisted_15","_hoisted_17","_hoisted_18","_component_row_actions_cell","_hoisted_19","_component_table_info","_hoisted_20","_imports_0","_hoisted_22","_hoisted_23","searchMixin","entitiesMixin","AddMetadataModal","AddThumbnailsModal","BuildFilterModal","ComboboxDepartment","ComboboxDisplayOptions","CreateTasksModal","DeleteModal","EditSequenceModal","SequenceList","HardDeleteModal","SearchField","SearchQueryList","SortingInfo","TaskInfo","finalize","collection","item","sequences","sequenceKey","form","err","selectionOnly","searchQuery","sequenceLines","nameData","moment","name","stringHelpers","headers","sortByName","d","taskTypeId","csv","entry","fieldName","data","_component_search_field","_component_combobox_department","_component_combobox_display_options","_component_search_query_list","_component_sorting_info","_component_sequence_list","_component_task_info","_component_delete_modal","_component_hard_delete_modal","_component_create_tasks_modal","_component_add_metadata_modal","_component_build_filter_modal","_component_edit_sequence_modal"],"mappings":"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"}