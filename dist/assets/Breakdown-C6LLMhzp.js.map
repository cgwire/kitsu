{"version":3,"file":"Breakdown-C6LLMhzp.js","sources":["../../src/components/pages/breakdown/AvailableAssetBlock.vue","../../src/components/modals/EditLabelModal.vue","../../src/components/pages/breakdown/AssetBlock.vue","../../src/components/pages/breakdown/ShotLine.vue","../../src/components/widgets/ShowInfosButton.vue","../../src/components/pages/Breakdown.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"`casting-${asset.id}`\"\n    class=\"asset\"\n    :class=\"{\n      active,\n      'big-asset': bigMode,\n      shared: asset.shared\n    }\"\n    :title=\"asset.name\"\n    v-if=\"!textMode\"\n  >\n    <div class=\"asset-add\" @click=\"addOneAsset\">+ 1</div>\n    <div class=\"asset-add-10\" @click=\"addTenAssets\">+ 10</div>\n    <div class=\"asset-picture\" v-if=\"asset.preview_file_id\">\n      <img\n        loading=\"lazy\"\n        alt=\"\"\n        :src=\"`/api/pictures/thumbnails-square/preview-files/${asset.preview_file_id}.png`\"\n      />\n    </div>\n    <div class=\"asset-picture\" v-else>\n      <span class=\"empty-picture\">\n        {{ asset.name }}\n      </span>\n    </div>\n  </div>\n  <div\n    class=\"asset-text flexrow-item flexrow\"\n    :class=\"{\n      shared: asset.shared\n    }\"\n    v-else\n  >\n    <span class=\"asset-text-name flexrow-item\">\n      {{ asset.name }}\n    </span>\n    <span class=\"modify-asset flexrow-item\" @click=\"addOneAsset\"> + 1 </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'available-asset-block',\n\n  props: {\n    asset: {\n      default: () => ({\n        id: '',\n        name: ''\n      }),\n      type: Object\n    },\n    active: {\n      default: false,\n      type: Boolean\n    },\n    textMode: {\n      default: false,\n      type: Boolean\n    },\n    bigMode: {\n      default: true,\n      type: Boolean\n    }\n  },\n\n  emits: ['add-one', 'add-ten'],\n\n  methods: {\n    addOneAsset(event) {\n      if (this.active) {\n        this.$emit('add-one', this.asset.id)\n      }\n    },\n    addTenAssets(event) {\n      if (this.active) {\n        this.$emit('add-ten', this.asset.id)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .asset {\n  background-color: $dark-grey-lightest;\n}\n\n.dark .asset.casted,\n.dark .asset .asset-add,\n.dark .asset .asset-add-10 {\n  background-color: #8f91eb;\n}\n\n.asset-add {\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 60px;\n  height: 30px;\n  background: #f1e4ff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 1.2em;\n  opacity: 0;\n  z-index: 3;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n\n.asset-add-10 {\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-top: 0;\n  width: 60px;\n  height: 30px;\n  background: #e1d4f9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 1.2em;\n  opacity: 0;\n  z-index: 3;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\n.asset.active:hover .asset-add,\n.asset.active:hover .asset-add-10 {\n  opacity: 1;\n}\n\n.asset {\n  width: 60px;\n  height: 60px;\n  margin-right: 1em;\n  margin-bottom: 1em;\n  font-size: 0.8em;\n  cursor: default;\n  background: $white-grey;\n  border-radius: 8px;\n\n  &.big-asset {\n    width: 100px;\n    height: 100px;\n\n    .asset-picture {\n      top: -110px;\n      left: -10px;\n      width: 120px;\n      height: 120px;\n    }\n\n    .asset-add-10,\n    .asset-add {\n      width: 100px;\n      height: 50px;\n    }\n  }\n\n  &.shared {\n    box-shadow: 0 0 0 2px var(--shared-color);\n  }\n}\n\n.asset-picture {\n  position: relative;\n  top: -60px;\n  left: 0;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n  width: 60px;\n  height: 60px;\n  word-break: break-all;\n  font-size: 0.8em;\n\n  img {\n    border-radius: 8px;\n  }\n}\n\n.asset-name {\n  text-align: center;\n  position: relative;\n  word-break: break-all;\n  top: -55px;\n}\n\n.asset.casted {\n  background: $purple;\n}\n\n.active {\n  cursor: pointer;\n}\n\n.asset-text {\n  font-size: 0.9em;\n  margin-bottom: 0.5em;\n\n  &.shared {\n    box-shadow: 0 0 0 2px var(--shared-color);\n  }\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      modal: true,\n      'is-active': active\n    }\"\n  >\n    <div class=\"modal-background\" @click=\"$emit('cancel')\"></div>\n\n    <div class=\"modal-content\">\n      <div class=\"box content\">\n        <h1 class=\"title\">\n          {{ $t('breakdown.edit_label') }}\n        </h1>\n\n        <form @submit.prevent>\n          <combobox\n            ref=\"typeField\"\n            :label=\"$t('breakdown.label')\"\n            :options=\"typeOptions\"\n            @enter=\"confirm\"\n            v-model=\"form.label\"\n            v-focus\n          />\n\n          <modal-footer\n            :is-error=\"isError\"\n            :is-loading=\"isLoading\"\n            @confirm=\"confirm\"\n            @cancel=\"$emit('cancel')\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ModalFooter from '@/components/modals/ModalFooter.vue'\n\nexport default {\n  name: 'edit-label-modal',\n\n  mixins: [modalMixin],\n\n  components: {\n    Combobox,\n    ModalFooter\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String\n    }\n  },\n\n  emits: ['cancel', 'confirm'],\n\n  mounted() {\n    this.form.label = this.label\n  },\n\n  data() {\n    return {\n      form: {\n        label: 'animate'\n      },\n      typeOptions: [\n        {\n          label: this.$t('breakdown.options.animate'),\n          value: 'animate'\n        },\n        {\n          label: this.$t('breakdown.options.fixed'),\n          value: 'fixed'\n        }\n      ]\n    }\n  },\n\n  methods: {\n    confirm() {\n      return this.$emit('confirm', this.form)\n    }\n  },\n\n  watch: {\n    label() {\n      this.form.label = this.label\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.error {\n  margin-top: 1em;\n}\n</style>\n","<template>\n  <div\n    class=\"asset big casted labelled\"\n    :class=\"{\n      active,\n      'big-asset': bigMode,\n      shared: asset.shared\n    }\"\n    :title=\"`${asset.name} (${nbOccurences})`\"\n    v-if=\"!textMode\"\n  >\n    <div class=\"asset-wrapper\">\n      <template v-if=\"!readOnly && active\">\n        <div class=\"asset-add-1\" @click.stop=\"addOneAsset\">+ 1</div>\n        <div class=\"asset-add\" @click.stop=\"removeOneAsset\">- 1</div>\n      </template>\n      <div class=\"asset-picture\" v-if=\"asset.preview_file_id\">\n        <img\n          loading=\"lazy\"\n          alt=\"\"\n          :src=\"`/api/pictures/thumbnails-square/preview-files/${asset.preview_file_id}.png`\"\n        />\n        <span class=\"nb-occurences\" v-if=\"nbOccurences > 1\">\n          {{ nbOccurences }}\n        </span>\n      </div>\n      <div class=\"asset-picture\" v-else>\n        <span class=\"empty-picture\">\n          {{ shortenName(asset.name) }} ({{ nbOccurences }})\n        </span>\n      </div>\n    </div>\n    <div class=\"asset-label\" :label=\"asset.label\" @click=\"onEditLabelClicked\">\n      {{ asset.label || $t('breakdown.options.animate') }}\n    </div>\n  </div>\n  <div\n    class=\"asset-text flexrow-item flexrow\"\n    :class=\"{\n      shared: asset.shared\n    }\"\n    v-else\n  >\n    <span class=\"asset-text-name flexrow-item filler\">\n      {{ asset.name }} ({{ nbOccurences }})\n    </span>\n    <span\n      class=\"modify-asset flexrow-item\"\n      @click.stop=\"removeOneAsset\"\n      v-if=\"!readOnly && active\"\n    >\n      - 1\n    </span>\n  </div>\n</template>\n\n<script>\nimport stringHelpers from '@/lib/string'\nimport { domMixin } from '@/components/mixins/dom'\n\nexport default {\n  name: 'asset-block',\n\n  mixins: [domMixin],\n\n  props: {\n    asset: {\n      default: () => ({\n        id: '',\n        name: ''\n      }),\n      type: Object\n    },\n    nbOccurences: {\n      default: 1,\n      type: Number\n    },\n    active: {\n      default: true,\n      type: Boolean\n    },\n    readOnly: {\n      default: false,\n      type: Boolean\n    },\n    textMode: {\n      default: false,\n      type: Boolean\n    },\n    bigMode: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  emits: ['add-one', 'edit-label', 'remove-one'],\n\n  methods: {\n    removeOneAsset(event) {\n      this.$emit('remove-one', this.asset.asset_id)\n    },\n\n    addOneAsset(event) {\n      this.$emit('add-one', this.asset.asset_id)\n    },\n\n    shortenName(name) {\n      return stringHelpers.shortenText(name, 13)\n    },\n\n    onEditLabelClicked() {\n      if (!this.readOnly) {\n        this.$emit('edit-label', this.asset, this.asset.label)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .asset-picture {\n  background-color: $dark-grey-lightest;\n}\n\n.dark .asset.casted .asset-picture,\n.dark .asset .asset-add,\n.dark .asset .asset-add-10 {\n  background-color: $purple-strong;\n}\n\n.asset {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin: 0 1em 0.5em 0;\n  font-size: 0.8em;\n  word-wrap: break-word;\n  border-radius: 5px;\n  height: 40px;\n\n  .asset-wrapper {\n    width: 40px;\n  }\n\n  &.big-asset {\n    width: 100px;\n    height: 100px;\n\n    .asset-picture {\n      top: -10px;\n      left: -10px;\n      width: 120px;\n      height: 120px;\n    }\n\n    .asset-wrapper {\n      width: 100px;\n    }\n\n    .nb-occurences {\n      font-size: 1.2em;\n      padding: 2px;\n      right: 15px;\n      bottom: 15px;\n    }\n  }\n\n  &.shared {\n    box-shadow: 0 0 0 2px var(--shared-color);\n  }\n}\n\n.labelled {\n  margin-right: 2em;\n}\n\n.casted {\n  background: $purple;\n}\n\n.asset-wrapper {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 60px;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.active {\n  cursor: pointer;\n}\n\n.asset-add,\n.asset-add-1 {\n  flex: 0 0 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: $light-purple;\n  font-weight: bold;\n  font-size: 0.9em;\n  opacity: 0;\n  z-index: 3;\n}\n\n.asset-add-1 {\n  background: $purple;\n}\n\n.asset.active:hover .asset-add,\n.asset.active:hover .asset-add-1 {\n  opacity: 1;\n}\n\n.asset-picture {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  background: $white-grey;\n  word-break: break-all;\n  font-size: 0.8em;\n\n  img {\n    border-radius: 5px;\n  }\n}\n\n.asset-name {\n  text-align: center;\n  position: relative;\n  word-break: break-all;\n  top: -75px;\n}\n\n.asset-label {\n  background: $dark-green;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  color: $white;\n  font-size: 0.7em;\n  height: 20px;\n  left: 100%;\n  padding-top: 5px;\n  position: absolute;\n  text-align: center;\n  top: 0;\n  transform: rotate(-90deg) translateX(-25%) translateY(calc(-50% - 5px));\n  width: 40px;\n}\n\n.asset-label[label='fixed'] {\n  background: $orange-carrot;\n}\n\n.nb-occurences {\n  background: rgba(160, 160, 180, 0.8);\n  font-size: 0.8em;\n  border-radius: 2px;\n  color: white;\n  position: absolute;\n  padding: 2px;\n  right: 2px;\n  bottom: 2px;\n}\n\n.asset-text {\n  width: 120px;\n  margin-right: 0;\n\n  &.shared {\n    box-shadow: 0 0 0 2px var(--shared-color);\n  }\n}\n\n.modify-asset {\n  min-width: 20px;\n}\n\n.asset-text-name {\n  word-wrap: anywhere;\n}\n</style>\n","<template>\n  <div\n    :id=\"entity.id\"\n    class=\"shot unselectable\"\n    :class=\"{\n      selected,\n      stdby: entity ? entity.is_casting_standby : false,\n      'text-mode': textMode\n    }\"\n    @click=\"onClicked($event)\"\n  >\n    <div\n      class=\"flexrow-item sticky\"\n      :style=\"{\n        'max-width': columnWidth.name ? columnWidth.name + 'px' : '250px',\n        'min-width': columnWidth.name ? columnWidth.name + 'px' : '250px'\n      }\"\n    >\n      <p class=\"error has-text-left info-message\" v-if=\"isSaveError\">\n        {{ $t('breakdown.save_error') }}\n      </p>\n      <div class=\"flexrow\">\n        <entity-thumbnail\n          class=\"flexrow-item mr1\"\n          :entity=\"{}\"\n          :height=\"bigMode ? 100 : 60\"\n          :width=\"bigMode ? 150 : 90\"\n          :empty-height=\"bigMode ? 100 : 60\"\n          :empty-width=\"bigMode ? 150 : 90\"\n          :preview-file-id=\"previewFileId\"\n        />\n        <div class=\"shot-name flexrow-item ml05\">\n          <div v-for=\"(chunk, index) in chunks\" :key=\"`chunk-${index}`\">\n            {{ chunk }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"standby-column flexrow-item\" v-if=\"isShowInfosBreakdown\">\n      <input\n        type=\"checkbox\"\n        :checked=\"entity ? entity.is_casting_standby : false\"\n        :disabled=\"!isCurrentUserManager\"\n        :style=\"[\n          isCurrentUserManager ? { cursor: 'pointer' } : { cursor: 'auto' }\n        ]\"\n        @input=\"event => onStandbyChanged(entity, event)\"\n      />\n    </div>\n    <div\n      class=\"description-column flexrow-item\"\n      v-if=\"isShowInfosBreakdown && isDescription\"\n    >\n      <div\n        class=\"tooltip-text\"\n        v-html=\"renderMarkdown(entity.description)\"\n        v-if=\"readOnly\"\n      ></div>\n      <textarea\n        class=\"tooltip-editor\"\n        ref=\"text\"\n        :value=\"entity.description\"\n        @input=\"event => onDescriptionChanged(entity, event)\"\n        v-else\n      >\n      </textarea>\n    </div>\n    <div\n      class=\"frames-column flexrow-item\"\n      v-if=\"isFrames && isShowInfosBreakdown && metadataDisplayHeaders.frames\"\n    >\n      <input\n        class=\"input-editor\"\n        step=\"1\"\n        :value=\"entity.nb_frames\"\n        type=\"number\"\n        min=\"0\"\n        @input=\"event => onNbFramesChanged(entity, event)\"\n        v-if=\"isCurrentUserManager\"\n      />\n      <span class=\"metadata-value selectable\" v-else>\n        {{ entity.nb_frames }}\n      </span>\n    </div>\n    <div\n      class=\"frames-column flexrow-item\"\n      v-if=\"isFrameIn && isShowInfosBreakdown && metadataDisplayHeaders.frameIn\"\n    >\n      <input\n        class=\"input-editor\"\n        step=\"1\"\n        type=\"number\"\n        min=\"0\"\n        :value=\"getMetadataFieldValue({ field_name: 'frame_in' }, entity)\"\n        @input=\"\n          event =>\n            onMetadataFieldChanged(\n              entity,\n              { field_name: 'frame_in', data_type: 'number' },\n              event\n            )\n        \"\n        v-if=\"isCurrentUserManager\"\n      />\n      <span class=\"metadata-value selectable\" v-else>\n        {{ getMetadataFieldValue({ field_name: 'frame_in' }, entity) }}\n      </span>\n    </div>\n    <div\n      class=\"frames-column flexrow-item\"\n      v-if=\"\n        isFrameOut && isShowInfosBreakdown && metadataDisplayHeaders.frameOut\n      \"\n    >\n      <input\n        class=\"input-editor\"\n        step=\"1\"\n        type=\"number\"\n        min=\"0\"\n        :value=\"getMetadataFieldValue({ field_name: 'frame_out' }, entity)\"\n        @input=\"\n          event =>\n            onMetadataFieldChanged(\n              entity,\n              { field_name: 'frame_out', data_type: 'number' },\n              event\n            )\n        \"\n        v-if=\"isCurrentUserManager\"\n      />\n      <span class=\"metadata-value selectable\" v-else>\n        {{ getMetadataFieldValue({ field_name: 'frame_out' }, entity) }}\n      </span>\n    </div>\n\n    <template v-if=\"isShowInfosBreakdown\">\n      <div\n        class=\"metadata-descriptor flexrow-item\"\n        :title=\"entity.data ? entity.data[descriptor.field_name] : ''\"\n        :key=\"'desc' + entity.id + '-' + descriptor.id\"\n        :style=\"{\n          'min-width': columnWidth[descriptor.id]\n            ? columnWidth[descriptor.id] + 'px'\n            : '110px',\n          'max-width': columnWidth[descriptor.id]\n            ? columnWidth[descriptor.id] + 'px'\n            : '110px'\n        }\"\n        v-for=\"descriptor in visibleMetadataDescriptors\"\n      >\n        <input\n          class=\"input-editor\"\n          @input=\"event => onMetadataFieldChanged(entity, descriptor, event)\"\n          :value=\"getMetadataFieldValue(descriptor, entity)\"\n          v-if=\"\n            descriptor.choices.length === 0 &&\n            (isCurrentUserManager ||\n              isSupervisorInDepartments(descriptor.departments))\n          \"\n        />\n        <div\n          class=\"metadata-value selectable\"\n          v-else-if=\"\n            descriptor.choices.length > 0 &&\n            getDescriptorChecklistValues(descriptor).length > 0\n          \"\n        >\n          <p\n            :key=\"`${entity.id}-${descriptor.id}-${i}-${option.text}-div`\"\n            v-for=\"(option, i) in getDescriptorChecklistValues(descriptor)\"\n          >\n            <input\n              type=\"checkbox\"\n              @change=\"\n                event =>\n                  onMetadataChecklistChanged(\n                    entity,\n                    descriptor,\n                    option.text,\n                    event\n                  )\n              \"\n              :id=\"`${entity.id}-${descriptor.id}-${i}-${option.text}-input`\"\n              :checked=\"\n                getMetadataChecklistValues(descriptor, entity)[option.text]\n              \"\n              :disabled=\"\n                !(\n                  isCurrentUserManager ||\n                  isSupervisorInDepartments(descriptor.departments)\n                )\n              \"\n              :style=\"[\n                isCurrentUserManager ||\n                isSupervisorInDepartments(descriptor.departments)\n                  ? { cursor: 'pointer' }\n                  : { cursor: 'auto' }\n              ]\"\n            />\n            <label\n              class=\"ml05\"\n              :for=\"`${entity.id}-${descriptor.id}-${i}-${option.text}-input`\"\n              :style=\"[\n                isCurrentUserManager ||\n                isSupervisorInDepartments(descriptor.departments)\n                  ? { cursor: 'pointer' }\n                  : { cursor: 'auto' }\n              ]\"\n            >\n              {{ option.text }}\n            </label>\n          </p>\n        </div>\n        <span\n          class=\"select\"\n          v-else-if=\"\n            isCurrentUserManager ||\n            isSupervisorInDepartments(descriptor.departments)\n          \"\n        >\n          <select\n            class=\"select-input\"\n            @change=\"event => onMetadataFieldChanged(entity, descriptor, event)\"\n          >\n            <option\n              :key=\"`desc-value-${entity.id}-${descriptor.id}-${i}-${option.label}-${option.value}`\"\n              :value=\"option.value\"\n              :selected=\"\n                getMetadataFieldValue(descriptor, entity) === option.value\n              \"\n              v-for=\"(option, i) in getDescriptorChoicesOptions(descriptor)\"\n            >\n              {{ option.label }}\n            </option>\n          </select>\n        </span>\n        <span class=\"metadata-value selectable\" v-else>\n          {{ getMetadataFieldValue(descriptor, entity) }}\n        </span>\n      </div>\n    </template>\n    <div\n      class=\"asset-list flexrow-item\"\n      :key=\"entity.id + '-' + assetType\"\n      v-for=\"assetType in assetTypes\"\n    >\n      <div\n        class=\"asset-type-line flexcolumn\"\n        v-if=\"assetsByAssetTypesMap[assetType] !== undefined\"\n      >\n        <div class=\"flexrow-item mb05\">\n          {{ nbAssetsForType(assetType) }}\n          {{ $tc('assets.number', nbAssetsForType(assetType)) }}\n        </div>\n        <div class=\"asset-type-items flexrow-item\">\n          <asset-block\n            class=\"flexrow-item\"\n            :key=\"asset.id\"\n            :asset=\"asset\"\n            :active=\"selected\"\n            :nb-occurences=\"asset.nb_occurences\"\n            :read-only=\"readOnly\"\n            :text-mode=\"textMode\"\n            :big-mode=\"bigMode\"\n            @edit-label=\"onEditLabelClicked\"\n            @remove-one=\"removeOneAsset\"\n            @add-one=\"addOneAsset\"\n            v-for=\"asset in assetsByAssetTypesMap[assetType]\"\n          />\n        </div>\n        <div class=\"actions filler\"></div>\n      </div>\n      <div class=\"asset-type-line flexrow empty mt05 mb05\" v-else>\n        {{ $t('breakdown.empty') }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nimport { renderMarkdown } from '@/lib/render'\nimport { entityListMixin } from '@/components/mixins/entity_list'\nimport { descriptorMixin } from '@/components/mixins/descriptors'\n\nimport AssetBlock from '@/components/pages/breakdown/AssetBlock.vue'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\n\nexport default {\n  name: 'shot-line',\n\n  mixins: [entityListMixin, descriptorMixin],\n\n  components: {\n    AssetBlock,\n    EntityThumbnail\n  },\n\n  props: {\n    entity: {\n      default: () => {},\n      type: Object\n    },\n    previewFileId: {\n      default: '',\n      type: String\n    },\n    selected: {\n      default: false,\n      type: Boolean\n    },\n    name: {\n      default: '',\n      type: String\n    },\n    assets: {\n      default: () => [],\n      type: Array\n    },\n    assetTypes: {\n      default: () => [],\n      type: Array\n    },\n    readOnly: {\n      default: false,\n      type: Boolean\n    },\n    textMode: {\n      default: false,\n      type: Boolean\n    },\n    metadataDescriptors: {\n      default: () => [],\n      type: Array\n    },\n    metadataDisplayHeaders: {\n      default: () => {},\n      type: Object\n    },\n    bigMode: {\n      default: false,\n      type: Boolean\n    },\n    isDescription: {\n      default: true,\n      type: Boolean\n    },\n    isSaveError: {\n      default: false,\n      type: Boolean\n    },\n    columnWidth: {\n      default: () => {},\n      type: Object\n    }\n  },\n\n  emits: ['add-one', 'click', 'edit-label', 'field-changed', 'remove-one'],\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isFrameIn',\n      'isFrameOut',\n      'isFrames',\n      'isShowInfosBreakdown',\n      'user'\n    ]),\n\n    chunks() {\n      const chunks = this.name.split(' / ')\n      return chunks.filter(chunk => chunk && chunk !== 'undefined')\n    },\n\n    assetsByAssetTypesMap() {\n      const assetsByAssetTypes = {}\n      this.assets.forEach(assetTypeAssets => {\n        if (assetTypeAssets[0]) {\n          assetsByAssetTypes[assetTypeAssets[0].asset_type_name] =\n            assetTypeAssets\n        }\n      })\n      return assetsByAssetTypes\n    }\n  },\n\n  methods: {\n    onClicked(event) {\n      this.$emit('click', this.entity.id, event)\n    },\n\n    onEditLabelClicked(asset, label) {\n      this.$emit('edit-label', asset, label, this.entity.id)\n    },\n\n    removeOneAsset(assetId) {\n      this.$emit('remove-one', assetId)\n    },\n\n    addOneAsset(assetId) {\n      this.$emit('add-one', assetId)\n    },\n\n    onDescriptionChanged(entity, event) {\n      this.$emit('field-changed', {\n        entry: entity,\n        fieldName: 'description',\n        value: event.target.value\n      })\n    },\n\n    onNbFramesChanged(entity, event) {\n      this.$emit('field-changed', {\n        entry: entity,\n        fieldName: 'nb_frames',\n        value: event.target.value\n      })\n    },\n\n    onStandbyChanged(entity, event) {\n      this.$emit('field-changed', {\n        entry: entity,\n        fieldName: 'is_casting_standby',\n        value: event.target.checked\n      })\n    },\n\n    renderMarkdown,\n\n    nbAssetsForType(assetType) {\n      return this.assetsByAssetTypesMap[assetType].reduce(\n        (acc, a) => acc + a.nb_occurences,\n        0\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .asset-type-name {\n    color: $light-grey-light;\n  }\n\n  .asset-list {\n    color: $light-grey;\n  }\n\n  .select select,\n  div .input-editor,\n  div .tooltip-editor {\n    color: $white;\n\n    option {\n      background: $dark-grey-light;\n      color: $white;\n    }\n\n    &:focus,\n    &:active,\n    &:hover {\n      background: $dark-grey-light;\n    }\n  }\n}\n\n.asset-list {\n  align-self: stretch;\n  border-left: 1px solid $light-grey;\n  margin-right: 0;\n  min-width: 150px;\n  max-width: 150px;\n  padding-left: 1em;\n\n  &:last-child {\n    border-right: 1px solid $light-grey;\n  }\n}\n\n.text-mode .asset-list {\n  padding-top: 0;\n}\n\n.asset-type-line {\n  padding-bottom: 0.5em;\n  padding-top: 0.5em;\n}\n.asset-type-line:not(:first-child) {\n  margin-top: 0.5em;\n}\n\n.shot-name {\n  color: var(--text);\n  font-weight: bold;\n  flex: 0 0 100px;\n  min-width: 160px;\n  max-width: 160px;\n  padding-top: 0;\n  word-break: break-all;\n}\n\n.asset-type-name {\n  display: flex;\n  width: 150px;\n  height: 40px;\n  color: $grey-strong;\n  text-transform: uppercase;\n}\n\n.asset-type-items {\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.shot {\n  font-size: 1.1em;\n  border-bottom: 1px solid $light-grey;\n  color: $grey-strong;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n\n  .empty {\n    color: $light-grey;\n  }\n\n  &.selected {\n    .empty {\n      color: $grey;\n    }\n  }\n}\n\n.shot:hover {\n  background: var(--background-selectable);\n  .sticky {\n    background: var(--background-selectable);\n  }\n}\n\n.shot.selected {\n  background: var(--background-selected);\n  .sticky {\n    background: var(--background-selected);\n  }\n}\n\n.sticky {\n  background: var(--background);\n  border-right: 1px solid $light-grey;\n  flex: 1;\n  left: 0;\n  padding: 0.5em;\n  position: sticky;\n  margin-right: 0;\n  width: 300px;\n  max-width: 300px;\n  z-index: 3;\n}\n\n.empty {\n  font-style: italic;\n  color: $grey;\n}\n\n.description-column,\n.metadata-descriptor,\n.frames-column,\n.standby-column {\n  align-items: flex-start;\n  align-self: stretch;\n  border-left: 1px solid $light-grey;\n  display: flex;\n  margin-right: 0;\n  padding-top: 0;\n\n  &:last-child {\n    border-right: 1px solid $light-grey;\n  }\n}\n\n.frames-column {\n  justify-content: right;\n  .metadata-value {\n    padding-right: 0.5em;\n    padding-top: 0.5em;\n  }\n  input {\n    text-align: right;\n  }\n}\n\n.standby-column {\n  padding-top: 1em;\n  min-width: 60px;\n  max-width: 60px;\n  justify-content: center;\n}\n\n.metadata-descriptor {\n  min-width: 119px;\n  max-width: 119px;\n}\n\n.description-column {\n  min-width: 250px;\n  max-width: 250px;\n\n  .tooltip-editor {\n    font-size: 0.85em;\n  }\n}\n\n.frames-column {\n  min-width: 81px;\n  max-width: 81px;\n}\n\n.tooltip-editor {\n  resize: none;\n}\n\ndiv .tooltip-text {\n  padding: 0.5rem;\n  word-break: break-all;\n}\n\n.metadata-value {\n  word-break: break-all;\n}\n\ndiv .input-editor,\ndiv .tooltip-editor {\n  color: $grey-strong;\n  padding: 0.5rem;\n  width: 100%;\n  background: transparent;\n  border: 1px solid transparent;\n\n  &:active,\n  &:focus,\n  &:hover {\n    background: transparent;\n    background: white;\n  }\n\n  &:active,\n  &:focus {\n    border: 1px solid $green;\n  }\n\n  &:hover {\n    border: 1px solid $light-green;\n  }\n\n  &:invalid {\n    color: $red;\n  }\n}\n\ndiv .input-editor {\n  height: 40px;\n}\n\ndiv .tooltip-editor {\n  height: 100%;\n}\n\n.metadata-descriptor .select {\n  color: var(--text);\n  margin: 0;\n  height: 40px;\n  width: 100%;\n  border: 1px solid transparent;\n\n  &::after {\n    border-color: transparent;\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    &::after {\n      border-color: $green;\n    }\n  }\n\n  select {\n    color: var(--text);\n    height: 100%;\n    width: 100%;\n    background: transparent;\n    border-radius: 0;\n    border: 1px solid transparent;\n\n    &:focus {\n      border: 1px solid $green;\n      background: var(--background);\n      color: var(--text);\n    }\n\n    &:hover {\n      background: var(--background);\n      border: 1px solid $light-green;\n    }\n  }\n}\n\n.description-column .selectable,\n.metadata-descriptor .selectable {\n  padding: 0.5rem;\n}\n\n.stdby {\n  background: var(--background-disabled);\n  .sticky {\n    background: var(--background-disabled);\n  }\n}\n\n.thumbnail {\n  padding: 5px;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield; /* Firefox */\n}\n</style>\n","<template>\n  <button\n    :class=\"{\n      'level-item': true,\n      button: true,\n      'is-toggle': true,\n      'is-on': buttonIsOn\n    }\"\n    :title=\"$t(buttonIsOn ? 'tasks.hide_infos' : 'tasks.show_infos')\"\n    @click=\"toggleInfos\"\n  >\n    <kitsu-icon\n      class=\"icon is-small\"\n      name=\"infos\"\n      :title=\"$t(buttonIsOn ? 'tasks.hide_infos' : 'tasks.show_infos')\"\n    />\n  </button>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport KitsuIcon from '@/components/widgets/KitsuIcon.vue'\n\nexport default {\n  name: 'show-infos-button',\n\n  components: {\n    KitsuIcon\n  },\n\n  computed: {\n    ...mapGetters(['isShowInfosBreakdown']),\n\n    buttonIsOn() {\n      return this.isShowInfosBreakdown\n    }\n  },\n\n  methods: {\n    ...mapActions(['hideInfosBreakdown', 'showInfosBreakdown']),\n\n    toggleInfos() {\n      if (this.isShowInfosBreakdown) {\n        this.hideInfosBreakdown()\n      } else {\n        this.showInfosBreakdown()\n      }\n    }\n  },\n\n  mounted() {\n    if (localStorage.getItem('show-infos-breakdown') === 'false') {\n      this.hideInfosBreakdown()\n    } else {\n      this.showInfosBreakdown()\n    }\n  },\n\n  watch: {\n    isShowInfosBreakdown() {\n      const value = this.isShowInfosBreakdown.toString()\n      localStorage.setItem('show-infos-breakdown', value)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.button {\n  border-radius: 10px;\n  padding: 0 10px;\n}\n\n.button .icon {\n  height: 18px;\n  width: 18px;\n}\n</style>\n","<template>\n  <div class=\"breakdown page\">\n    <div class=\"breakdown-columns\">\n      <div class=\"breakdown-column casting-column\">\n        <div class=\"flexrow mb1\">\n          <div v-if=\"isEpisodeCasting\">\n            <h2 class=\"subtitle mt05\">\n              {{ $t('breakdown.episode_casting') }}\n            </h2>\n          </div>\n          <combobox-styled\n            class=\"mr1\"\n            :label=\"$t('main.for')\"\n            :options=\"castingTypeOptions\"\n            v-model=\"castingType\"\n            v-if=\"!isEpisodeCasting\"\n          />\n          <combobox-styled\n            :label=\"$t('shots.fields.sequence')\"\n            :options=\"castingSequencesOptions\"\n            v-model=\"sequenceId\"\n            v-if=\"isShotCasting\"\n          />\n          <combobox-styled\n            :label=\"$t('tasks.fields.asset_type')\"\n            :options=\"castingAssetTypesOptions\"\n            v-model=\"assetTypeId\"\n            v-if=\"isAssetCasting\"\n          />\n          <span class=\"filler\"></span>\n          <show-infos-button class=\"flexrow-item\" />\n          <button-simple\n            class=\"flexrow-item\"\n            :title=\"\n              isTextMode\n                ? $t('breakdown.picture_mode')\n                : $t('breakdown.text_mode')\n            \"\n            icon=\"type\"\n            :is-on=\"isTextMode\"\n            :is-responsive=\"true\"\n            @click=\"toggleTextMode\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            icon=\"big-thumbnail\"\n            :is-on=\"isBigMode\"\n            :title=\"$t('tasks.big_thumbnails')\"\n            @click=\"isBigMode = !isBigMode\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            :title=\"$t('main.csv.import_file')\"\n            icon=\"import\"\n            :is-responsive=\"true\"\n            @click=\"showImportModal\"\n            v-if=\"isCurrentUserManager\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            icon=\"export\"\n            :is-responsive=\"true\"\n            :title=\"$t('main.csv.export_current_view')\"\n            @click=\"exportViewToCsv\"\n          />\n          <button-href-link\n            class=\"flexrow-item\"\n            :title=\"$t('main.csv.export_file')\"\n            icon=\"export-lines\"\n            :is-responsive=\"true\"\n            :path=\"exportUrlPath\"\n            v-if=\"isCurrentUserManager\"\n          />\n        </div>\n\n        <spinner class=\"mt1\" v-if=\"isLoading\" />\n\n        <div class=\"flexrow mb05 list-options\">\n          <table-metadata-selector-menu\n            namespace=\"breakdown\"\n            :descriptors=\"metadataDescriptors\"\n            :exclude=\"{\n              fps: true,\n              estimation: true,\n              resolution: true,\n              maxRetakes: true,\n              timeSpent: true\n            }\"\n            v-model=\"metadataDisplayHeaders\"\n            v-show=\"columnSelectorDisplayed\"\n            v-if=\"isShowInfosBreakdown\"\n          />\n          <span class=\"filler\"></span>\n\n          <button-simple\n            class=\"is-small mr05\"\n            icon=\"down\"\n            @click=\"toggleColumnSelector\"\n            v-if=\"isShowInfosBreakdown\"\n          />\n        </div>\n\n        <div\n          ref=\"casting-header\"\n          class=\"casting-header flexrow\"\n          @scroll.passive=\"onCastingHeaderScroll\"\n          v-if=\"!isLoading\"\n        >\n          <div\n            class=\"entity-header\"\n            ref=\"name-header\"\n            :style=\"{ 'min-width': nameHeaderMinWidth }\"\n          >\n            <div>\n              {{ $t('shots.fields.name') }}\n            </div>\n            <div class=\"filler\"></div>\n            <div\n              ref=\"resizable-knob-name\"\n              class=\"resizable-knob\"\n              @mousedown.prevent=\"\n                initResize('resizable-knob-name', 'name-header')\n              \"\n            ></div>\n          </div>\n          <div class=\"standby-header\" v-if=\"isShowInfosBreakdown\">\n            {{ $t('breakdown.fields.standby') }}\n          </div>\n          <div\n            class=\"description-header\"\n            v-if=\"isShowInfosBreakdown && isDescription\"\n          >\n            {{ $t('shots.fields.description') }}\n          </div>\n          <div\n            class=\"frames-header\"\n            v-if=\"\n              isShotCasting &&\n              isFrames &&\n              isShowInfosBreakdown &&\n              metadataDisplayHeaders.frames\n            \"\n          >\n            {{ $t('shots.fields.nb_frames') }}\n          </div>\n          <div\n            class=\"frames-header\"\n            v-if=\"\n              isShotCasting &&\n              isFrameIn &&\n              isShowInfosBreakdown &&\n              metadataDisplayHeaders.frameIn\n            \"\n          >\n            {{ $t('shots.fields.frame_in') }}\n          </div>\n          <div\n            class=\"frames-header\"\n            v-if=\"\n              isShotCasting &&\n              isFrameOut &&\n              isShowInfosBreakdown &&\n              metadataDisplayHeaders.frameOut\n            \"\n          >\n            {{ $t('shots.fields.frame_out') }}\n          </div>\n          <div\n            class=\"descriptor-header\"\n            :key=\"'descriptor-header-' + descriptor.id\"\n            :ref=\"'descriptor-header-' + descriptor.id\"\n            :style=\"{\n              'min-width': columnWidth[descriptor.id]\n                ? columnWidth[descriptor.id] + 'px'\n                : '110px'\n            }\"\n            v-for=\"descriptor in visibleMetadataDescriptors\"\n            v-show=\"isShowInfosBreakdown\"\n          >\n            <span\n              class=\"descriptor-departments mr05\"\n              v-if=\"descriptorCurrentDepartments(descriptor).length\"\n            >\n              <department-name\n                :key=\"department.id\"\n                :department=\"department\"\n                no-padding\n                only-dot\n                v-for=\"department in descriptorCurrentDepartments(descriptor)\"\n              />\n            </span>\n            <span\n              class=\"ellipsis nowrap descriptor-name filler\"\n              :title=\"descriptor.name\"\n            >\n              {{ descriptor.name }}\n            </span>\n            <div\n              :ref=\"'resizable-knob-descriptor-' + descriptor.id\"\n              class=\"resizable-knob\"\n              @mousedown.prevent=\"\n                initResize(\n                  'resizable-knob-descriptor-',\n                  'descriptor-header-',\n                  descriptor.id\n                )\n              \"\n            ></div>\n          </div>\n          <div\n            :key=\"assetType\"\n            class=\"asset-type-header\"\n            v-for=\"assetType in castingAssetTypes\"\n          >\n            <span class=\"ellipsis nowrap\" :title=\"assetType\">\n              {{ assetType }}\n            </span>\n          </div>\n\n          <div class=\"actions filler\"></div>\n        </div>\n\n        <div\n          ref=\"casting-list\"\n          class=\"casting-list\"\n          @scroll.passive=\"onCastingScroll\"\n          v-if=\"!isLoading\"\n        >\n          <div class=\"shot-lines\">\n            <shot-line\n              :key=\"entity.id\"\n              :entity=\"entity\"\n              :preview-file-id=\"entity.preview_file_id\"\n              :selected=\"selection[entity.id]\"\n              :name=\"getEntityName(entity)\"\n              :assets=\"castingByType[entity.id] || []\"\n              :asset-types=\"castingAssetTypes\"\n              :read-only=\"!isCurrentUserManager\"\n              :text-mode=\"isTextMode\"\n              :metadata-descriptors=\"metadataDescriptors\"\n              :metadata-display-headers=\"metadataDisplayHeaders\"\n              :big-mode=\"isBigMode\"\n              :is-description=\"isDescription\"\n              :is-save-error=\"saveErrors[entity.id]\"\n              :column-width=\"columnWidth\"\n              @add-one=\"addOneAsset\"\n              @click=\"selectEntity\"\n              @edit-label=\"onEditLabelClicked\"\n              @field-changed=\"onFieldChanged\"\n              @metadata-changed=\"onMetadataChanged\"\n              @remove-one=\"removeOneAssetFromSelection\"\n              v-for=\"entity in castingEntities\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div\n        ref=\"asset-list\"\n        @scroll.passive=\"onAssetListScroll\"\n        class=\"breakdown-column assets-column\"\n        v-if=\"isCurrentUserManager\"\n      >\n        <h2 class=\"subtitle\">\n          {{ $t('breakdown.all_assets') }}\n        </h2>\n        <div class=\"flexrow mt1 mb1\">\n          <button-simple\n            class=\"flexrow-item\"\n            :title=\"$t('assets.new_asset')\"\n            icon=\"plus\"\n            @click=\"modals.isNewDisplayed = true\"\n            v-if=\"!isOnlyCurrentEpisode\"\n          />\n          <span class=\"filler\"></span>\n\n          <button-simple\n            class=\"flexrow-item\"\n            :text=\"$t('breakdown.show_library')\"\n            icon=\"assets\"\n            :is-on=\"libraryDisplayed\"\n            @click=\"libraryDisplayed = !libraryDisplayed\"\n            v-if=\"!isOnlyCurrentEpisode\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            :text=\"$t('assets.only_current_episode')\"\n            :is-on=\"isOnlyCurrentEpisode\"\n            @click=\"isOnlyCurrentEpisode = !isOnlyCurrentEpisode\"\n            v-if=\"isTVShow && !isEpisodeCasting\"\n          />\n        </div>\n\n        <div class=\"filters-area flexrow\">\n          <search-field\n            class=\"flexrow-item\"\n            ref=\"search-field\"\n            :can-save=\"true\"\n            @save=\"saveSearchQuery\"\n            @change=\"onSearchChange\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            :title=\"$t('entities.build_filter.title')\"\n            icon=\"filter\"\n            @click=\"modals.isBuildFilterDisplayed = true\"\n          />\n        </div>\n        <div class=\"query-list\">\n          <search-query-list\n            :groups=\"breakdownSearchFilterGroups\"\n            :is-group-enabled=\"true\"\n            :queries=\"breakdownSearchQueries\"\n            type=\"breakdown\"\n            @remove-search=\"removeSearchQuery\"\n          />\n        </div>\n\n        <spinner v-if=\"isAssetsLoading\" />\n        <template v-else>\n          <div\n            class=\"type-assets\"\n            :key=\"typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\"\n            v-for=\"typeAssets in availableAssetsByType\"\n          >\n            <div class=\"asset-type\">\n              {{ typeAssets.length > 0 ? typeAssets[0].asset_type_name : '' }}\n            </div>\n            <div class=\"asset-list\">\n              <available-asset-block\n                :key=\"asset.id\"\n                :asset=\"asset\"\n                :active=\"Object.keys(selection).length > 0\"\n                :text-mode=\"isTextMode\"\n                :big-mode=\"isBigMode\"\n                @add-one=\"addOneAsset\"\n                @add-ten=\"addTenAssets\"\n                v-for=\"asset in typeAssets\"\n                v-show=\"libraryDisplayed || !asset.shared\"\n              />\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n\n    <import-render-modal\n      :active=\"modals.isImportRenderDisplayed\"\n      :is-loading=\"loading.importing\"\n      :is-error=\"errors.importing\"\n      :import-error=\"errors.importingError\"\n      :parsed-csv=\"parsedCSV\"\n      :form-data=\"importCsvFormData\"\n      :columns=\"renderColumns\"\n      :data-matchers=\"dataMatchers\"\n      :database=\"filteredCasting\"\n      :disable-update=\"true\"\n      @reupload=\"resetImport\"\n      @cancel=\"hideImportRenderModal\"\n      @confirm=\"uploadImportFile\"\n    />\n\n    <import-modal\n      ref=\"import-modal\"\n      :active=\"modals.importing\"\n      :is-loading=\"loading.importing\"\n      :is-error=\"errors.importing\"\n      :form-data=\"importCsvFormData\"\n      :columns=\"csvColumns\"\n      :optional-columns=\"optionalCsvColumns\"\n      @cancel=\"hideImportModal\"\n      @confirm=\"renderImport\"\n    />\n\n    <edit-label-modal\n      ref=\"edit-label-modal\"\n      :active=\"modals.isEditLabelDisplayed\"\n      :is-loading=\"loading.editLabel\"\n      :is-error=\"loading.editError\"\n      :asset=\"editedAsset\"\n      :label=\"editedAssetLinkLabel\"\n      @cancel=\"modals.isEditLabelDisplayed = false\"\n      @confirm=\"confirmEditLabel\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      @confirm=\"confirmBuildFilter\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n    />\n\n    <edit-asset-modal\n      ref=\"edit-asset-modal\"\n      :active=\"modals.isNewDisplayed\"\n      :asset-to-edit=\"{}\"\n      :is-error=\"errors.edit\"\n      :is-loading=\"loading.edit\"\n      :is-loading-stay=\"loading.stay\"\n      :is-success=\"success.edit\"\n      @confirm=\"confirmNewAsset\"\n      @confirm-and-stay=\"confirmNewAssetStay\"\n      @cancel=\"modals.isNewDisplayed = false\"\n    />\n\n    <delete-modal\n      :active=\"modals.isRemoveConfirmationDisplayed\"\n      :delete-button-text=\"$t('breakdown.remove.confirm')\"\n      :error-text=\"$t('breakdown.remove.error')\"\n      :is-loading=\"loading.remove\"\n      :is-error=\"loading.error\"\n      :text=\"$t('breakdown.remove.text')\"\n      @confirm=\"confirmAssetRemoval\"\n      @cancel=\"modals.isRemoveConfirmationDisplayed = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport moment from 'moment'\n\nimport csv from '@/lib/csv'\nimport clipboard from '@/lib/clipboard'\nimport preferences from '@/lib/preferences'\nimport stringHelpers from '@/lib/string'\nimport { range } from '@/lib/time'\nimport { searchMixin } from '@/components/mixins/search'\nimport { entityListMixin } from '@/components/mixins/entity_list'\n\nimport AvailableAssetBlock from '@/components/pages/breakdown/AvailableAssetBlock.vue'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal.vue'\nimport ButtonHrefLink from '@/components/widgets/ButtonHrefLink.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport DepartmentName from '@/components/widgets/DepartmentName.vue'\nimport EditAssetModal from '@/components/modals/EditAssetModal.vue'\nimport EditLabelModal from '@/components/modals/EditLabelModal.vue'\nimport ImportRenderModal from '@/components/modals/ImportRenderModal.vue'\nimport ImportModal from '@/components/modals/ImportModal.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport ShotLine from '@/components/pages/breakdown/ShotLine.vue'\nimport ShowInfosButton from '@/components/widgets/ShowInfosButton.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TableMetadataSelectorMenu from '@/components/widgets/TableMetadataSelectorMenu.vue'\n\nexport default {\n  name: 'breakdown',\n\n  mixins: [entityListMixin, searchMixin],\n\n  components: {\n    AvailableAssetBlock,\n    BuildFilterModal,\n    ButtonHrefLink,\n    ButtonSimple,\n    ComboboxStyled,\n    DeleteModal,\n    DepartmentName,\n    EditAssetModal,\n    EditLabelModal,\n    ImportModal,\n    ImportRenderModal,\n    SearchField,\n    SearchQueryList,\n    ShotLine,\n    ShowInfosButton,\n    Spinner,\n    TableMetadataSelectorMenu\n  },\n\n  data() {\n    return {\n      assetTypeId: '',\n      castingType: 'shot',\n      columnSelectorDisplayed: false,\n      editedAsset: null,\n      editedEntityId: null,\n      editedAssetLinkLabel: null,\n      episodeId: '',\n      importCsvFormData: {},\n      isBigMode: false,\n      isLocked: false,\n      isLoading: false,\n      isOnlyCurrentEpisode: false,\n      isTextMode: false,\n      libraryDisplayed: false,\n      optionalCsvColumns: ['Label'],\n      parsedCSV: [],\n      removalData: {},\n      saveErrors: {},\n      selection: {},\n      sequenceId: 'all',\n      errors: {\n        edit: false,\n        editLabel: false,\n        importing: false,\n        importingError: null,\n        remove: false\n      },\n      loading: {\n        edit: false,\n        editLabel: false,\n        importing: false,\n        remove: false,\n        stay: false\n      },\n      metadataDisplayHeaders: {\n        stdby: true,\n        fps: false,\n        frameIn: true,\n        frameOut: true,\n        frames: true,\n        estimation: false,\n        maxRetakes: false,\n        resolution: false,\n        timeSpent: false\n      },\n      modals: {\n        isBuildFilterDisplayed: false,\n        isEditLabelDisplayed: false,\n        isNewDisplayed: false,\n        isImportRenderDisplayed: false,\n        isRemoveConfirmationDisplayed: false,\n        importing: false\n      },\n      success: {\n        edit: false\n      },\n      columnWidth: {}\n    }\n  },\n\n  mounted() {\n    if (!this.isLoading) {\n      this.reset()\n    }\n    this.resetSequenceOption()\n    this.setLastProductionScreen('breakdown')\n    this.isTextMode = preferences.getBoolPreference('breakdown:text-mode')\n    window.addEventListener('keydown', this.onKeyDown, false)\n\n    this.resetDisplayHeaders()\n    this.resetColumnWidth()\n    this.setSearchFromUrl()\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown)\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'assetMetadataDescriptors',\n      'assetTypeMap',\n      'assetsByType',\n      'breakdownSearchQueries',\n      'breakdownSearchFilterGroups',\n      'casting',\n      'castingAssetTypeAssets',\n      'castingAssetTypesOptions',\n      'castingByType',\n      'castingCurrentShot',\n      'castingEpisodes',\n      'castingSequenceShots',\n      'castingSequencesOptions',\n      'currentEpisode',\n      'currentProduction',\n      'departmentMap',\n      'displayedSequences',\n      'displayedShots',\n      'episodeMap',\n      'episodes',\n      'isAssetsLoading',\n      'isCurrentUserManager',\n      'isFrameIn',\n      'isFrameOut',\n      'isFrames',\n      'isShotsLoading',\n      'isShowInfosBreakdown',\n      'isTVShow',\n      'sequenceMap',\n      'shotMap',\n      'shotMetadataDescriptors'\n    ]),\n\n    searchField() {\n      return this.$refs['search-field']\n    },\n\n    castingTypeOptions() {\n      const isAssetsOnly = this.currentProduction.production_type === 'assets'\n      const isShotsOnly = this.currentProduction.production_type === 'shots'\n      const options = []\n      if (!isShotsOnly) {\n        options.push({\n          label: this.$t('assets.title'),\n          value: 'asset'\n        })\n      }\n      if (\n        !isAssetsOnly &&\n        (!this.isTVShow ||\n          (this.currentEpisode && this.currentEpisode.id !== 'main'))\n      ) {\n        options.unshift({\n          label: this.$t('shots.title'),\n          value: 'shot'\n        })\n      }\n      return options\n    },\n\n    availableAssetsByType() {\n      const result = []\n      this.assetsByType.forEach(typeGroup => {\n        let newGroup = typeGroup.filter(\n          asset =>\n            !asset.canceled && (!asset.is_shared || this.libraryDisplayed)\n        )\n        if (this.isTVShow && this.isOnlyCurrentEpisode) {\n          newGroup = typeGroup.filter(asset => {\n            return (\n              asset.episode_id === this.currentEpisode.id ||\n              asset.casting_episode_ids?.includes(this.currentEpisode.id)\n            )\n          })\n        }\n        if (newGroup.length > 0) result.push(newGroup)\n      })\n      return result\n    },\n\n    exportUrlPath() {\n      let path = `/api/export/csv/projects/${this.currentProduction.id}/casting.csv`\n      let paramAdded = false\n      if (this.currentEpisode) {\n        path += `?episode_id=${this.currentEpisode.id}`\n        paramAdded = true\n      }\n      if (this.isShotCasting) {\n        path += `${paramAdded ? '&' : '?'}is_shot_casting=${this.isShotCasting}`\n      }\n      return path\n    },\n\n    isEpisodeCasting() {\n      return this.currentEpisode && this.currentEpisode.id === 'all'\n    },\n\n    isAssetCasting() {\n      return !this.isEpisodeCasting && this.castingType === 'asset'\n    },\n\n    isShotCasting() {\n      return !this.isEpisodeCasting && this.castingType === 'shot'\n    },\n\n    castingEntities() {\n      if (this.isEpisodeCasting) {\n        return this.castingEpisodes\n      } else if (this.isShotCasting) {\n        return this.castingSequenceShots\n      } else {\n        if (\n          this.isTVShow &&\n          this.currentEpisode &&\n          this.currentEpisode.id !== 'main'\n        ) {\n          return this.castingAssetTypeAssets.filter(\n            asset =>\n              asset.episode_id === this.currentEpisode.id ||\n              asset.casting_episode_ids?.includes(this.currentEpisode.id)\n          )\n        } else if (this.isTVShow && this.currentEpisode.id === 'main') {\n          return this.castingAssetTypeAssets.filter(asset => !asset.episode_id)\n        } else {\n          return this.castingAssetTypeAssets\n        }\n      }\n    },\n\n    castingAssetTypes() {\n      const castingAssetTypes = []\n      const assetTypeNameMap = {}\n      this.castingEntities.forEach(entity => {\n        if (this.castingByType[entity.id]) {\n          this.castingByType[entity.id].forEach(type => {\n            if (type[0] && !assetTypeNameMap[type[0].asset_type_name]) {\n              assetTypeNameMap[type[0].asset_type_name] = true\n              castingAssetTypes.push(type[0].asset_type_name)\n            }\n          })\n        }\n      })\n      return castingAssetTypes.sort()\n    },\n\n    filteredCasting() {\n      const casting = {}\n      this.castingEntities.forEach(entity => {\n        if (this.castingByType[entity.id]) {\n          this.castingByType[entity.id].forEach(type => {\n            type.forEach(item => {\n              const castKey = `${item.asset_name}${item.asset_type_name}${item.name}`\n              casting[castKey] = true\n            })\n          })\n        }\n      })\n      return casting\n    },\n\n    isDescription() {\n      return this.castingEntities.some(\n        e => e.description && e.description.length > 0\n      )\n    },\n\n    csvColumns() {\n      return this.isTVShow && this.currentEpisode?.id !== 'all'\n        ? ['Episode', 'Parent', 'Name', 'Asset Type', 'Asset', 'Occurences']\n        : ['Parent', 'Name', 'Asset Type', 'Asset', 'Occurences']\n    },\n\n    renderColumns() {\n      return [...this.csvColumns, ...this.optionalCsvColumns]\n    },\n\n    dataMatchers() {\n      return this.isTVShow\n        ? ['Episode', 'Name', 'Asset Type', 'Asset']\n        : ['Name', 'Asset Type', 'Asset']\n    },\n\n    metadataDescriptors() {\n      if (this.isEpisodeCasting) {\n        return []\n      } else if (this.isShotCasting) {\n        return this.shotMetadataDescriptors\n      } else {\n        return this.assetMetadataDescriptors\n      }\n    },\n\n    nameHeaderMinWidth() {\n      return this.columnWidth.name\n        ? parseInt(this.columnWidth.name, 10) + 1 + 'px'\n        : '251px'\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addAssetToCasting',\n      'editEpisode',\n      'editShot',\n      'editAsset',\n      'displayMoreAssets',\n      'loadEpisodeCasting',\n      'loadEpisodes',\n      'loadAssetCasting',\n      'loadAssets',\n      'loadShotCasting',\n      'loadShots',\n      'newAsset',\n      'removeAssetFromCasting',\n      'removeBreakdownSearch',\n      'saveBreakdownSearch',\n      'loadSequences',\n      'saveBreakdownSearchFilterGroup',\n      'saveCasting',\n      'setAssetLinkLabel',\n      'setAssetSearch',\n      'setCastingEpisodes',\n      'setCastingAssetType',\n      'setCastingAssetTypes',\n      'setCastingEpisode',\n      'setCastingForProductionEpisodes',\n      'setCastingSequence',\n      'setCurrentEpisode',\n      'setEntityCasting',\n      'setLastProductionScreen',\n      'uploadCastingFile'\n    ]),\n\n    reset() {\n      if (!this.isTVShow) {\n        const route = { ...this.$route }\n        if (route && route.params && route.params.episode_id) {\n          route.name = 'breakdown'\n          route.params.episode_id = null\n          this.$router.push(route)\n        }\n      }\n      this.isLoading = true\n      setTimeout(() => {\n        this.reloadEntities()\n      }, 100)\n    },\n\n    async reloadEntities() {\n      this.isLoading = true\n      if (!this.isTVShow || this.currentEpisode?.id !== 'main') {\n        await this.loadSequences()\n        await this.loadShots()\n      }\n      if (this.isTVShow) {\n        if (this.currentEpisode) {\n          this.episodeId = this.currentEpisode.id\n        }\n        this.setCastingEpisode(this.episodeId)\n        this.setCastingForProductionEpisodes()\n      } else {\n        this.setCastingEpisode(null)\n      }\n      this.loadAssets({ all: true, withTasks: true }).then(() => {\n        this.isLoading = false\n        this.displayMoreAssets()\n        this.setCastingAssetTypes()\n        if (this.assetTypeId) {\n          this.setCastingAssetType(this.assetTypeId)\n        } else if (\n          !this.isTVShow ||\n          (this.episodeId && !['main', 'all'].includes(this.episodeId))\n        ) {\n          this.setCastingSequence(this.sequenceId || 'all')\n        }\n        this.resetSequenceOption()\n        this.resetSelection()\n        if (\n          (this.currentEpisode && this.currentEpisode.id === 'main') ||\n          this.currentProduction.production_type === 'assets'\n        ) {\n          this.castingType = 'asset'\n        }\n      })\n    },\n\n    resetSequenceOption() {\n      if (\n        this.currentProduction.production_style === 'nft' &&\n        this.castingSequencesOptions[1]\n      ) {\n        this.sequenceId = this.castingSequencesOptions[1].value\n      }\n    },\n\n    resetSelection() {\n      const selection = {}\n      if (this.isEpisodeCasting) {\n        this.castingEpisodes.forEach(episode => {\n          selection[episode.id] = false\n        })\n      } else if (this.isShotCasting) {\n        this.castingSequenceShots.forEach(shot => {\n          selection[shot.id] = false\n        })\n      } else {\n        this.castingAssetTypeAssets.forEach(asset => {\n          selection[asset.id] = false\n        })\n      }\n      this.selection = selection\n    },\n\n    confirmBuildFilter(query) {\n      this.modals.isBuildFilterDisplayed = false\n      this.searchField.setValue(query)\n      this.onSearchChange(query)\n    },\n\n    onSearchChange(searchQuery) {\n      this.setAssetSearch(searchQuery)\n      this.setSearchInUrl(searchQuery)\n      this.displayMoreAssets()\n      this.displayMoreAssets()\n    },\n\n    selectEntity(entityId, event) {\n      const previousSelection = { ...this.selection }\n      if (!(event.ctrlKey || event.metaKey) && !event.shitKey) {\n        this.clearSelection()\n      }\n\n      if (this.previousEntityId && event.shiftKey) {\n        this.selectRange(this.previousEntityId, entityId)\n      }\n\n      if (!this.previousEntityId || !event.shiftKey) {\n        this.previousEntityId = entityId\n      }\n\n      const nbElementsSelected = Object.keys(previousSelection).filter(\n        k => previousSelection[k]\n      ).length\n      if (\n        !previousSelection[entityId] ||\n        (nbElementsSelected > 1 && !(event.ctrlKey || event.metaKey))\n      ) {\n        this.selection[entityId] = true\n      } else if (\n        previousSelection[entityId] &&\n        (event.ctrlKey || event.metaKey)\n      ) {\n        this.selection[entityId] = false\n      }\n    },\n\n    clearSelection() {\n      Object.keys(this.selection)\n        .filter(k => this.selection[k])\n        .forEach(shotId => {\n          this.selection[shotId] = false\n        })\n    },\n\n    selectRange(previousEntityId, entityId) {\n      const keys = Object.keys(this.selection)\n      const previousIndex = keys.findIndex(k => k === previousEntityId)\n      const index = keys.findIndex(k => k === entityId)\n\n      let indexRange = []\n      if (previousIndex < index) indexRange = range(previousIndex, index)\n      else indexRange = range(index, previousIndex)\n\n      indexRange.forEach(i => {\n        if (i >= 0) this.selection[keys[i]] = true\n      })\n    },\n\n    setLock() {\n      if (!this.$options.lockTimeout) {\n        this.$options.lockTimeout = setTimeout(() => {\n          this.isLocked = false\n        }, 3000)\n      }\n    },\n\n    async addOneAsset(assetId, amount = 1) {\n      this.isLocked = true\n      const entityIds = Object.keys(this.selection).filter(\n        key => this.selection[key]\n      )\n\n      for (const entityId of entityIds) {\n        this.addAssetToCasting({\n          entityId,\n          assetId,\n          nbOccurences: amount,\n          label: this.castingType === 'shot' ? 'animate' : 'fixed'\n        })\n\n        delete this.saveErrors[entityId]\n\n        try {\n          await this.saveCasting(entityId)\n          this.setLock()\n        } catch (err) {\n          this.saveErrors[entityId] = true\n          console.error(err)\n        }\n      }\n    },\n\n    async addTenAssets(assetId) {\n      this.addOneAsset(assetId, 10)\n    },\n\n    confirmAssetRemoval() {\n      this.saveAssetRemoval(\n        this.removalData.entityId,\n        this.removalData.assetId,\n        this.removalData.nbOccurences\n      )\n    },\n\n    saveAssetRemoval(entityId, assetId, nbOccurences) {\n      this.loading.remove = true\n      this.removeAssetFromCasting({ entityId, assetId, nbOccurences })\n      delete this.saveErrors[entityId]\n      return this.saveCasting(entityId)\n        .then(() => {\n          this.setLock()\n          this.modals.isRemoveConfirmationDisplayed = false\n        })\n        .catch(err => {\n          this.saveErrors[entityId] = true\n          this.errors.remove = true\n          console.error(err)\n        })\n        .finally(() => {\n          this.loading.remove = false\n        })\n    },\n\n    async removeOneAssetFromSelection(assetId) {\n      const entityIds = Object.keys(this.selection).filter(\n        key => this.selection[key]\n      )\n      for (const entityId of entityIds) {\n        const asset = this.casting[entityId].find(\n          asset => asset.asset_id === assetId\n        )\n        if (asset) {\n          await this.removeOneAsset(assetId, entityId, asset.nb_occurences)\n        }\n      }\n    },\n\n    removeOneAsset(assetId, entityId, nbOccurences) {\n      this.isLocked = true\n      if (this.isEpisodeCasting && nbOccurences === 1) {\n        this.removalData = { assetId, entityId, nbOccurences }\n        this.modals.isRemoveConfirmationDisplayed = true\n        return Promise.resolve()\n      } else {\n        return this.saveAssetRemoval(entityId, assetId, 1)\n      }\n    },\n\n    onAssetListScroll(event) {\n      const assetList = this.$refs['asset-list']\n      const maxHeight = assetList.scrollHeight - assetList.offsetHeight\n      const position = event.target\n      if (maxHeight < position.scrollTop + 100) {\n        this.displayMoreAssets()\n      }\n    },\n\n    showImportModal() {\n      this.modals.importing = true\n    },\n\n    hideImportModal() {\n      this.modals.importing = false\n    },\n\n    showImportRenderModal() {\n      this.modals.isImportRenderDisplayed = true\n    },\n\n    hideImportRenderModal() {\n      this.modals.isImportRenderDisplayed = false\n    },\n\n    renderImport(data, mode) {\n      this.loading.importing = true\n      this.errors.importing = false\n      if (mode === 'file') {\n        data = data.get('file')\n      }\n      csv.processCSV(data).then(results => {\n        this.parsedCSV = results\n        this.hideImportModal()\n        this.loading.importing = false\n        this.showImportRenderModal()\n      })\n    },\n\n    uploadImportFile(data) {\n      const formData = new FormData()\n      const filename = 'import.csv'\n      const csvContent = csv.turnEntriesToCsvString(data)\n      const file = new File([csvContent], filename, { type: 'text/csv' })\n\n      formData.append('file', file)\n\n      this.loading.importing = true\n      this.errors.importing = false\n      this.errors.importingError = null\n      this.importCsvFormData = formData\n\n      this.uploadCastingFile(this.importCsvFormData)\n        .then(() => {\n          this.hideImportRenderModal()\n          if (this.sequenceId) {\n            this.setCastingSequence(this.sequenceId || 'all')\n          }\n        })\n        .catch(err => {\n          this.errors.importingError = err\n          this.errors.importing = true\n        })\n        .finally(() => {\n          this.loading.importing = false\n        })\n    },\n\n    resetImport() {\n      this.errors.importing = false\n      this.errors.importingError = null\n      this.hideImportRenderModal()\n      this.importCsvFormData = undefined\n      this.$refs['import-modal'].reset()\n      this.showImportModal()\n    },\n\n    updateUrl() {\n      let isChange = false\n      let route = {}\n      if (this.isEpisodeCasting) {\n        const episodeId = this.$route.params.episode_id\n        if (episodeId !== this.episodeId) {\n          isChange = true\n          route = {\n            name: 'breakdown-episode',\n            params: {\n              production_id: this.currentProduction.id,\n              episode_id: this.episodeId\n            }\n          }\n        }\n      } else if (this.isAssetCasting) {\n        const assetTypeId = this.$route.params.asset_type_id || ''\n        if (assetTypeId !== this.assetTypeId) {\n          isChange = true\n          route = {\n            name: 'breakdown-asset-type',\n            params: {\n              production_id: this.currentProduction.id,\n              asset_type_id: this.assetTypeId\n            }\n          }\n        }\n      } else {\n        const sequenceId = this.$route.params.sequence_id || 'all'\n        if (sequenceId !== this.sequenceId) {\n          isChange = true\n          route = {\n            name: 'breakdown-sequence',\n            params: {\n              production_id: this.currentProduction.id,\n              sequence_id: this.sequenceId || 'all'\n            }\n          }\n        }\n      }\n      if (isChange) {\n        let episodeId = this.$route.params.episode_id\n        if (!episodeId && this.currentEpisode) {\n          episodeId = this.currentEpisode.id\n        }\n        if (episodeId) {\n          route.name = `episode-${route.name}`\n          route.params.episode_id = episodeId\n          if (episodeId === 'all') route.params.sequence_id = 'all'\n        }\n        this.$router.push(route)\n      }\n    },\n\n    onEditLabelClicked(asset, label, entityId) {\n      this.editedAsset = asset\n      this.editedEntityId = entityId\n      this.editedAssetLinkLabel = label\n      this.modals.isEditLabelDisplayed = true\n    },\n\n    confirmEditLabel(form = {}) {\n      const label = form.label\n      this.loading.editLabel = true\n      this.setAssetLinkLabel({\n        label: label,\n        asset: this.editedAsset,\n        targetEntityId: this.editedEntityId\n      })\n        .then(() => {\n          this.modals.isEditLabelDisplayed = false\n          this.loading.editLabel = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.editLabel = true\n          this.loading.editLabel = false\n        })\n    },\n\n    toggleTextMode() {\n      this.isTextMode = !this.isTextMode\n      localStorage.setItem('breakdown:text-mode', this.isTextMode)\n    },\n\n    toggleColumnSelector() {\n      this.columnSelectorDisplayed = !this.columnSelectorDisplayed\n    },\n\n    confirmNewAssetStay(form) {\n      this.loading.stay = true\n      this.success.edit = false\n      this.newAsset(form)\n        .then(asset => {\n          this.loading.stay = false\n          this.loading.edit = false\n          this.resetLightEditModal(asset)\n          this.$refs['edit-asset-modal'].focusName()\n          this.success.edit = true\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.stay = false\n          this.loading.edit = false\n          this.success.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    confirmNewAsset(form) {\n      this.loading.edit = true\n      this.errors.edit = false\n      this.newAsset(form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.isNewDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    resetLightEditModal(asset) {\n      const form = {\n        name: '',\n        entity_type_id: asset.entit_type_id,\n        production_id: this.currentProduction.id\n      }\n      this.assetToEdit = form\n    },\n\n    onKeyDown(event) {\n      if (!['INPUT', 'TEXTAREA'].includes(event.target.tagName)) {\n        if ((event.ctrlKey || event.metaKey) && event.keyCode === 67) {\n          // ctrl + c\n          this.copyCasting()\n        } else if ((event.ctrlKey || event.metaKey) && event.keyCode === 86) {\n          // ctrl + v\n          this.pasteCasting()\n        }\n      }\n    },\n\n    copyCasting() {\n      const selectedElementId = Object.keys(this.selection).find(\n        key => this.selection[key]\n      )\n      const selectedCasting = this.casting[selectedElementId]\n      clipboard.copyCasting(selectedCasting)\n    },\n\n    async pasteCasting() {\n      const castingToPaste = clipboard.pasteCasting()\n      if (!castingToPaste || castingToPaste.length === 0) return\n      const selectedElements = Object.keys(this.selection).filter(\n        key => this.selection[key]\n      )\n      for (const entityId of selectedElements) {\n        this.setEntityCasting({\n          entityId,\n          casting: castingToPaste\n        })\n        delete this.saveErrors[entityId]\n        await this.saveCasting(entityId)\n          .then(this.setLock)\n          .catch(err => {\n            this.saveErrors[entityId] = true\n            console.error(err)\n          })\n      }\n      return castingToPaste\n    },\n\n    async editEntity(data) {\n      if (this.isEpisodeCasting) {\n        await this.editEpisode(data)\n      } else if (this.isShotCasting) {\n        await this.editShot(data)\n      } else {\n        await this.editAsset(data)\n      }\n    },\n\n    async onFieldChanged({ entry, fieldName, value }) {\n      const data = {\n        id: entry.id,\n        [fieldName]: value\n      }\n      await this.editEntity(data)\n    },\n\n    async onMetadataChanged({ entry, descriptor, value }) {\n      const data = {\n        id: entry.id,\n        data: {\n          [descriptor.field_name]: value\n        }\n      }\n      await this.editEntity(data)\n    },\n\n    descriptorCurrentDepartments(descriptor) {\n      const departments = descriptor.departments || []\n      return departments.map(departmentId =>\n        this.departmentMap.get(departmentId)\n      )\n    },\n\n    getEntityName(entity) {\n      return this.sequenceId === 'all' &&\n        (!this.isTVShow || (this.isTVShow && this.currentEpisode.id !== 'all'))\n        ? entity.sequence_name + ' / ' + entity.name\n        : entity.name\n    },\n\n    getCsvFileName() {\n      const nameData = [\n        moment().format('YYYY-MM-DD'),\n        'kitsu',\n        this.castingType + 's',\n        this.currentProduction.name,\n        this.$t('breakdown.title')\n      ]\n      if (this.isTVShow) {\n        if (this.currentEpisode) {\n          if (this.currentEpisode.id === 'all') {\n            nameData.splice(4, 0, 'all')\n          } else if (this.currentEpisode.id === 'main') {\n            nameData.splice(4, 0, 'main pack')\n            if (this.assetTypeId !== 'all' && this.castingType === 'asset') {\n              nameData.splice(\n                5,\n                0,\n                this.assetTypeMap.get(this.assetTypeId).name\n              )\n            }\n          } else {\n            nameData.splice(4, 0, this.currentEpisode.name)\n            if (this.sequenceId !== 'all' && this.castingType === 'shot') {\n              nameData.splice(5, 0, this.sequenceMap.get(this.sequenceId).name)\n            }\n            if (this.assetTypeId !== 'all' && this.castingType === 'asset') {\n              nameData.splice(\n                5,\n                0,\n                this.assetTypeMap.get(this.assetTypeId).name\n              )\n            }\n          }\n        }\n      } else {\n        if (this.sequenceId !== 'all' && this.castingType === 'shot') {\n          nameData.splice(5, 0, this.sequenceMap.get(this.sequenceId).name)\n        }\n        if (this.assetTypeId !== 'all' && this.castingType === 'asset') {\n          nameData.splice(5, 0, this.assetTypeMap.get(this.assetTypeId).name)\n        }\n      }\n      return stringHelpers.slugify(nameData.join('_'))\n    },\n\n    getCsvFileHeaders() {\n      const headers = [\n        this.$t('shots.fields.name'),\n        this.$t('breakdown.fields.standby')\n      ]\n      if (this.isFrames) {\n        headers.push(this.$t('main.frames'))\n      }\n      if (this.isFrameIn) {\n        headers.push(this.$t('main.frame_in'))\n      }\n      if (this.isFrameOut) {\n        headers.push(this.$t('main.frame_out'))\n      }\n      this.metadataDescriptors.forEach(descriptor => {\n        headers.push(descriptor.name)\n      })\n      return headers.concat(this.castingAssetTypes)\n    },\n\n    getCsvEntries() {\n      const entries = this.castingEntities.map(entity => {\n        const entry = [entity.name, entity.is_casting_standby ? 'X' : '']\n        if (this.isFrames) {\n          entry.push(entity.nb_frames)\n        }\n        if (this.isFrameIn) {\n          entry.push(entity.data.frame_in)\n        }\n        if (this.isFrameOut) {\n          entry.push(entity.data.frame_out)\n        }\n        this.metadataDescriptors.forEach(descriptor => {\n          entry.push(entity.data[descriptor.field_name] || '')\n        })\n\n        const assets = this.castingByType[entity.id] || []\n        const assetsByAssetTypesMap = {}\n        assets.forEach(assetTypeAssets => {\n          assetsByAssetTypesMap[assetTypeAssets[0].asset_type_name] =\n            assetTypeAssets\n        })\n        this.castingAssetTypes.forEach(assetTypeName => {\n          const typeAssets = assetsByAssetTypesMap[assetTypeName] || []\n          const nbAssetsForType = typeAssets.reduce(\n            (acc, a) => acc + a.nb_occurences,\n            0\n          )\n          if (nbAssetsForType > 0) {\n            let casting = nbAssetsForType + ' assets: '\n            casting += typeAssets\n              .map(asset => {\n                return asset.asset_name + ' (' + asset.nb_occurences + ')'\n              })\n              .join(', ')\n            entry.push(casting)\n          } else {\n            entry.push('')\n          }\n        })\n        return entry\n      })\n      return entries\n    },\n\n    exportViewToCsv() {\n      const entries = this.getCsvEntries()\n      const name = this.getCsvFileName()\n      const headers = this.getCsvFileHeaders()\n      csv.buildCsvFile(name, [headers].concat(entries))\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removeBreakdownSearch(searchQuery).catch(console.error)\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.saveBreakdownSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    initResize(knobRefName, refName, descriptorId) {\n      this.resizedKnobRefName = knobRefName + (descriptorId ? descriptorId : '')\n      this.resizedRefName = refName + (descriptorId ? descriptorId : '')\n      this.resizedDescriptorId = descriptorId\n      window.addEventListener('mousemove', this.startResizing)\n      window.addEventListener('mouseup', this.stopResizing)\n    },\n\n    startResizing(event) {\n      const knobRef = this.resizedKnobRefName\n      const headerRef = this.resizedRefName\n      const knob = this.$refs[knobRef][0]\n        ? this.$refs[knobRef][0]\n        : this.$refs[knobRef]\n      const header = this.$refs[headerRef][0]\n        ? this.$refs[headerRef][0]\n        : this.$refs[headerRef]\n      const diff = event.clientX - knob.getBoundingClientRect().left\n      const actualWidth = header.getBoundingClientRect().width\n      this.columnWidth = { ...this.columnWidth }\n      if (this.resizedDescriptorId) {\n        const newWidth = Math.max(actualWidth + diff, 110)\n        this.columnWidth[this.resizedDescriptorId] = newWidth\n        const preferenceKey = `breakdown:column-width-descriptor-${this.resizedDescriptorId}`\n        preferences.setPreference(preferenceKey, newWidth)\n      } else {\n        const newWidth = Math.max(actualWidth + diff, 160)\n        this.columnWidth.name = newWidth\n        const preferenceKey =\n          'breakdown:column-width-name-' +\n          `${this.castingType}-${this.currentProduction.id}`\n        preferences.setPreference(preferenceKey, newWidth)\n      }\n    },\n\n    stopResizing() {\n      window.removeEventListener('mousemove', this.startResizing)\n      window.removeEventListener('mouseup', this.stopResizing)\n      this.resizedKnobRefName = null\n      this.resizedRefName = null\n      this.resizedDescriptorId = null\n    },\n\n    resetDisplayHeaders() {\n      if (this.isEpisodeCasting) {\n        this.metadataDisplayHeaders = {}\n      } else if (this.isShotCasting) {\n        this.metadataDisplayHeaders = {\n          stdby: true,\n          fps: false,\n          frameIn: true,\n          frameOut: true,\n          frames: true,\n          estimation: false,\n          maxRetakes: false,\n          resolution: false,\n          timeSpent: false\n        }\n      } else {\n        this.metadataDisplayHeaders = {\n          estimation: false,\n          readyFor: false,\n          timeSpent: false\n        }\n      }\n    },\n\n    resetColumnWidth() {\n      const namePreferenceKey =\n        'breakdown:column-width-name-' +\n        `${this.castingType}-${this.currentProduction.id}`\n      const nameColumnWidth = preferences.getPreference(namePreferenceKey)\n      if (nameColumnWidth) {\n        this.columnWidth.name = nameColumnWidth\n      }\n\n      this.metadataDescriptors.forEach(descriptor => {\n        const descriptorColumnWidth = preferences.getPreference(\n          `breakdown:column-width-descriptor-${descriptor.id}`\n        )\n        if (descriptorColumnWidth) {\n          this.columnWidth[descriptor.id] = descriptorColumnWidth\n        }\n      })\n    },\n\n    onCastingHeaderScroll(event) {\n      const position = event.target\n      this.$refs['casting-list'].scrollLeft = position.scrollLeft\n    },\n\n    onCastingScroll(event) {\n      const position = event.target\n      this.$refs['casting-header'].scrollLeft = position.scrollLeft\n    }\n  },\n\n  watch: {\n    castingType() {\n      if (this.isShotCasting && this.displayedSequences.length > 0) {\n        this.sequenceId = this.displayedSequences[0].id\n        this.assetTypeId = ''\n      }\n      if (this.isAssetCasting && this.castingAssetTypesOptions.length > 0) {\n        const assetTypeId = this.$route.params.asset_type_id\n        this.sequenceId = 'all'\n        this.castingType = 'asset'\n        if (assetTypeId) {\n          this.assetTypeId = assetTypeId\n        } else if (this.castingAssetTypesOptions.length > 0) {\n          this.assetTypeId = this.castingAssetTypesOptions[0].value\n        }\n      }\n      this.resetDisplayHeaders()\n      this.resetColumnWidth()\n    },\n\n    sequenceId() {\n      if (\n        this.sequenceId &&\n        this.displayedSequences &&\n        this.displayedSequences.length > 0 &&\n        !this.isAssetCasting\n      ) {\n        this.setCastingSequence(this.sequenceId)\n        this.updateUrl()\n        this.resetSelection()\n      }\n    },\n\n    assetTypeId() {\n      if (this.assetTypeId && this.castingAssetTypesOptions.length > 0) {\n        this.setCastingAssetType(this.assetTypeId)\n        this.updateUrl()\n        this.resetSelection()\n      }\n    },\n\n    episodeId() {\n      if (this.episodeId && this.episodes && this.episodes.length > 0) {\n        if (this.episodeId === 'all') {\n          this.setCastingForProductionEpisodes()\n        }\n        this.resetSelection()\n      }\n    },\n\n    castingSequencesOptions() {\n      if (this.$route.path.indexOf('asset-type') < 0) {\n        const sequenceId = this.$route.params.sequence_id || 'all'\n        if (sequenceId && this.sequenceMap.get(sequenceId)) {\n          this.sequenceId = sequenceId\n        } else if (this.castingSequencesOptions.length > 0) {\n          this.sequenceId = this.castingSequencesOptions[0].value\n        } else {\n          this.sequenceId = 'all'\n        }\n      }\n    },\n\n    castingAssetTypesOptions() {\n      if (this.$route.path.indexOf('asset-type') > 0) {\n        const assetTypeId = this.$route.params.asset_type_id\n        this.castingType = 'asset'\n        if (assetTypeId) {\n          this.assetTypeId = assetTypeId\n        } else if (this.castingAssetTypesOptions.length > 0) {\n          this.assetTypeId = this.castingAssetTypesOptions[0].value\n        } else {\n          this.assetTypeId = ''\n        }\n      }\n    },\n\n    currentProduction() {\n      if (!this.isLoading) {\n        this.reset()\n        this.resetColumnWidth()\n      }\n    },\n\n    currentEpisode() {\n      if (\n        this.currentEpisode &&\n        this.episodeId !== this.currentEpisode.id &&\n        !this.isLoading\n      ) {\n        if (this.currentEpisode.id === 'all') {\n          this.episodeId = 'all'\n        } else {\n          this.reset()\n        }\n      }\n    },\n\n    displayedSequences() {\n      this.$store.commit('CASTING_SET_SEQUENCES', this.displayedSequences)\n    },\n\n    '$route.query.search'(search) {\n      this.searchField?.setValue(search)\n      this.onSearchChange(search)\n    }\n  },\n\n  socket: {\n    events: {\n      'episode:casting-update'(eventData) {\n        const episode = this.episodeMap.get(eventData.episode_id)\n        if (episode && !this.isLocked) {\n          this.loadEpisodeCasting(episode)\n        }\n      },\n\n      'shot:casting-update'(eventData) {\n        const shot = this.shotMap.get(eventData.shot_id)\n        if (shot && shot.sequence_id === this.sequenceId && !this.isLocked) {\n          this.loadShotCasting(shot)\n        }\n      },\n\n      'asset:casting-update'(eventData) {\n        const asset = this.assetMap.get(eventData.asset_id)\n        if (\n          asset &&\n          asset.asset_type_id === this.assetTypeId &&\n          !this.isLocked\n        ) {\n          this.loadAssetCasting(asset)\n        }\n      }\n    }\n  },\n\n  head() {\n    if (this.isTVShow) {\n      return {\n        title:\n          `${this.currentProduction?.name || ''}` +\n          ` - ${this.currentEpisode?.name || ''}` +\n          ` | ${this.$t('breakdown.title')} - Kitsu`\n      }\n    }\n    return {\n      title: `${this.currentProduction.name} | ${this.$t('breakdown.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .breakdown {\n    background: $dark-grey-2;\n  }\n  .breakdown-column {\n    background: $dark-grey-light;\n    border: 1px solid #222;\n    box-shadow: 0 0 6px #222;\n  }\n}\n\n.breakdown {\n  color: var(--text);\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  background: #fafafa;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n}\n\n.breakdown-columns {\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  overflow-y: auto;\n  margin-top: 0.5em;\n}\n\n.breakdown-column {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  padding: 1em;\n  background: white;\n  border: 1px solid #eee;\n  box-shadow: 0 0 6px #e0e0e0;\n  border-radius: 1em;\n\n  &:not(:first-child) {\n    margin-left: 0.5em;\n  }\n}\n\n.casting-column {\n  overflow: hidden;\n  flex: 1;\n}\n\n.assets-column {\n  max-width: 460px;\n}\n\n.asset-type,\n.sequence {\n  text-transform: uppercase;\n  color: $grey;\n  border-bottom: 1px solid $light-grey;\n  font-size: 1.2em;\n  margin-bottom: 1em;\n}\n\n.asset-type {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n}\n\n.asset-list {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.shots-title {\n  font-weight: bold;\n}\n\n.subtitle {\n  border-bottom: 0;\n  margin-top: 0.1em;\n  margin-bottom: 0;\n}\n\n.filters-area {\n  margin-bottom: 0.5em;\n\n  .search-field-wrapper {\n    margin-right: 0.5em;\n  }\n}\n\n.entity-header,\n.description-header,\n.descriptor-header,\n.frames-header,\n.asset-type-header,\n.standby-header {\n  border-right: 1px solid $light-grey;\n  padding-left: 10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n}\n\n.description-header {\n  min-width: 250px;\n  max-width: 250px;\n}\n\n.descriptor-header {\n  min-width: 110px;\n  max-width: 110px;\n}\n\n.descriptor-departments {\n  display: inline-flex;\n  gap: 2px;\n}\n\n.frames-header {\n  min-width: 81px;\n  max-width: 81px;\n  justify-content: right;\n  padding-right: 0.6em;\n}\n\n.asset-type-header {\n  padding-left: 1em;\n  min-width: 150px;\n  max-width: 150px;\n}\n\n.standby-header {\n  max-width: 60px;\n  min-width: 60px;\n  text-align: center;\n  justify-content: center;\n  padding-left: 0;\n}\n\n.entity-header {\n  border-top-left-radius: 10px;\n  border-right: 2px solid $light-grey;\n  margin: 0;\n  max-width: 301px;\n  min-width: 301px;\n  padding-left: 0.5em;\n  left: 0;\n  position: sticky;\n}\n\n.actions {\n  border-top-right-radius: 10px;\n  height: 45px;\n  text-align: right;\n}\n\n.casting-header {\n  background: white;\n  border-bottom: 2px solid $light-grey;\n  font-size: 1.1em;\n  color: var(--text-alt);\n  font-size: 0.9em;\n  font-weight: 600;\n  letter-spacing: 1px;\n  min-height: 40px;\n  overflow-y: hidden;\n  padding: 0;\n  position: sticky;\n  top: 0;\n  text-transform: uppercase;\n  z-index: 20;\n\n  div {\n    background: var(--background);\n    padding-top: 0.5em;\n    padding-bottom: 0.5em;\n  }\n\n  .actions {\n    height: 100%;\n  }\n\n  .dark & {\n    background: $dark-grey-light;\n  }\n}\n\n.list-options {\n  position: relative;\n}\n\n.casting-header div.resizable-knob {\n  cursor: col-resize;\n  height: 142%;\n  width: 5px;\n\n  &:hover {\n    background: $grey;\n  }\n}\n\n.casting-list {\n  overflow: auto;\n  display: flex;\n\n  .shot-lines {\n    flex: 1;\n  }\n\n  .actions {\n    width: 100%;\n    text-align: right;\n  }\n}\n\n.query-list {\n  margin-bottom: 0.5em;\n}\n</style>\n"],"names":["_sfc_main","event","_hoisted_1","_hoisted_3","_hoisted_5","_hoisted_6","$props","_createElementBlock","_normalizeClass","_createElementVNode","_toDisplayString","$options","args","_openBlock","_hoisted_2","_hoisted_4","modalMixin","Combobox","ModalFooter","_ctx","_cache","_withModifiers","_createVNode","_component_combobox","$data","$event","_component_modal_footer","domMixin","name","stringHelpers","_hoisted_7","_hoisted_8","_hoisted_9","_createCommentVNode","_Fragment","entityListMixin","descriptorMixin","AssetBlock","EntityThumbnail","mapGetters","chunk","assetsByAssetTypes","assetTypeAssets","asset","label","assetId","entity","renderMarkdown","assetType","acc","a","_hoisted_11","_hoisted_14","_hoisted_17","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_29","_hoisted_30","_normalizeStyle","_component_entity_thumbnail","_renderList","index","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_16","_hoisted_18","descriptor","_hoisted_21","option","i","_hoisted_24","_hoisted_27","_hoisted_28","_createBlock","_component_asset_block","_hoisted_31","KitsuIcon","mapActions","value","_component_kitsu_icon","searchMixin","AvailableAssetBlock","BuildFilterModal","ButtonHrefLink","ButtonSimple","ComboboxStyled","DeleteModal","DepartmentName","EditAssetModal","EditLabelModal","ImportModal","ImportRenderModal","SearchField","SearchQueryList","ShotLine","ShowInfosButton","Spinner","TableMetadataSelectorMenu","preferences","isAssetsOnly","isShotsOnly","options","result","typeGroup","newGroup","path","paramAdded","castingAssetTypes","assetTypeNameMap","type","casting","item","castKey","route","selection","episode","shot","query","searchQuery","entityId","previousSelection","nbElementsSelected","k","shotId","previousEntityId","keys","previousIndex","indexRange","range","amount","entityIds","key","err","nbOccurences","assetList","maxHeight","position","data","mode","csv","results","formData","filename","csvContent","file","isChange","episodeId","form","selectedElementId","selectedCasting","clipboard","castingToPaste","selectedElements","entry","fieldName","departmentId","nameData","moment","headers","assets","assetsByAssetTypesMap","assetTypeName","typeAssets","nbAssetsForType","entries","knobRefName","refName","descriptorId","knobRef","headerRef","knob","header","diff","actualWidth","newWidth","preferenceKey","namePreferenceKey","nameColumnWidth","descriptorColumnWidth","assetTypeId","sequenceId","search","eventData","_component_combobox_styled","_component_show_infos_button","_component_button_simple","_component_button_href_link","_component_spinner","_component_table_metadata_selector_menu","department","_component_department_name","_component_shot_line","_component_search_field","_component_search_query_list","_component_available_asset_block","_component_import_render_modal","_component_import_modal","_component_edit_label_modal","_component_build_filter_modal","_component_edit_asset_modal","_component_delete_modal"],"mappings":"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"}