{"version":3,"file":"ProductionQuota-hjfmr-Oa.js","sources":["../../src/components/lists/QuotaShotList.vue","../../src/components/sides/PeopleQuotaInfo.vue","../../src/components/pages/quota/Quota.vue","../../src/components/pages/ProductionQuota.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <table class=\"details table\" v-if=\"!isLoading\">\n      <thead>\n        <tr>\n          <th>{{ $t('quota.details_name') }}</th>\n          <th>\n            {{\n              countMode === 'seconds'\n                ? $t('quota.details_seconds')\n                : $t('quota.details_frames')\n            }}\n          </th>\n          <th>{{ $t('quota.weight') }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr :key=\"`shot-quota-${shot.id}`\" v-for=\"shot in shots\">\n          <td>{{ shot.full_name }}</td>\n          <td>{{ getQuota(shot) }}</td>\n          <td>{{ shot.weight }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isLoadingError\" />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nimport { frameToSeconds } from '@/lib/video'\n\nimport TableInfo from '@/components/widgets/TableInfo.vue'\n\nexport default {\n  name: 'quota-shot-list',\n\n  components: {\n    TableInfo\n  },\n\n  props: {\n    shots: {\n      type: Array,\n      default: () => []\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isLoadingError: {\n      type: Boolean,\n      default: false\n    },\n    countMode: {\n      type: String,\n      default: 'frames'\n    }\n  },\n\n  computed: {\n    ...mapGetters(['currentProduction'])\n  },\n\n  methods: {\n    getQuota(shot) {\n      if (this.countMode === 'seconds') {\n        return frameToSeconds(shot.nb_frames, this.currentProduction, shot)\n      } else {\n        return shot.nb_frames\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  header tr:hover {\n    background: transparent;\n  }\n\n  .table {\n    thead,\n    tbody tr:nth-child(odd) {\n      color: $white-grey;\n      background: #36393f;\n    }\n\n    tbody tr:nth-child(even) {\n      color: $white-grey;\n      background: #46494f;\n    }\n\n    thead th,\n    thead:hover {\n      color: $white-grey;\n      background: #36393f;\n      border-color: #666666;\n    }\n\n    tbody td {\n      border-color: #25282e;\n    }\n\n    tbody tr:hover {\n      color: $white-grey;\n      background: #5e6169;\n    }\n  }\n}\n\ntbody {\n  tr:nth-child(even) {\n    background: #f6f6f6;\n  }\n\n  tr:hover {\n    background: $light-green-lightest;\n  }\n}\n\n.name {\n  width: 300px;\n}\n</style>\n","<template>\n  <div class=\"people-timesheet-info\">\n    <div class=\"close\">\n      <router-link class=\"close-button\" :to=\"closeRoute\">\n        <x-icon />\n      </router-link>\n    </div>\n\n    <div class=\"flexrow\">\n      <people-avatar class=\"flexrow-item\" :person=\"person\" :is-lazy=\"false\" />\n      <page-title class=\"flexrow-item\" :text=\"person.full_name\" />\n    </div>\n\n    <div class=\"info-date\" v-if=\"isMonthInfo\">{{ monthString }} {{ year }}</div>\n    <div class=\"info-date\" v-else-if=\"isWeekInfo\">\n      {{ $t('main.week') }}\n      {{ week }}, {{ startDay }} - {{ endDay }} {{ weekMonth }} {{ year }}\n    </div>\n    <div class=\"info-date\" v-else-if=\"isDayInfo\">\n      {{ day }} {{ monthString }} {{ year }}\n    </div>\n\n    <quota-shot-list\n      class=\"time-spent-list\"\n      :count-mode=\"countMode\"\n      :shots=\"shots\"\n      :is-loading=\"isLoading\"\n      :is-error=\"isLoadingError\"\n    />\n  </div>\n</template>\n\n<script>\nimport { XIcon } from 'lucide-vue-next'\nimport moment from 'moment-timezone'\nimport { mapGetters } from 'vuex'\n\nimport { monthToString } from '@/lib/time'\n\nimport PageTitle from '@/components/widgets/PageTitle.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport QuotaShotList from '@/components/lists/QuotaShotList.vue'\n\nexport default {\n  name: 'people-quota-info',\n\n  components: {\n    XIcon,\n    PageTitle,\n    PeopleAvatar,\n    QuotaShotList\n  },\n\n  props: {\n    person: {\n      type: Object,\n      default: () => {}\n    },\n    year: {\n      type: Number,\n      default: 0\n    },\n    month: {\n      type: Number,\n      default: 0\n    },\n    week: {\n      type: Number,\n      default: 0\n    },\n    day: {\n      type: Number,\n      default: 0\n    },\n    countMode: {\n      type: String,\n      default: 'frames'\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isLoadingError: {\n      type: Boolean,\n      default: false\n    },\n    shots: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  emits: ['close'],\n\n  computed: {\n    ...mapGetters(['currentEpisode', 'currentProduction']),\n\n    startDay() {\n      return moment().day('Monday').year(this.year).week(this.week).date()\n    },\n\n    endDay() {\n      return moment()\n        .day('Monday')\n        .year(this.year)\n        .week(this.week)\n        .add(6, 'days')\n        .date()\n    },\n\n    weekMonth() {\n      return moment()\n        .day('Monday')\n        .year(this.year)\n        .week(this.week)\n        .format('MMM')\n    },\n\n    monthString() {\n      return monthToString(this.month)\n    },\n\n    isMonthInfo() {\n      return this.$route.path.indexOf('month') > 0\n    },\n\n    isWeekInfo() {\n      return this.$route.path.indexOf('week') > 0\n    },\n\n    isDayInfo() {\n      return this.$route.path.indexOf('day') > 0\n    },\n\n    closeRoute() {\n      if (!this.currentProduction) return {}\n      let route = {\n        name: 'quota',\n        production_id: this.currentProduction.id\n      }\n      if (this.isMonthInfo) {\n        route = {\n          name: 'quota-month',\n          params: {\n            year: this.year\n          }\n        }\n      } else if (this.isWeekInfo) {\n        route = {\n          name: 'quota-week',\n          params: {\n            year: this.year\n          }\n        }\n      } else if (this.isDayInfo) {\n        route = {\n          name: 'quota-day',\n          params: {\n            year: this.year,\n            month: this.month\n          }\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = `episode-${route.name}`\n        route.params.episode_id = this.currentEpisode.id\n      }\n      route.query = this.$route.query\n      return route\n    }\n  },\n\n  methods: {\n    onCloseClicked() {\n      this.$emit('close')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .close-button:hover {\n  background: $dark-grey-lightest;\n}\n\n.data-list {\n  padding-bottom: 5em;\n}\n\n.people-timesheet-info {\n  border-left: 1px solid var(--border);\n  height: 100%;\n  padding: 1em;\n}\n\n.info-date {\n  font-size: 1.5em;\n  margin-top: 1em;\n  text-transform: capitalize;\n}\n\n.close {\n  text-align: right;\n}\n\n.close-button {\n  cursor: pointer;\n  display: inline-block;\n  text-align: center;\n  padding-top: 3px;\n  width: 30px;\n  height: 30px;\n}\n\n.close-button:hover {\n  display: inline-block;\n  background: $white-grey;\n  border-radius: 50%;\n}\n</style>\n","<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\" ref=\"body\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th\n              scope=\"col\"\n              class=\"name datatable-row-header\"\n              ref=\"rowHeaderName\"\n            >\n              {{ $t('quota.name') }}\n            </th>\n            <th\n              scope=\"col\"\n              class=\"average datatable-row-header\"\n              :style=\"{ left: averageColumnX }\"\n            >\n              {{ $t('quota.average') }}\n            </th>\n            <template v-if=\"detailLevel === 'month'\">\n              <th\n                scope=\"col\"\n                :key=\"'month-' + month\"\n                v-for=\"month in monthRange\"\n              >\n                {{ monthToString(month) }}\n              </th>\n            </template>\n            <template v-else-if=\"detailLevel === 'week'\">\n              <th scope=\"col\" :key=\"'week-' + week\" v-for=\"week in weekRange\">\n                {{ week }}\n              </th>\n            </template>\n            <template v-else-if=\"detailLevel === 'day'\">\n              <th scope=\"col\" :key=\"'day-' + day\" v-for=\"day in dayRange\">\n                {{ day }}\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"quotaLength > 0 && !isLoading\">\n          <tr\n            :key=\"'name-' + key\"\n            class=\"datatable-row\"\n            v-for=\"key in entryIds\"\n          >\n            <th scope=\"row\" class=\"name datatable-row-header\">\n              <div class=\"flexrow\" v-if=\"taskTypeId && key !== 'total'\">\n                <people-avatar :size=\"30\" :person=\"personMap.get(key)\" />\n                {{ personMap.get(key).full_name }}\n              </div>\n              <div class=\"flexrow\" v-else-if=\"taskTypeId && key === 'total'\">\n                {{ $t('main.total') }}\n              </div>\n              <div class=\"flexrow\" v-else-if=\"personId && key !== 'total'\">\n                {{ taskTypeMap.get(key).name }}\n              </div>\n              <div class=\"flexrow\" v-else-if=\"personId && key === 'total'\">\n                {{ $t('main.total') }}\n              </div>\n            </th>\n            <td\n              class=\"average datatable-row-header\"\n              :style=\"{ left: averageColumnX }\"\n            >\n              <template\n                v-if=\"detailLevel === 'month' || detailLevel === 'week'\"\n              >\n                {{ getQuotaAverage(key, { year }) }}\n              </template>\n              <template v-else-if=\"detailLevel === 'day'\">\n                {{ getQuotaAverage(key, { year, month }) }}\n              </template>\n            </td>\n            <template v-if=\"detailLevel === 'month'\">\n              <td\n                :class=\"{\n                  selected: isMonthSelected(key, year, month),\n                  'quota-low': isMonthQuotaLow(key, year, month)\n                }\"\n                :key=\"'month-' + month\"\n                v-for=\"month in monthRange\"\n              >\n                <router-link\n                  class=\"quota-button\"\n                  :to=\"\n                    episodifyRoute({\n                      name: 'quota-month-person',\n                      params: {\n                        person_id: personId ?? key,\n                        year,\n                        month\n                      },\n                      query: {\n                        ...$route.query,\n                        taskTypeId: personId ? key : null\n                      }\n                    })\n                  \"\n                  v-if=\"key !== 'total' && getQuota(key, { year, month })\"\n                >\n                  {{ getQuota(key, { year, month }) }}\n                </router-link>\n                <span v-else-if=\"key === 'total'\">\n                  {{ getQuota(key, { year, month }) }}\n                </span>\n                <span v-else>-</span>\n              </td>\n            </template>\n            <template v-else-if=\"detailLevel === 'week'\">\n              <td\n                :class=\"{\n                  selected: isWeekSelected(key, year, week),\n                  'quota-low': isWeekQuotaLow(key, year, month)\n                }\"\n                :key=\"'week-' + week\"\n                v-for=\"week in weekRange\"\n              >\n                <router-link\n                  class=\"quota-button\"\n                  :to=\"\n                    episodifyRoute({\n                      name: 'quota-week-person',\n                      params: {\n                        person_id: personId ?? key,\n                        year,\n                        week\n                      },\n                      query: {\n                        ...$route.query,\n                        taskTypeId: personId ? key : null\n                      }\n                    })\n                  \"\n                  v-if=\"key !== 'total' && getQuota(key, { year, week })\"\n                >\n                  {{ getQuota(key, { year, week }) }}\n                </router-link>\n                <span v-else-if=\"key === 'total'\">\n                  {{ getQuota(key, { year, week }) }}\n                </span>\n                <span v-else> - </span>\n              </td>\n            </template>\n            <template v-else-if=\"detailLevel === 'day'\">\n              <td\n                :class=\"{\n                  weekend: isWeekend(year, month, day),\n                  selected: isDaySelected(key, year, month, day),\n                  'quota-low': isDayQuotaLow(key, year, month, day)\n                }\"\n                :key=\"'day-' + day\"\n                v-for=\"day in dayRange\"\n              >\n                <router-link\n                  class=\"quota-button\"\n                  :to=\"\n                    episodifyRoute({\n                      name: 'quota-day-person',\n                      params: {\n                        person_id: personId ?? key,\n                        year,\n                        month,\n                        day\n                      },\n                      query: {\n                        ...$route.query,\n                        taskTypeId: personId ? key : null\n                      }\n                    })\n                  \"\n                  v-if=\"key !== 'total' && getQuota(key, { year, month, day })\"\n                >\n                  {{\n                    countMode === 'seconds'\n                      ? getQuota(key, { year, month, day })\n                      : getQuota(key, { year, month, day })\n                  }}\n                </router-link>\n                <span v-else-if=\"key === 'total'\">\n                  {{\n                    countMode === 'seconds'\n                      ? getQuota(key, { year, month, day })\n                      : getQuota(key, { year, month, day })\n                  }}\n                </span>\n                <span v-else> - </span>\n              </td>\n            </template>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div\n      class=\"has-text-centered empty-quota\"\n      v-if=\"quotaLength === 0 && !isLoading\"\n    >\n      <p class=\"info\">{{ $t('quota.no_quota') }}</p>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { buildNameIndex, indexSearch } from '@/lib/indexing'\nimport { episodifyRoute } from '@/lib/path'\nimport { sortTaskTypes } from '@/lib/sorting'\nimport {\n  monthToString,\n  getMonthRange,\n  getWeekRange,\n  getDayRange\n} from '@/lib/time'\n\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\n\nexport default {\n  name: 'quota',\n\n  components: {\n    PeopleAvatar,\n    TableInfo\n  },\n\n  props: {\n    taskTypeId: {\n      type: String,\n      required: false\n    },\n    personId: {\n      type: String,\n      required: false\n    },\n    detailLevel: {\n      type: String,\n      required: true\n    },\n    countMode: {\n      type: String,\n      required: true\n    },\n    computeMode: {\n      type: String,\n      required: true\n    },\n    year: {\n      type: Number,\n      default: 0\n    },\n    month: {\n      type: Number,\n      default: 0\n    },\n    searchText: {\n      type: String,\n      default: ''\n    },\n    maxQuota: {\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      currentMonth: moment().month() + 1,\n      currentYear: moment().year(),\n      currentWeek: moment().week(),\n      detailsMap: {},\n      isLoading: true,\n      isError: false,\n      personIds: [],\n      quotaMap: {},\n      quotaLength: 0,\n      averageColumnX: '12rem'\n    }\n  },\n\n  mounted() {\n    if (this.shotMap.size < 2) {\n      this.isLoading = true\n      setTimeout(() => {\n        this.loadShots(err => {\n          if (!err) {\n            this.loadData()\n          }\n        })\n      }, 100)\n    } else {\n      if (!this.isShotsLoading) this.isLoading = false\n      this.loadData()\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'isShotsLoading',\n      'personMap',\n      'shotMap',\n      'taskTypeMap'\n    ]),\n\n    monthRange() {\n      return getMonthRange(this.year, this.currentYear, this.currentMonth)\n    },\n\n    dayRange() {\n      return getDayRange(\n        this.year,\n        this.month,\n        this.currentYear,\n        this.currentMonth\n      )\n    },\n\n    weekRange() {\n      return getWeekRange(this.year, this.currentYear, this.currentWeek)\n    },\n\n    entryIds() {\n      if (this.personId) {\n        return sortTaskTypes(\n          Object.keys(this.quotaMap)\n            .filter(key => key !== 'total')\n            .map(taskTypeId => this.taskTypeMap.get(taskTypeId)),\n          this.currentProduction\n        )\n          .map(taskType => taskType.id)\n          .concat(['total'])\n      } else {\n        return this.filteredPersonIds\n      }\n    },\n\n    filteredPersonIds() {\n      let personIds = this.personIds\n      if (this.searchText.length > 0) {\n        personIds = indexSearch(\n          this.personIndex,\n          this.searchText.split(' ')\n        ).map(person => person.id)\n      }\n      return personIds\n    }\n  },\n\n  methods: {\n    ...mapActions(['loadShots', 'computeQuota', 'getPeriodDetails']),\n\n    episodifyRoute(route) {\n      if (this.currentEpisode) {\n        episodifyRoute(route, this.currentEpisode.id)\n      }\n      return route\n    },\n\n    isWeekend(year, month, day) {\n      let date = moment(`${year}-${month}-${day}`, 'YYYY-MM-DD')\n      if (day < 10) date = moment(`${year}-${month}-0${day}`, 'YYYY-MM-DD')\n      return [0, 6].includes(date.day())\n    },\n\n    loadData() {\n      if (this.taskTypeId || this.personId) {\n        this.isLoading = true\n        this.computeQuota({\n          taskTypeId: this.taskTypeId,\n          personId: this.personId,\n          detailLevel: this.detailLevel,\n          countMode: this.countMode,\n          computeMode: this.computeMode\n        })\n          .then(quotas => {\n            this.quotaMap = quotas\n            this.quotaLength = Object.keys(this.quotaMap).length\n            this.calcAverageColumnX()\n            this.$nextTick(() => {\n              this.isLoading = false\n            })\n          })\n          .catch(err => {\n            this.quotaMap = {}\n            this.quotaLength = 0\n            this.calcAverageColumnX()\n            this.isLoading = false\n            console.error(err)\n          })\n      }\n    },\n\n    loadDetails(personId, dateString) {\n      this.loadShots(err => {\n        this.isLoading = true\n        if (err) {\n          console.error(err)\n        } else {\n          if (this.taskTypeId) {\n            this.getPeriodDetails({\n              taskTypeId: this.taskTypeId,\n              detailLevel: this.detailLevel,\n              personId,\n              dateString\n            }).then(shots => {\n              this.detailsMap = shots\n            })\n          }\n        }\n      })\n    },\n    monthToString,\n\n    dateDigit(date) {\n      return date.toString().padStart(2, '0')\n    },\n\n    getQuota(personId, opt = {}) {\n      let quota = '-'\n      if (!personId) return quota\n      if (opt.day) {\n        const dayKey = `${opt.year}-${this.dateDigit(\n          opt.month\n        )}-${this.dateDigit(opt.day)}`\n        quota = this.quotaMap[personId].day[this.countMode][dayKey]\n      } else if (opt.week) {\n        const weekKey = `${opt.year}-${opt.week}`\n        quota = this.quotaMap[personId].week[this.countMode][weekKey]\n      } else {\n        const monthKey = `${opt.year}-${this.dateDigit(opt.month)}`\n        quota = this.quotaMap[personId].month[this.countMode][monthKey]\n      }\n      if (this.countMode === 'seconds') {\n        return quota ? quota.toFixed(2) : '-'\n      } else {\n        return quota || '-'\n      }\n    },\n\n    getQuotaAverage(personId, opt = {}) {\n      if (!personId) {\n        return '-'\n      }\n      let average = 0\n      let total = 0\n      let nbEntries\n      if (this.detailLevel === 'day') {\n        const monthKey = `${opt.year}-${this.dateDigit(opt.month)}`\n        total = this.quotaMap[personId].month[this.countMode][monthKey]\n        nbEntries = this.quotaMap[personId].day.entries[monthKey]\n      } else if (this.detailLevel === 'week') {\n        const yearKey = opt.year\n        total = this.quotaMap[personId].year[this.countMode][yearKey]\n        nbEntries = this.quotaMap[personId].week.entries[yearKey]\n      } else if (this.detailLevel === 'month') {\n        const yearKey = opt.year\n        total = this.quotaMap[personId].year[this.countMode][yearKey]\n        nbEntries = this.quotaMap[personId].month.entries[yearKey]\n      }\n      average = total / nbEntries\n      return average ? average.toFixed(2) : '-'\n    },\n\n    isDaySelected(personId, year, month, day) {\n      return (\n        this.$route.params.person_id &&\n        this.$route.params.person_id === personId &&\n        '' + this.$route.params.year === '' + year &&\n        '' + this.$route.params.month === '' + month &&\n        '' + this.$route.params.day === '' + day\n      )\n    },\n\n    isWeekSelected(personId, year, week) {\n      return (\n        this.$route.params.person_id &&\n        this.$route.params.person_id === personId &&\n        '' + this.$route.params.year === '' + year &&\n        '' + this.$route.params.week === '' + week\n      )\n    },\n\n    isMonthSelected(personId, year, month) {\n      return (\n        this.$route.params.person_id &&\n        this.$route.params.person_id === personId &&\n        '' + this.$route.params.year === '' + year &&\n        '' + this.$route.params.month === '' + month\n      )\n    },\n\n    isDayQuotaLow(personId, year, month, day) {\n      const quota = this.getQuota(personId, { year, month, day })\n      return quota !== null && this.maxQuota > quota\n    },\n\n    isWeekQuotaLow(personId, year, week) {\n      return this.maxQuota > this.getQuota(personId, { year, week })\n    },\n\n    isMonthQuotaLow(personId, year, month) {\n      return this.maxQuota > this.getQuota(personId, { year, month })\n    },\n\n    calcAverageColumnX() {\n      if (this.quotaLength > 0) {\n        this.averageColumnX = `${this.$refs.rowHeaderName.offsetWidth}px`\n      }\n    },\n\n    resetPersonIds() {\n      const personIds = Object.keys(this.quotaMap).filter(\n        personId => personId !== 'total'\n      )\n      const persons = personIds.map(pId => this.personMap.get(pId))\n      this.personIndex = buildNameIndex(persons)\n      this.personIds = personIds\n        .sort((a, b) => {\n          const personAName = this.personMap.get(a).full_name\n          const personBName = this.personMap.get(b).full_name\n          return personAName.localeCompare(personBName)\n        })\n        .concat(['total'])\n    }\n  },\n\n  watch: {\n    $route() {\n      const els = document.getElementsByClassName('selected')\n      if (els.length === 0) {\n        // selected element is not visible\n        setTimeout(() => {\n          this.$refs.body.scrollLeft += 380\n        }, 100)\n      }\n    },\n\n    computeMode() {\n      if (this.taskTypeId || this.personId) {\n        this.loadData()\n      }\n    },\n\n    quotaMap() {\n      if (this.taskTypeId) {\n        this.resetPersonIds()\n      }\n    },\n\n    taskTypeId() {\n      if (this.taskTypeId) {\n        this.loadData()\n      }\n    },\n\n    personId() {\n      if (this.personId) {\n        this.loadData()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .weekend {\n    background-color: $dark-grey;\n  }\n  .quota-button:hover {\n    color: #333;\n  }\n  .info {\n    color: $white;\n  }\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.datatable-wrapper {\n  overflow: auto;\n  margin-bottom: 1rem;\n}\n\n.datatable {\n  min-width: auto;\n  .name {\n    min-width: 12rem;\n    text-align: left;\n    justify-content: flex-start;\n    .avatar {\n      margin-right: 0.5rem;\n    }\n  }\n  .average {\n    width: 8rem;\n  }\n  th,\n  td {\n    text-align: center;\n  }\n}\n\n.datatable-head th {\n  min-width: 4rem;\n}\n\n.datatable-body th {\n  padding: 1rem;\n}\n\n.datatable-body {\n  th,\n  td {\n    border: 0;\n  }\n}\n\n.quota-low {\n  color: red;\n}\n\n.quota-button {\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  background: transparent;\n  border: 0;\n  cursor: pointer;\n  color: inherit;\n  font-size: inherit;\n  &:hover,\n  &:focus,\n  &.is-selected {\n    background-color: $dark-grey-lightest;\n  }\n}\n\n.empty-quota {\n  width: 100%;\n}\n\n.selected .quota-button {\n  background: $purple;\n  color: #333;\n}\n\n.quota-button:hover {\n  background: #bbeebb;\n}\n\n.weekend {\n  background-color: $white-grey;\n}\n</style>\n","<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <route-tabs :active-tab=\"activeTab\" :tabs=\"tabs\" />\n\n      <div class=\"flexrow filters\">\n        <div class=\"flexrow-item\" v-if=\"activeTab === 'tasktypes'\">\n          <combobox-task-type\n            class=\"flexrow-item\"\n            :label=\"$t('quota.type_label')\"\n            :task-type-list=\"taskTypeList\"\n            :disabled=\"!params.person\"\n            v-model=\"params.taskTypeId\"\n          />\n        </div>\n        <people-field\n          ref=\"person-field\"\n          class=\"person-field flexrow-item\"\n          :clearable=\"false\"\n          :disabled=\"isCurrentUserArtist\"\n          :label=\"$t('main.person')\"\n          :people=\"teamPersons\"\n          v-model=\"params.person\"\n          v-if=\"activeTab === 'persons'\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('quota.detail_label')\"\n          :options=\"detailLevelOptions\"\n          v-model=\"detailLevelString\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('quota.month_label')\"\n          :options=\"monthOptions\"\n          v-model=\"monthString\"\n          v-if=\"detailLevelString === 'day'\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('quota.year_label')\"\n          :options=\"yearOptions\"\n          v-model=\"yearString\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('quota.count_label')\"\n          :options=\"countModeOptions\"\n          v-model=\"params.countMode\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('quota.compute_mode')\"\n          :options=\"computeModeOptions\"\n          v-model=\"params.computeMode\"\n        />\n        <info-question-mark\n          class=\"mt2 flexrow-item\"\n          :text=\"$t(`quota.explanation_${params.computeMode}`)\"\n        />\n        <div class=\"filler\"></div>\n        <button-simple\n          class=\"flexrow-item\"\n          :title=\"$t('quota.export_quotas')\"\n          icon=\"download\"\n          @click=\"exportQuotas\"\n        />\n      </div>\n\n      <div class=\"flexrow mb2 mt0\">\n        <search-field\n          ref=\"search-field\"\n          class=\"search-field flexrow-item\"\n          @change=\"onSearchChange\"\n          v-if=\"activeTab === 'tasktypes'\"\n        />\n\n        <span class=\"label flexrow-item\">\n          {{ $t('quota.highlight_quotas') }}\n        </span>\n\n        <text-field\n          class=\"flexrow-item max-quota-input\"\n          type=\"number\"\n          v-model=\"maxQuota\"\n        />\n      </div>\n\n      <quota\n        ref=\"quota-list\"\n        :task-type-id=\"activeTab === 'tasktypes' ? params.taskTypeId : null\"\n        :person-id=\"\n          activeTab === 'persons' && params.person ? params.person.id : null\n        \"\n        :detail-level=\"detailLevelString\"\n        :year=\"currentYear\"\n        :month=\"currentMonth\"\n        :count-mode=\"params.countMode\"\n        :compute-mode=\"params.computeMode\"\n        :search-text=\"searchText\"\n        :max-quota=\"maxQuota\"\n      />\n    </div>\n    <div class=\"column side-column\" v-if=\"showInfo && currentPerson\">\n      <people-quota-info\n        :person=\"currentPerson\"\n        :year=\"currentYear\"\n        :month=\"currentMonth\"\n        :week=\"currentWeek\"\n        :day=\"currentDay\"\n        :is-loading=\"isPersonShotsLoading\"\n        :is-loading-error=\"false\"\n        :shots=\"personShots\"\n        :count-mode=\"params.countMode\"\n        @close=\"hideSideInfo\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport stringHelpers from '@/lib/string'\n\nimport { episodifyRoute } from '@/lib/path'\nimport preferences from '@/lib/preferences'\nimport { monthToString, range } from '@/lib/time'\nimport { sortPeople } from '@/lib/sorting'\n\nimport personStore from '@/store/modules/people'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType.vue'\nimport InfoQuestionMark from '@/components/widgets/InfoQuestionMark.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport PeopleQuotaInfo from '@/components/sides/PeopleQuotaInfo.vue'\nimport Quota from '@/components/pages/quota/Quota.vue'\nimport RouteTabs from '@/components/widgets/RouteTabs.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nconst personMap = personStore.cache.personMap\n\nexport default {\n  name: 'production-quota',\n\n  components: {\n    ButtonSimple,\n    Combobox,\n    ComboboxTaskType,\n    InfoQuestionMark,\n    PeopleField,\n    PeopleQuotaInfo,\n    Quota,\n    RouteTabs,\n    SearchField,\n    TextField\n  },\n\n  data() {\n    return {\n      activeTab: 'tasktypes',\n      tabs: [\n        { name: 'tasktypes', label: this.$t('task_types.title') },\n        { name: 'persons', label: this.$t('main.people') }\n      ],\n      countModeOptions: [\n        { label: this.$t('quota.frames'), value: 'frames' },\n        { label: this.$t('quota.seconds'), value: 'seconds' },\n        { label: this.$t('quota.count'), value: 'count' }\n      ],\n      detailLevelOptions: [\n        { label: this.$t('quota.day'), value: 'day' },\n        { label: this.$t('quota.week'), value: 'week' },\n        { label: this.$t('quota.month'), value: 'month' }\n      ],\n      computeModeOptions: [\n        { label: this.$t('quota.weighted'), value: 'weighted' },\n        { label: this.$t('quota.feedback_date'), value: 'feedback' },\n        { label: this.$t('quota.weighted_done'), value: 'weighteddone' },\n        { label: this.$t('quota.done_date'), value: 'done' }\n      ],\n      currentYear: moment().year(),\n      currentMonth: moment().month() + 1,\n      currentWeek: moment().week(),\n      currentDay: moment().date(),\n      currentPerson: this.getCurrentPerson(),\n      currentMode: 'frames',\n\n      detailLevel: 'day',\n\n      isLoading: false,\n      isPersonShotsLoading: false,\n      maxQuota: 0,\n\n      detailLevelString: 'day',\n      monthString: `${moment().month() + 1}`,\n      yearString: `${moment().year()}`,\n\n      params: {\n        countMode: 'frames',\n        computeMode: 'weighted',\n        person: null,\n        taskTypeId: ''\n      },\n      personShots: [],\n      silent: false,\n\n      searchText: '',\n      showInfo: false\n    }\n  },\n\n  mounted() {\n    this.setCountModeOptions()\n    const key = `quota:${this.currentProduction.id}:params`\n    const savedParams = preferences.getObjectPreference(key) || {}\n    const defaultParams = {\n      countMode: this.countModeOptions[0].value,\n      computeMode: this.computeModeOptions[0].value,\n      taskTypeId: this.productionShotTaskTypes[0].id\n    }\n    this.activeTab = this.$route.query.tab || 'tasktypes'\n    this.params = {\n      countMode:\n        this.$route.query.countMode ||\n        savedParams.countMode ||\n        defaultParams.countMode,\n      computeMode:\n        this.$route.query.computeMode ||\n        savedParams.computeMode ||\n        defaultParams.computeMode,\n      taskTypeId: this.$route.query.taskTypeId,\n      person: this.$route.query.personId\n        ? personMap.get(this.$route.query.personId)\n        : null\n    }\n    if (!this.params.taskTypeId && !this.params.person) {\n      this.params.taskTypeId =\n        savedParams.taskTypeId || defaultParams.taskTypeId\n    }\n    this.resetRouteQuery()\n    this.loadRoute()\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'isCurrentUserArtist',\n      'isPaperProduction',\n      'productionShotTaskTypes',\n      'user'\n    ]),\n\n    taskTypeList() {\n      return [...this.productionShotTaskTypes]\n    },\n\n    teamPersons() {\n      if (this.isCurrentUserArtist) {\n        return [personMap.get(this.user.id)]\n      }\n      return sortPeople(\n        this.currentProduction.team.map(personId => personMap.get(personId))\n      )\n    },\n\n    yearOptions() {\n      const year = 2018\n      const currentYear = moment().year()\n      return range(year, currentYear)\n        .map(year => ({\n          label: year,\n          value: `${year}`\n        }))\n        .reverse()\n    },\n\n    monthOptions() {\n      const currentYear = `${moment().year()}`\n      const month = 1\n      const currentMonth = moment().month() + 1\n      let monthRange = range(month, 12)\n      if (currentYear === this.yearString) {\n        monthRange = range(month, currentMonth)\n      }\n      return monthRange.map(month => ({\n        label: monthToString(month),\n        value: `${month}`\n      }))\n    }\n  },\n\n  methods: {\n    ...mapActions(['getPersonQuotaShots', 'loadShots']),\n\n    getCurrentPerson() {\n      const personId = this.$route.params.person_id\n      return personMap?.get(personId) ?? {}\n    },\n\n    loadRoute() {\n      const { month, year, week, day } = this.$route.params\n      const { countMode, taskTypeId, computeMode } = this.$route.query\n\n      if (this.$route.path.indexOf('week') > 0) this.detailLevel = 'week'\n      if (this.$route.path.indexOf('month') > 0) this.detailLevel = 'month'\n      if (this.$route.path.indexOf('day') > 0) this.detailLevel = 'day'\n\n      this.currentPerson = this.getCurrentPerson()\n      this.detailLevelString = this.detailLevel\n      if (countMode) {\n        this.countMode = countMode\n        this.currentMode = this.countMode\n      }\n      if (taskTypeId) {\n        this.params.taskTypeId = taskTypeId\n      }\n      if (this.$route.query.personId) {\n        this.params.person = personMap.get(this.$route.query.personId)\n      }\n      if (computeMode) {\n        this.params.computeMode = computeMode\n      }\n      if (month) {\n        this.currentMonth = Number(month)\n        this.monthString = `${month}`\n      }\n      if (year) {\n        this.currentYear = Number(year)\n        this.yearString = `${year}`\n      }\n      if (week) {\n        this.currentWeek = Number(week)\n        this.weekString = `${week}`\n      }\n      if (day) {\n        this.currentDay = Number(day)\n      }\n\n      if (this.$route.path.indexOf('person') > 0) {\n        this.isPersonShotsLoading = true\n        this.getPersonQuotaShots({\n          personId: this.currentPerson.id,\n          detailLevel: this.detailLevel,\n          taskTypeId: this.params.taskTypeId,\n          year,\n          month,\n          week,\n          day,\n          computeMode: this.params.computeMode\n        }).then(shots => {\n          this.isPersonShotsLoading = false\n          this.personShots = shots\n          this.showSideInfo()\n        })\n      } else {\n        this.hideSideInfo()\n      }\n    },\n\n    showSideInfo() {\n      this.showInfo = true\n    },\n\n    hideSideInfo() {\n      this.showInfo = false\n    },\n\n    episodifyRoute(route) {\n      if (this.currentEpisode) {\n        episodifyRoute(route, this.currentEpisode.id)\n      }\n      return route\n    },\n\n    exportQuotas() {\n      const quotas = this.$refs['quota-list'].quotaMap\n      const nameData = ['quotas', this.detailLevel, this.currentYear]\n      if (this.detailLevel === 'day') nameData.push(this.currentMonth)\n      const name = stringHelpers.slugify(nameData.join('_'))\n      const people = Object.keys(quotas)\n        .map(personId => personMap.get(personId))\n        .sort((a, b) =>\n          a.full_name.localeCompare(b.full_name, undefined, {\n            numeric: true\n          })\n        )\n      csv.generateQuotas(\n        name,\n        quotas,\n        people,\n        this.countMode,\n        this.detailLevel,\n        moment().year(),\n        moment().month() + 1,\n        this.currentYear,\n        this.currentMonth,\n        this.currentWeek\n      )\n    },\n\n    onSearchChange(searchText) {\n      this.searchText = searchText\n    },\n\n    setCountModeOptions() {\n      if (this.isPaperProduction) {\n        this.countModeOptions = [\n          { label: this.$t('quota.drawings'), value: 'drawings' },\n          { label: this.$t('quota.count'), value: 'count' }\n        ]\n        this.countMode = 'drawings'\n        this.currentMode = this.params.countMode\n      } else {\n        this.countModeOptions = [\n          { label: this.$t('quota.frames'), value: 'frames' },\n          { label: this.$t('quota.seconds'), value: 'seconds' },\n          { label: this.$t('quota.count'), value: 'count' }\n        ]\n        this.params.countMode = 'frames'\n        this.currentMode = this.params.countMode\n      }\n    },\n\n    resetRouteQuery() {\n      const query = this.getQuery()\n      const key = `quota:${this.currentProduction.id}:params`\n      preferences.setObjectPreference(key, this.params)\n      this.$router.push({ query })\n    },\n\n    getQuery() {\n      const taskTypeId =\n        this.activeTab === 'tasktypes' ? this.params.taskTypeId : undefined\n      let personId = null\n      const isPersonTab =\n        this.activeTab === 'persons' || this.$route.query.tab === 'persons'\n      if (isPersonTab && this.params.person) {\n        personId = this.params.person.indexOf\n      } else if (isPersonTab) {\n        personId = this.teamPersons[0]?.id\n      }\n      const query = {\n        countMode: this.params.countMode,\n        computeMode: this.params.computeMode,\n        tab: this.activeTab || 'tasktypes',\n        taskTypeId,\n        personId: personId || undefined\n      }\n      return query\n    }\n  },\n\n  watch: {\n    'params.person'() {\n      if (!this.silent) {\n        this.silent = true\n        this.resetRouteQuery()\n        setTimeout(() => {\n          this.silent = false\n        }, 100)\n      }\n    },\n\n    detailLevelString() {\n      if (this.detailLevel !== this.detailLevelString) {\n        const route = {\n          name: `quota-${this.detailLevelString}`,\n          params: {\n            year: this.currentYear\n          },\n          query: this.getQuery()\n        }\n        if (this.detailLevelString === 'day') {\n          route.params.month = this.currentMonth\n        }\n        this.$router.push(this.episodifyRoute(route))\n      }\n    },\n\n    yearString() {\n      const year = Number(this.yearString)\n      const currentMonth = moment().month() + 1\n      if (this.currentYear !== year) {\n        const route = {\n          name: `quota-${this.detailLevelString}`,\n          params: {\n            year\n          },\n          query: this.getQuery()\n        }\n        if (this.detailLevelString === 'day') {\n          route.params.month = `${Math.min(\n            Number(this.monthString),\n            currentMonth\n          )}`\n        }\n        this.$router.push(this.episodifyRoute(route))\n      }\n    },\n\n    monthString() {\n      if (this.currentMonth !== Number(this.monthString)) {\n        const route = {\n          name: 'quota-day',\n          params: {\n            year: this.currentYear,\n            month: this.monthString\n          },\n          query: this.getQuery()\n        }\n        this.$router.push(this.episodifyRoute(route))\n      }\n    },\n\n    'params.countMode'() {\n      this.resetRouteQuery()\n      this.currentMode = this.params.countMode\n    },\n\n    'params.computeMode'() {\n      if (this.$route.query.computeMode !== this.params.computeMode) {\n        this.resetRouteQuery()\n        this.currentPerson = null\n      }\n    },\n\n    'params.taskTypeId'() {\n      if (!this.silent && this.params.taskTypeId) {\n        this.silent = true\n        this.resetRouteQuery()\n        setTimeout(() => {\n          this.silent = false\n        }, 100)\n      }\n    },\n\n    currentProduction() {\n      this.setCountModeOptions()\n      this.isLoading = true\n      this.loadShots(() => {\n        this.resetRouteQuery()\n        this.loadRoute()\n        this.isLoading = false\n      })\n    },\n\n    currentEpisode() {\n      this.isLoading = true\n      this.loadShots(() => {\n        this.resetRouteQuery()\n        this.loadRoute()\n        this.isLoading = false\n      })\n    },\n\n    $route() {\n      this.activeTab = this.$route.query.tab || 'tasktypes'\n      this.resetRouteQuery()\n      this.loadRoute()\n    }\n  },\n\n  head() {\n    const prodName = this.currentProduction.name\n    return {\n      title: `${prodName} | ${this.$t('quota.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .filters {\n    color: $white-grey;\n  }\n}\n\n.filters {\n  padding-bottom: 2rem;\n\n  .field {\n    padding-bottom: 0;\n    margin-bottom: 0;\n  }\n\n  .overall-man-days {\n    width: 120px;\n    font-size: 0.9em;\n    margin-right: 1em;\n  }\n}\n\n.fixed-page {\n  padding-top: 60px;\n  padding-left: 2em;\n}\n\n.main-column {\n  border: 0;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding-top: 2em;\n  padding-right: 2em;\n}\n\n.zoom-level {\n  margin-top: -10px;\n}\n\n.side-column {\n  border-left: 1px solid var(--border);\n  padding: 0;\n  margin: 0;\n}\n\n.search-field {\n  color: var(--text);\n}\n\n.label {\n  font-weight: 300;\n  color: var(--text);\n}\n\n.max-quota-input {\n  width: 80px;\n}\n</style>\n"],"names":["_sfc_main","TableInfo","mapGetters","shot","frameToSeconds","_hoisted_1","_openBlock","_createElementBlock","$props","_createCommentVNode","_hoisted_2","_createElementVNode","_ctx","_Fragment","_renderList","_toDisplayString","$options","_createVNode","_component_table_info","XIcon","PageTitle","PeopleAvatar","QuotaShotList","moment","monthToString","route","_hoisted_3","_component_router_link","_withCtx","_component_x_icon","_component_people_avatar","_component_page_title","_hoisted_4","_hoisted_5","_hoisted_6","_component_quota_shot_list","err","getMonthRange","getDayRange","getWeekRange","sortTaskTypes","key","taskTypeId","taskType","personIds","indexSearch","person","mapActions","episodifyRoute","year","month","day","date","quotas","personId","dateString","shots","opt","quota","dayKey","weekKey","monthKey","average","total","nbEntries","yearKey","week","persons","pId","buildNameIndex","a","b","personAName","personBName","_hoisted_18","_normalizeStyle","$data","_hoisted_7","_createTextVNode","_hoisted_8","_hoisted_9","_hoisted_10","_normalizeClass","_createBlock","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","personMap","personStore","ButtonSimple","Combobox","ComboboxTaskType","InfoQuestionMark","PeopleField","PeopleQuotaInfo","Quota","RouteTabs","SearchField","TextField","savedParams","preferences","defaultParams","sortPeople","currentYear","range","currentMonth","monthRange","countMode","computeMode","nameData","name","stringHelpers","people","csv","searchText","query","isPersonTab","_component_route_tabs","_component_combobox_task_type","_cache","$event","_component_people_field","_component_combobox","_component_info_question_mark","_component_button_simple","_component_search_field","_component_text_field","_component_quota","_component_people_quota_info"],"mappings":"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"}