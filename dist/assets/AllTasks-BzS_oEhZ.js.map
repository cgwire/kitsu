{"version":3,"file":"AllTasks-BzS_oEhZ.js","sources":["../../src/components/lists/AllTaskList.vue","../../src/components/widgets/StatusStats.vue","../../src/components/pages/AllTasks.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div ref=\"body\" class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead ref=\"thead\" class=\"datatable-head\">\n          <tr class=\"row-header\">\n            <th class=\"project\" ref=\"th-name\">\n              {{ $t('tasks.fields.production') }}\n            </th>\n            <th class=\"thumbnail\" ref=\"th-thumbnail\"></th>\n            <th class=\"asset-type\" ref=\"th-type\">\n              {{ $t('tasks.fields.parent') }}\n            </th>\n            <th class=\"name\" ref=\"th-name\">\n              {{ $t('tasks.fields.entity') }}\n            </th>\n            <th class=\"name\" ref=\"th-name\">\n              {{ $t('tasks.fields.task_type') }}\n            </th>\n            <th class=\"status\" ref=\"th-status\">\n              {{ $t('tasks.fields.task_status') }}\n            </th>\n            <th class=\"assignees\" ref=\"th-assignees\">\n              {{ $t('tasks.fields.assignees') }}\n            </th>\n            <th\n              ref=\"th-estimation\"\n              class=\"estimation number-cell\"\n              :title=\"$t('main.estimation')\"\n            >\n              {{ $t('tasks.fields.estimation').substring(0, 3) }}.\n            </th>\n            <th class=\"duration number-cell\" ref=\"th-duration\">\n              {{ $t('tasks.fields.duration').substring(0, 3) }}.\n            </th>\n            <th class=\"start-date\" ref=\"th-date\">\n              {{ $t('tasks.fields.start_date') }}\n            </th>\n            <th class=\"due-date\" ref=\"th-date\">\n              {{ $t('tasks.fields.due_date') }}\n            </th>\n            <th class=\"done-date\" ref=\"th-date\">\n              {{ $t('tasks.fields.done_date') }}\n            </th>\n            <th class=\"empty\" ref=\"\">&nbsp;</th>\n          </tr>\n        </thead>\n\n        <tbody class=\"datatable-body\">\n          <tr\n            :ref=\"'task-' + task.id\"\n            :key=\"task.id\"\n            :class=\"{\n              'task-line': true,\n              'datatable-row': true,\n              selected: selectionGrid[task.id]\n            }\"\n            @click=\"selectTask($event, index, task)\"\n            v-for=\"(task, index) in tasks\"\n          >\n            <td class=\"project\">\n              <production-name-cell\n                class=\"project\"\n                :entry=\"{ id: task.project_id, name: task.project_name }\"\n                :only-avatar=\"true\"\n                :is-link=\"false\"\n              />\n            </td>\n            <td class=\"thumbnail\">\n              <entity-thumbnail\n                class=\"flexrow-item\"\n                :preview-file-id=\"task.last_preview_file_id\"\n                :width=\"50\"\n                :height=\"33\"\n                :empty-width=\"50\"\n                :empty-height=\"33\"\n              />\n            </td>\n            <td class=\"asset-type\">\n              {{ getParentName(task) }}\n            </td>\n            <td class=\"name\">\n              {{ task.entity_name }}\n            </td>\n            <task-type-cell\n              class=\"name\"\n              :task-type=\"taskTypeMap.get(task.task_type_id)\"\n            />\n            <validation-cell\n              class=\"status unselectable\"\n              :task-test=\"task\"\n              :is-border=\"false\"\n              :is-assignees=\"false\"\n              :selectable=\"false\"\n              :is-static=\"true\"\n            />\n            <td class=\"assignees\">\n              <div class=\"flexrow\">\n                <people-avatar-with-menu\n                  class=\"flexrow-item\"\n                  :key=\"task.id + '-' + personId\"\n                  :person=\"personMap.get(personId)\"\n                  :size=\"30\"\n                  :font-size=\"16\"\n                  @unassign=\"person => onUnassign(task, person)\"\n                  v-for=\"personId in task.assignees\"\n                />\n              </div>\n            </td>\n            <td class=\"estimation number-cell\">\n              {{ formatDuration(task.estimation) }}\n            </td>\n            <td\n              :class=\"{\n                duration: true,\n                'number-cell': true,\n                error: isEstimationBurned(task)\n              }\"\n            >\n              {{ formatDuration(task.duration) }}\n            </td>\n            <td class=\"start-date\">\n              {{ formatDate(task.start_date) }}\n            </td>\n            <td class=\"due-date\">\n              {{ formatDate(task.due_date) }}\n            </td>\n            <td class=\"done-date\">\n              {{ formatDate(task.done_date) }}\n            </td>\n            <td class=\"empty\"></td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"has-text-centered\" v-if=\"isMore && !isLoading\">\n        <spinner class=\"mt2\" v-if=\"isMoreLoading\" />\n        <button\n          class=\"button mt2\"\n          @click=\"$emit('more-clicked')\"\n          v-else-if=\"!isLoading\"\n        >\n          {{ $t('main.load_more') }}\n        </button>\n      </div>\n      <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n    </div>\n    <p class=\"has-text-centered nb-tasks\" v-if=\"!isLoading\">\n      {{ stats.total }} {{ $tc('tasks.number', stats.total) }} ({{\n        formatDuration(stats.total_estimation)\n      }}\n      {{ $tc('main.days_estimated', isTimeEstimatedPlural) }},\n      {{ formatDuration(stats.total_duration) }}\n      {{ $tc('main.days_spent', isTimeSpentPlural) }})\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport moment from 'moment-timezone'\n\nimport { formatListMixin } from '@/components/mixins/format'\nimport { domMixin } from '@/components/mixins/dom'\n\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\nimport PeopleAvatarWithMenu from '@/components/widgets/PeopleAvatarWithMenu.vue'\nimport ProductionNameCell from '@/components/cells/ProductionNameCell.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell.vue'\nimport ValidationCell from '@/components/cells/ValidationCell.vue'\n\nexport default {\n  name: 'all-task-list',\n\n  mixins: [domMixin, formatListMixin],\n\n  components: {\n    EntityThumbnail,\n    PeopleAvatarWithMenu,\n    ProductionNameCell,\n    Spinner,\n    TableInfo,\n    TaskTypeCell,\n    ValidationCell\n  },\n\n  emits: ['more-clicked', 'task-selected'],\n\n  data() {\n    return {\n      lastSelection: null,\n      page: 1,\n      selectionGrid: {}\n    }\n  },\n\n  props: {\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isMore: {\n      type: Boolean,\n      default: false\n    },\n    isMoreLoading: {\n      type: Boolean,\n      default: false\n    },\n    stats: {\n      type: Object,\n      default: () => {}\n    },\n    tasks: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  mounted() {\n    window.addEventListener('keydown', this.onKeyDown, false)\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown)\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'editMap',\n      'episodeMap',\n      'nbSelectedTasks',\n      'personMap',\n      'user',\n      'selectedTasks',\n      'sequenceMap',\n      'shotMap',\n      'taskMap',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'taskTypeMap'\n    ]),\n\n    isTimeSpentPlural() {\n      return (\n        Math.floor(\n          (this.stats.total_duration ? this.stats.total_duration : 0) / 60 / 8\n        ) >= 1\n      )\n    },\n\n    isTimeEstimatedPlural() {\n      return (\n        Math.floor(\n          (this.stats.total_estimation ? this.stats.total_estimation : 0) /\n            60 /\n            8\n        ) >= 1\n      )\n    },\n\n    nbFrames() {\n      let total = 0\n      this.tasks.forEach(task => {\n        total += task.entity_nb_frames\n      })\n      return total\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addSelectedTask',\n      'addSelectedTasks',\n      'clearSelectedTasks',\n      'updateTask',\n      'unassignPersonFromTask',\n      'removeSelectedTask'\n    ]),\n\n    getParentName(task) {\n      if (task.sequence_name) {\n        if (task.episode_name) {\n          return `${task.episode_name} - ${task.sequence_name}`\n        } else {\n          return task.sequence_name\n        }\n      } else {\n        return task.entity_type_name\n      }\n    },\n\n    getTaskName(task) {\n      return task.entity_name\n    },\n\n    getDate(date) {\n      return date ? moment(date, 'YYYY-MM-DD').toDate() : null\n    },\n\n    formatDate(date) {\n      if (date) return moment(date).format('YYYY-MM-DD')\n      return ''\n    },\n\n    isEstimationBurned(task) {\n      return (\n        task.estimation &&\n        task.estimation > 0 &&\n        task.duration > task.estimation\n      )\n    },\n\n    onKeyDown(event) {\n      if (this.tasks.length > 0 && event.altKey) {\n        let index = this.lastSelection ? this.lastSelection : 0\n        if ([37, 38].includes(event.keyCode)) {\n          index = index - 1 < 0 ? (index = this.tasks.length - 1) : index - 1\n          this.selectTask({}, index, this.tasks[index])\n          this.pauseEvent(event)\n        } else if ([39, 40].includes(event.keyCode)) {\n          index = index + 1 >= this.tasks.length ? (index = 0) : index + 1\n          this.selectTask({}, index, this.tasks[index])\n          this.pauseEvent(event)\n        }\n      }\n    },\n\n    selectTask(event, index, task) {\n      if (\n        event &&\n        event.target &&\n        // Dirty hack needed to make date picker and inputs work properly\n        (['INPUT'].includes(event.target.nodeName) ||\n          (event.target.parentNode &&\n            ['HEADER'].includes(event.target.parentNode.nodeName)) ||\n          ['cell day selected'].includes(event.target.className))\n      )\n        return\n      const isSelected = this.selectionGrid[task.id]\n      const isManySelection = Object.keys(this.selectionGrid).length > 1\n      this.clearSelectedTasks({ task })\n      this.resetSelection()\n\n      if (this.selectionGrid[task.id]) {\n        this.removeSelectedTask({ task })\n        this.selectionGrid[task.id] = undefined\n      } else if (!isSelected || isManySelection) {\n        this.addSelectedTask({ task })\n        this.$emit('task-selected', task)\n        this.selectionGrid[task.id] = true\n        this.lastSelection = index\n      }\n    },\n\n    setScrollPosition(scrollPosition) {\n      if (this.$refs.body) {\n        this.$refs.body.scrollTop = scrollPosition\n      }\n    },\n\n    resetSelection() {\n      this.selectionGrid = {}\n      this.lastSelection = null\n    }\n  },\n\n  watch: {\n    tasks() {\n      this.page = 1\n      this.resetSelection()\n    },\n\n    nbSelectedTasks() {\n      if (this.nbSelectedTasks === 0) this.resetSelection()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.thumbnail {\n  min-width: 63px;\n  max-width: 63px;\n  width: 63px;\n}\n\n.asset-type {\n  min-width: 120px;\n  width: 120px;\n}\n\n.sequence {\n  min-width: 120px;\n  width: 120px;\n}\n\n.name {\n  min-width: 120px;\n  width: 120px;\n  font-weight: bold;\n}\n\n.status {\n  min-width: 140px;\n  width: 140px;\n}\n\n.assignees {\n  min-width: 100px;\n  width: 100px;\n}\n\n.frames,\n.duration,\n.estimation {\n  min-width: 60px;\n  width: 60px;\n}\n\n.last-comment-date,\n.real-start-date,\n.real-end-date {\n  min-width: 110px;\n  max-width: 110px;\n  width: 110px;\n}\n\nth.start-date,\nth.due-date {\n  min-width: 106px;\n  max-width: 106px;\n  width: 106px;\n}\n\ntd.start-date,\ntd.due-date {\n  text-align: center;\n  margin: 0;\n  padding: 0;\n}\n\n.empty {\n  width: 100%;\n}\n\n.nb-tasks {\n  padding: 0.5em;\n}\n\n.table-header th {\n  padding: 0.5em 0;\n\n  &.status {\n    padding-left: 1em;\n  }\n}\n\n.datatable-head {\n  th {\n    padding-left: 5px;\n\n    &.retake-count {\n      padding-right: 1em;\n    }\n\n    &.status {\n      padding-left: 1em;\n      padding-right: 1em;\n    }\n  }\n}\n\n.input {\n  padding: 0.5em;\n}\n\n.datatable-wrapper {\n  min-height: calc(100% - 50px);\n}\n\n.data-list {\n  margin-top: 0.6em;\n}\n\n.list-wrapper {\n  overflow-x: auto;\n  overflow-y: auto;\n}\n\n.list-wrapper div:first-child h2 {\n  margin-top: 0;\n}\n\n.datatable-body {\n  overflow-x: auto;\n  overflow-y: scroll;\n  min-height: 100%;\n\n  td,\n  tr {\n    padding-bottom: 0;\n    padding-top: 0;\n\n    &.thumbnail {\n      padding: 6px;\n    }\n  }\n\n  td.retake-count {\n    padding-right: 0.5em;\n  }\n\n  td.name {\n    border-right: 1px solid var(--border);\n  }\n\n  td.status {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n\n  tr.task-line {\n    cursor: pointer;\n  }\n}\n\n.error {\n  color: $red;\n}\n\n.datatable-row:hover {\n  background: var(--background-selectable);\n}\n</style>\n","<template>\n  <div class=\"status-stats\">\n    <div :key=\"'stat-' + stat.name\" class=\"stat-wrapper\" v-for=\"stat in stats\">\n      <div\n        :key=\"'stat-value-' + stat.name.toLowerCase()\"\n        class=\"stat-line\"\n        :title=\"stat.name + ': ' + stat.value\"\n        :style=\"{\n          background: stat.color,\n          width: (stat.value / statMax) * 100 + '%'\n        }\"\n      >\n        <span class=\"stat-text\">{{ stat.name }} : {{ stat.value }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'status-stats',\n\n  props: {\n    stats: Array\n  },\n\n  computed: {\n    statMax() {\n      if (this.stats) {\n        return this.stats.reduce((max, stat) => {\n          return Math.max(stat.value, max)\n        }, 0)\n      } else {\n        return 0\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.status-stats {\n  text-align: left;\n  width: 100%;\n  flex: 1;\n\n  .stat-line {\n    border-radius: 6px;\n    display: inline-block;\n    margin-right: 1em;\n    margin-top: 0;\n    margin-bottom: 0.4em;\n    padding-left: 4px;\n    padding-top: 1px;\n    font-size: 0.8em;\n    font-weight: bold;\n    width: 100%;\n    height: 32px;\n  }\n\n  .stat-text {\n    display: inline-block;\n    background: rgba(255, 255, 255, 0.8);\n    font-weight: bold;\n    padding: 4px 8px;\n    margin-top: 3px;\n    color: $black;\n    border-radius: 6px;\n    white-space: nowrap;\n  }\n}\n</style>\n","<template>\n  <page-layout>\n    <template #main>\n      <div class=\"all-tasks\">\n        <div class=\"filters flexrow mt1\">\n          <combobox-production\n            class=\"flexrow-item mb0\"\n            :label=\"$t('main.production')\"\n            :production-list=\"productionList\"\n            v-model=\"filters.productionId\"\n          />\n          <combobox-status\n            class=\"flexrow-item selector mb0\"\n            :label=\"$t('news.task_status')\"\n            :task-status-list=\"taskStatusList\"\n            v-model=\"filters.taskStatusId\"\n          />\n          <combobox-task-type\n            class=\"flexrow-item selector mb0\"\n            :label=\"$t('news.task_type')\"\n            :task-type-list=\"taskTypeList\"\n            v-model=\"filters.taskTypeId\"\n          />\n        </div>\n        <div class=\"filters flexrow mt1 mb1\">\n          <combobox-studio\n            class=\"mr1\"\n            :label=\"$t('people.fields.studio')\"\n            v-model=\"filters.studioId\"\n          />\n          <combobox-department\n            class=\"flexrow-item\"\n            :label=\"$t('main.department')\"\n            v-model=\"filters.departmentId\"\n          />\n          <div class=\"flexrow-item selector\">\n            <label class=\"label person-label\">\n              {{ $t('main.person') }}\n            </label>\n            <people-field\n              class=\"person-field\"\n              :multiple=\"true\"\n              :people=\"personList\"\n              v-model=\"filters.person\"\n            />\n          </div>\n        </div>\n\n        <all-task-list\n          :tasks=\"tasks\"\n          :stats=\"stats\"\n          :is-loading=\"isLoading\"\n          :is-error=\"isLoadingError\"\n          :is-more=\"isMore\"\n          :is-more-loading=\"isMoreLoading\"\n          @task-clicked=\"taskClicked\"\n          @more-clicked=\"loadMore\"\n        />\n      </div>\n    </template>\n    <template #side>\n      <task-info :task=\"selectedTasks.values().next().value\">\n        <status-stats :stats=\"statusStats\" v-if=\"!isLoading\" />\n      </task-info>\n    </template>\n  </page-layout>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { sortPeople } from '@/lib/sorting'\n\nimport AllTaskList from '@/components/lists/AllTaskList.vue'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment.vue'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction.vue'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType.vue'\nimport ComboboxStatus from '@/components/widgets/ComboboxStatus.vue'\nimport ComboboxStudio from '@/components/widgets/ComboboxStudio.vue'\nimport PageLayout from '@/components/layouts/PageLayout.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport StatusStats from '@/components/widgets/StatusStats.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'all-tasks',\n\n  components: {\n    AllTaskList,\n    ComboboxDepartment,\n    ComboboxProduction,\n    ComboboxTaskType,\n    ComboboxStatus,\n    ComboboxStudio,\n    PageLayout,\n    PeopleField,\n    StatusStats,\n    TaskInfo\n  },\n\n  data() {\n    return {\n      filters: {\n        productionId: null,\n        departmentId: null,\n        studioId: null,\n        taskStatusId: null,\n        taskTypeId: null,\n        person: null\n      },\n      isMore: false,\n      isMoreLoading: false,\n      isLoading: false,\n      isLoadingError: false,\n      tasks: [],\n      stats: {\n        status: []\n      }\n    }\n  },\n\n  mounted() {\n    const routeQuery = this.$route.query\n    if (routeQuery.project_id) {\n      this.filters.productionId = routeQuery.project_id\n    }\n    if (routeQuery.task_status_id) {\n      this.filters.taskStatusId = routeQuery.task_status_id\n    }\n    if (routeQuery.task_type_id) {\n      this.filters.taskTypeId = routeQuery.task_type_id\n    }\n    if (routeQuery.person_id) {\n      this.filters.person = this.activePeopleWithoutBot.find(\n        person => person.id === routeQuery.person_id\n      )\n    }\n    this.reload()\n  },\n\n  computed: {\n    ...mapGetters([\n      'activePeopleWithoutBot',\n      'getProductionTaskStatuses',\n      'getProductionTaskTypes',\n      'nbSelectedTasks',\n      'openProductions',\n      'personMap',\n      'productionMap',\n      'selectedTasks',\n      'taskStatus',\n      'taskStatusMap',\n      'taskTypes'\n    ]),\n\n    taskStatusList() {\n      const productionId = this.filters.productionId\n      const statuses = this.getProductionTaskStatuses(productionId).filter(\n        status => !status.for_concept\n      )\n      return this.addAllValue(statuses)\n    },\n\n    taskTypeList() {\n      const productionId = this.filters.productionId\n      const types = this.getProductionTaskTypes(productionId).filter(\n        type => type.for_entity !== 'Concept'\n      )\n      return this.addAllValue(types)\n    },\n\n    personList() {\n      const productionId = this.filters.productionId\n      const production = this.productionMap.get(productionId)\n      if (production) {\n        return sortPeople(\n          production.team\n            .map(personId => this.personMap.get(personId))\n            .filter(person => person && !person.is_bot)\n        )\n      } else {\n        return this.activePeopleWithoutBot\n      }\n    },\n\n    productionList() {\n      return this.addAllValue(this.openProductions)\n    },\n\n    params() {\n      return {\n        project_id: this.filters.productionId,\n        task_status_id: this.filters.taskStatusId,\n        task_type_id: this.filters.taskTypeId,\n        person_id: this.filters.person\n          ? this.filters.person.map(person => person.id).join(',')\n          : null,\n        department_id: this.filters.departmentId,\n        studio_id: this.filters.studioId\n      }\n    },\n\n    statusStats() {\n      return [...this.stats.status]\n        .sort((a, b) => b.amount - a.amount)\n        .map(stat => {\n          const taskStatus = this.taskStatusMap.get(stat.task_status_id)\n          return {\n            name: taskStatus.short_name.toUpperCase(),\n            color: taskStatus.color,\n            value: stat.amount\n          }\n        })\n    }\n  },\n\n  methods: {\n    ...mapActions(['clearSelectedTasks', 'loadOpenTasks', 'loadTask']),\n\n    addAllValue(list) {\n      return [\n        {\n          id: '',\n          color: '#999',\n          name: this.$t('main.all'),\n          short_name: this.$t('main.all')\n        }\n      ].concat([...list])\n    },\n\n    async reload() {\n      this.isLoading = true\n      this.page = 1\n      this.clearSelectedTasks()\n      this.tasks = []\n      try {\n        const routeQuery = {}\n        Object.keys(this.params).forEach(key => {\n          if (this.params[key]) {\n            routeQuery[key] = this.params[key]\n          }\n        })\n        this.$router.push({ query: routeQuery })\n        const taskInfos = await this.loadOpenTasks(this.params)\n        this.tasks = taskInfos.data\n        this.stats = taskInfos.stats\n        this.isMore = taskInfos.is_more\n      } catch (error) {\n        this.isLoadingError = true\n        console.error(error)\n      }\n      this.isLoading = false\n    },\n\n    loadMore() {\n      this.isMoreLoading = true\n      this.page = (this.page || 1) + 1\n      const params = {\n        ...this.params,\n        page: this.page\n      }\n      this.loadOpenTasks(params)\n        .then(taskInfos => {\n          this.tasks = this.tasks.concat(taskInfos.data)\n          this.isMore = taskInfos.is_more\n          this.isMoreLoading = false\n        })\n        .catch(error => {\n          this.isMoreLoading = false\n          this.isMoreLoadingError = true\n          console.error(error)\n        })\n    },\n\n    taskClicked(task) {\n      this.$router.push({ name: 'Task', params: { id: task.id } })\n    }\n  },\n\n  watch: {\n    filters: {\n      handler() {\n        this.reload()\n      },\n      deep: true\n    },\n    'filters.person': {\n      handler() {\n        this.reload()\n      },\n      deep: true\n    }\n  },\n\n  socket: {\n    events: {\n      'task:update'(eventData) {\n        const task = this.tasks.find(t => t.id === eventData.task_id)\n        if (task) {\n          this.loadTask({ taskId: task.id }).then(updatedTask => {\n            Object.assign(task, updatedTask)\n          })\n        }\n      }\n    }\n  },\n\n  head() {\n    return { title: `${this.$t('tasks.all_tasks')} - Kitsu` }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.all-tasks {\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  padding: 4em 1em 1em 1em;\n  color: var(--text);\n}\n\n.person-label {\n  margin-top: 0px;\n}\n</style>\n"],"names":["_sfc_main","domMixin","formatListMixin","EntityThumbnail","PeopleAvatarWithMenu","ProductionNameCell","Spinner","TableInfo","TaskTypeCell","ValidationCell","mapGetters","total","task","mapActions","date","moment","event","index","isSelected","isManySelection","scrollPosition","_hoisted_1","_hoisted_3","_hoisted_5","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_openBlock","_createElementBlock","_createElementVNode","_hoisted_2","_hoisted_4","_ctx","_hoisted_6","_toDisplayString","_hoisted_8","_Fragment","_renderList","$props","_normalizeClass","$data","$options","$event","_createVNode","_component_production_name_cell","_component_entity_thumbnail","_component_task_type_cell","_component_validation_cell","personId","_createBlock","_component_people_avatar_with_menu","person","_hoisted_21","_component_spinner","_createCommentVNode","_component_table_info","_hoisted_22","max","stat","_normalizeStyle","AllTaskList","ComboboxDepartment","ComboboxProduction","ComboboxTaskType","ComboboxStatus","ComboboxStudio","PageLayout","PeopleField","StatusStats","TaskInfo","routeQuery","productionId","statuses","status","types","type","production","sortPeople","a","b","taskStatus","list","key","taskInfos","error","params","eventData","t","updatedTask","_component_page_layout","_component_combobox_production","_cache","_component_combobox_status","_component_combobox_task_type","_component_combobox_studio","_component_combobox_department","_component_people_field","_component_all_task_list","_component_task_info","_withCtx","_component_status_stats"],"mappings":"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"}