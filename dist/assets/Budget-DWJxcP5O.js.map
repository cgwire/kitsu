{"version":3,"file":"Budget-DWJxcP5O.js","sources":["../../src/components/mixins/page.js","../../src/components/pages/budget/BudgetHardwareItemRow.vue","../../src/components/pages/budget/BudgetSoftwareLicenseRow.vue","../../src/components/pages/budget/BudgetPersonRow.vue","../../src/components/pages/budget/BudgetTotalRow.vue","../../src/components/pages/budget/BudgetDepartmentRow.vue","../../src/components/pages/budget/BudgetList.vue","../../src/components/modals/EditBudgetModal.vue","../../src/components/widgets/MonthField.vue","../../src/components/modals/EditBudgetEntryModal.vue","../../src/components/pages/budget/Budget.vue"],"sourcesContent":["/*\n * This mixin is used to format the page title based on the current context.\n */\nimport { mapGetters } from 'vuex'\n\nexport const pageMixin = {\n  computed: {\n    ...mapGetters(['currentProduction, currentEpisode, isTVShow'])\n  },\n\n  methods: {},\n\n  head() {\n    if (this.currentProduction) {\n      if (this.isTVSHow && this.currentEpisode) {\n        return {\n          title:\n            `${this.currentProduction.name} - ` +\n            `${this.currentEpisode.name} | {this.pageTitle} - Kitsu`\n        }\n      } else {\n        return {\n          title: `${this.currentProduction.name} | ${this.pageTitle} - Kitsu`\n        }\n      }\n    } else {\n      return {\n        title: `${this.pageTitle} - Kitsu`\n      }\n    }\n  }\n}\n","<template>\n  <tr class=\"datatable-row\">\n    <td class=\"datatable-row-header\" colspan=\"3\">\n      {{ $t('hardware_items.title') }}\n    </td>\n    <td></td>\n    <td></td>\n    <template v-if=\"isShowingExpenses\">\n      <td\n        :key=\"'hardware-' + departmentEntry.id + '-' + month\"\n        class=\"costs\"\n        v-for=\"month in monthsBetweenStartAndNow\"\n      >\n        {{\n          convertedExpenses[departmentEntry.id]?.['hardware-items']?.[\n            month.format('YYYY-MM')\n          ]?.toLocaleString()\n        }}\n      </td>\n      <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n        {{ departmentHardwareItemExpense.toLocaleString() }}\n      </td>\n      <td class=\"total-cost\" v-if=\"isShowingExpenses\">\n        {{ departmentHardwareItemDonePrevisional.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost gap\"\n        :class=\"{\n          positive:\n            departmentHardwareItemDonePrevisional >\n            departmentHardwareItemExpense,\n          negative:\n            departmentHardwareItemDonePrevisional <\n            departmentHardwareItemExpense\n        }\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{\n          (\n            departmentHardwareItemDonePrevisional -\n            departmentHardwareItemExpense\n          ).toLocaleString()\n        }}\n      </td>\n    </template>\n    <td\n      :key=\"'hardware-' + departmentEntry.id + '-' + month\"\n      class=\"costs\"\n      v-for=\"month in isShowingExpenses\n        ? monthsBetweenNowAndEnd\n        : monthsBetweenProductionDates\"\n    >\n      {{\n        hardwareItemsCosts[departmentEntry.id]?.[month.format('YYYY-MM')] || ''\n      }}\n    </td>\n    <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n      {{ departmentHardwareItemRemainingPrevisional.toLocaleString() }}\n    </td>\n    <td class=\"total-cost expense-and-remaining\" v-if=\"isShowingExpenses\">\n      {{\n        (\n          departmentHardwareItemExpense +\n          departmentHardwareItemRemainingPrevisional\n        ).toLocaleString()\n      }}\n    </td>\n    <td class=\"total-cost\">\n      {{ hardwareItemsCosts[departmentEntry.id]?.total }}\n    </td>\n    <td\n      class=\"total-cost gap\"\n      :class=\"{\n        positive: departmentHardwareItemTotalGap > 0,\n        negative: departmentHardwareItemTotalGap < 0\n      }\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ departmentHardwareItemTotalGap.toLocaleString() }}\n    </td>\n    <td class=\"actions\"></td>\n  </tr>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  departmentEntry: {\n    type: Object,\n    required: true\n  },\n  donePrevisional: {\n    type: Object,\n    required: true\n  },\n  remainingPrevisional: {\n    type: Object,\n    required: true\n  },\n  isShowingExpenses: {\n    type: Boolean,\n    required: true\n  },\n  monthsBetweenStartAndNow: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenNowAndEnd: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenProductionDates: {\n    type: Array,\n    required: true\n  },\n  convertedExpenses: {\n    type: Object,\n    required: true\n  },\n  hardwareItemsCosts: {\n    type: Object,\n    required: true\n  }\n})\n\nconst departmentHardwareItemExpense = computed(() => {\n  return (\n    props.convertedExpenses[props.departmentEntry.id]?.['hardware-items']\n      ?.total || 0\n  )\n})\n\nconst departmentHardwareItemDonePrevisional = computed(() => {\n  return (\n    props.donePrevisional[props.departmentEntry.id]?.['hardware-items'] || 0\n  )\n})\n\nconst departmentHardwareItemRemainingPrevisional = computed(() => {\n  return (\n    props.remainingPrevisional[props.departmentEntry.id]?.['hardware-items'] ||\n    0\n  )\n})\n\nconst departmentHardwareItemTotalGap = computed(() => {\n  return props.isShowingExpenses\n    ? (props.hardwareItemsCosts[props.departmentEntry.id]?.total || 0) -\n        (departmentHardwareItemExpense.value +\n          departmentHardwareItemRemainingPrevisional.value)\n    : 0\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/components/pages/budget/budget.scss';\n</style>\n","<template>\n  <tr class=\"datatable-row\">\n    <td class=\"datatable-row-header\" colspan=\"3\">\n      {{ $t('software_licenses.title') }}\n    </td>\n    <td></td>\n    <td></td>\n    <template v-if=\"isShowingExpenses\">\n      <td\n        :key=\"'software-' + departmentEntry.id + '-' + month\"\n        class=\"costs\"\n        v-for=\"month in monthsBetweenStartAndNow\"\n      >\n        {{\n          convertedExpenses[departmentEntry.id]?.['software-licenses']?.[\n            month.format('YYYY-MM')\n          ]?.toLocaleString()\n        }}\n      </td>\n      <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n        {{ departmentSoftwareLicenseExpense.toLocaleString() }}\n      </td>\n      <td class=\"total-cost\" v-if=\"isShowingExpenses\">\n        {{ departmentSoftwareLicenseDonePrevisional.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost gap\"\n        :class=\"{\n          positive:\n            departmentSoftwareLicenseDonePrevisional >\n            departmentSoftwareLicenseExpense,\n          negative:\n            departmentSoftwareLicenseDonePrevisional <\n            departmentSoftwareLicenseExpense\n        }\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{\n          (\n            departmentSoftwareLicenseDonePrevisional -\n            departmentSoftwareLicenseExpense\n          ).toLocaleString()\n        }}\n      </td>\n    </template>\n    <td\n      :key=\"'software-' + departmentEntry.id + '-' + month\"\n      class=\"costs\"\n      v-for=\"month in isShowingExpenses\n        ? monthsBetweenNowAndEnd\n        : monthsBetweenProductionDates\"\n    >\n      {{\n        softwareLicensesCosts[departmentEntry.id]?.[month.format('YYYY-MM')] ||\n        ''\n      }}\n    </td>\n    <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n      {{ departmentSoftwareLicenseRemainingPrevisional.toLocaleString() }}\n    </td>\n    <td class=\"total-cost expense-and-remaining\" v-if=\"isShowingExpenses\">\n      {{\n        (\n          departmentSoftwareLicenseExpense +\n          departmentSoftwareLicenseRemainingPrevisional\n        ).toLocaleString()\n      }}\n    </td>\n    <td class=\"total-cost\">\n      {{ softwareLicensesCosts[departmentEntry.id]?.total || '' }}\n    </td>\n    <td\n      class=\"total-cost gap\"\n      :class=\"{\n        positive: departmentSoftwareLicenseTotalGap > 0,\n        negative: departmentSoftwareLicenseTotalGap < 0\n      }\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ departmentSoftwareLicenseTotalGap.toLocaleString() }}\n    </td>\n    <td class=\"actions\"></td>\n  </tr>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  departmentEntry: {\n    type: Object,\n    required: true\n  },\n  isShowingExpenses: {\n    type: Boolean,\n    required: true\n  },\n  donePrevisional: {\n    type: Object,\n    required: true\n  },\n  remainingPrevisional: {\n    type: Object,\n    required: true\n  },\n  monthsBetweenStartAndNow: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenNowAndEnd: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenProductionDates: {\n    type: Array,\n    required: true\n  },\n  convertedExpenses: {\n    type: Object,\n    required: true\n  },\n  softwareLicensesCosts: {\n    type: Object,\n    required: true\n  }\n})\n\nconst departmentSoftwareLicenseExpense = computed(() => {\n  return (\n    props.convertedExpenses[props.departmentEntry.id]?.['software-licenses']\n      ?.total || 0\n  )\n})\n\nconst departmentSoftwareLicenseRemainingPrevisional = computed(() => {\n  return (\n    props.remainingPrevisional[props.departmentEntry.id]?.[\n      'software-licenses'\n    ] || 0\n  )\n})\n\nconst departmentSoftwareLicenseDonePrevisional = computed(() => {\n  return (\n    props.donePrevisional[props.departmentEntry.id]?.['software-licenses'] || 0\n  )\n})\n\nconst departmentSoftwareLicenseTotalGap = computed(() => {\n  return props.isShowingExpenses\n    ? (props.softwareLicensesCosts[props.departmentEntry.id]?.total || 0) -\n        (departmentSoftwareLicenseExpense.value +\n          departmentSoftwareLicenseRemainingPrevisional.value)\n    : 0\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/components/pages/budget/budget.scss';\n</style>\n","<template>\n  <tr class=\"datatable-row\" :key=\"personEntry.id\">\n    <td class=\"position datatable-row-header\">\n      {{ $t('budget.positions.' + (personEntry.position || 'artist')) }}\n    </td>\n    <td class=\"seniority datatable-row-header\">\n      {{ $t('budget.seniorities.' + (personEntry.seniority || 'junior')) }}\n    </td>\n    <td class=\"name datatable-row-header\">\n      <div class=\"flexrow\">\n        <people-avatar\n          class=\"flexrow-item\"\n          :person=\"personMap.get(personEntry.person_id)\"\n          :is-link=\"false\"\n          :font-size=\"12\"\n          :size=\"20\"\n          v-if=\"personEntry.person_id\"\n        />\n        <people-name\n          :person=\"personMap.get(personEntry.person_id)\"\n          v-if=\"personEntry.person_id\"\n        />\n        <span class=\"new-hiring\" v-else>\n          {{ $t('budget.new_hiring') }}\n        </span>\n      </div>\n    </td>\n    <td class=\"base-salary-header text-right entry-data\">\n      {{ (personEntry.monthly_salary || 0).toLocaleString() }}\n    </td>\n    <td class=\"duration-header text-right entry-data\">\n      {{ personEntry.months_duration }}\n    </td>\n\n    <template v-if=\"isShowingExpenses\">\n      <td\n        :key=\"personEntry.id + '-' + month\"\n        class=\"costs\"\n        v-for=\"month in monthsBetweenStartAndNow\"\n      >\n        {{ personExpense?.[month.format('YYYY-MM')]?.toLocaleString() }}\n      </td>\n      <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n        {{ personExpense.total.toLocaleString() }}\n      </td>\n      <td class=\"total-cost\" v-if=\"isShowingExpenses\">\n        {{ personDonePrevisional.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost gap\"\n        :class=\"{\n          positive: personDonePrevisional > personExpense.total,\n          negative: personDonePrevisional < personExpense.total\n        }\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{ (personDonePrevisional - personExpense.total).toLocaleString() }}\n      </td>\n    </template>\n    <td\n      :key=\"personEntry.id + '-' + month\"\n      class=\"month value-cell\"\n      v-for=\"month in isShowingExpenses\n        ? monthsBetweenNowAndEnd\n        : monthsBetweenProductionDates\"\n    >\n      <input\n        class=\"input-editor\"\n        type=\"number\"\n        min=\"0\"\n        step=\"1\"\n        :value=\"getMonthCost(personEntry, month)\"\n        @change=\"\n          $emit('add-person-exception', {\n            personEntry,\n            month,\n            value: $event.target.value\n          })\n        \"\n        v-if=\"personEntry.monthCosts[month.format('YYYY-MM')]\"\n      />\n      <span v-else>&nbsp;</span>\n    </td>\n    <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n      {{ personRemainingPrevisional.toLocaleString() }}\n    </td>\n    <td class=\"total-cost expense-and-remaining\" v-if=\"isShowingExpenses\">\n      {{ (personExpense.total + personRemainingPrevisional).toLocaleString() }}\n    </td>\n    <td class=\"total-cost\">\n      {{ personEntry.total.toLocaleString() }}\n    </td>\n    <td\n      class=\"total-cost gap\"\n      :class=\"{\n        positive: personTotalGap > 0,\n        negative: personTotalGap < 0\n      }\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ personTotalGap.toLocaleString() }}\n    </td>\n    <row-actions-cell\n      @delete-clicked=\"$emit('delete-budget-entry', personEntry)\"\n      @edit-clicked=\"$emit('edit-budget-entry', personEntry)\"\n    />\n  </tr>\n</template>\n\n<script setup>\nimport { computed, defineProps } from 'vue'\n\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport PeopleName from '@/components/widgets/PeopleName.vue'\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\n\ndefineEmits([\n  'delete-budget-entry',\n  'edit-budget-entry',\n  'add-person-exception'\n])\n\nconst props = defineProps({\n  personEntry: {\n    type: Object,\n    required: true\n  },\n  departmentEntry: {\n    type: Object,\n    required: true\n  },\n  isShowingExpenses: {\n    type: Boolean,\n    required: true\n  },\n  monthsBetweenStartAndNow: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenNowAndEnd: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenProductionDates: {\n    type: Array,\n    required: true\n  },\n  convertedExpenses: {\n    type: Object,\n    required: true\n  },\n  personMap: {\n    type: Map,\n    required: true\n  },\n  donePrevisional: {\n    type: Object,\n    required: true\n  },\n  remainingPrevisional: {\n    type: Object,\n    required: true\n  }\n})\n\nconst personDonePrevisional = computed(() => {\n  return (\n    props.donePrevisional[props.departmentEntry.id]?.[\n      props.personEntry.budget_entry_id\n    ] || 0\n  )\n})\n\nconst personRemainingPrevisional = computed(() => {\n  return (\n    props.remainingPrevisional[props.departmentEntry.id]?.[\n      props.personEntry.budget_entry_id\n    ] || 0\n  )\n})\n\nconst personExpense = computed(() => {\n  return (\n    props.convertedExpenses[props.personEntry.department_id]?.[\n      props.personEntry.budget_entry_id\n    ] || { total: 0 }\n  )\n})\n\nconst personTotalGap = computed(() => {\n  return props.isShowingExpenses\n    ? props.personEntry.total -\n        (personExpense.value.total + personRemainingPrevisional.value)\n    : 0\n})\n\n/* It gets the cost of a person for a given month, exceptions are\n * prioritized over the month costs.\n */\nconst getMonthCost = (personEntry, month) => {\n  let monthKey = ''\n  if (typeof month === 'string') {\n    monthKey = month\n  } else {\n    monthKey = month.format('YYYY-MM')\n  }\n  personEntry.exceptions = personEntry.exceptions || {}\n  return (\n    parseInt(personEntry.exceptions[monthKey]) ||\n    parseInt(personEntry.monthCosts[monthKey]) ||\n    0\n  )\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/components/pages/budget/budget.scss';\n</style>\n","<template>\n  <tr class=\"datatable-row\">\n    <td class=\"datatable-row-header total-header\" colspan=\"3\">\n      <div class=\"pa05\">\n        {{ $t('main.total') }}\n      </div>\n    </td>\n    <td class=\"month\"></td>\n    <td class=\"month\"></td>\n    <template v-if=\"isShowingExpenses\">\n      <td :key=\"month\" class=\"month\" v-for=\"month in monthsBetweenStartAndNow\">\n        {{ convertedExpenses[month.format('YYYY-MM')]?.toLocaleString() }}\n      </td>\n      <td class=\"total-cost costs expenses\" v-if=\"isShowingExpenses\">\n        {{ convertedExpenses.total?.toLocaleString() }}\n      </td>\n      <td class=\"total-cost\" v-if=\"isShowingExpenses\">\n        {{ donePrevisional.total?.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost gap\"\n        :class=\"{\n          positive: donePrevisional.total > convertedExpenses.total,\n          negative: donePrevisional.total < convertedExpenses.total\n        }\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{ (donePrevisional.total - convertedExpenses.total).toLocaleString() }}\n      </td>\n    </template>\n\n    <td\n      class=\"month\"\n      :key=\"month\"\n      v-for=\"month in isShowingExpenses\n        ? monthsBetweenNowAndEnd\n        : monthsBetweenProductionDates\"\n    >\n      {{ getTotalMonthCost(month) }}\n    </td>\n\n    <td class=\"total-cost remaining-previsional\" v-if=\"isShowingExpenses\">\n      {{ remainingPrevisional.total?.toLocaleString() }}\n    </td>\n    <td class=\"total-cost expense-and-remaining\" v-if=\"isShowingExpenses\">\n      {{\n        (convertedExpenses.total + remainingPrevisional.total).toLocaleString()\n      }}\n    </td>\n    <td class=\"total-cost\">\n      {{ getTotalMonthCost('total') }}\n    </td>\n    <td\n      class=\"total-cost gap\"\n      :class=\"{\n        positive: totalGap > 0,\n        negative: totalGap < 0\n      }\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ totalGap.toLocaleString() }}\n    </td>\n    <td class=\"actions\"></td>\n  </tr>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  budgetDepartments: {\n    type: Array,\n    default: () => []\n  },\n  totalEntry: {\n    type: Object,\n    required: true\n  },\n  isShowingExpenses: {\n    type: Boolean,\n    required: true\n  },\n  isShowingItems: {\n    type: Boolean,\n    required: true\n  },\n  monthsBetweenStartAndNow: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenNowAndEnd: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenProductionDates: {\n    type: Array,\n    required: true\n  },\n  hardwareItemsCosts: {\n    type: Object,\n    required: true\n  },\n  softwareLicensesCosts: {\n    type: Object,\n    required: true\n  },\n  convertedExpenses: {\n    type: Object,\n    required: true\n  },\n  donePrevisional: {\n    type: Object,\n    required: true\n  },\n  remainingPrevisional: {\n    type: Object,\n    required: true\n  }\n})\n\nconst totalGap = computed(() => {\n  return props.isShowingExpenses\n    ? props.totalEntry.total -\n        (props.convertedExpenses.total + props.remainingPrevisional.total)\n    : 0\n})\n\n/*\n * It returns the total cost for a given month: salaries and items.\n * 'total' is a valid key to get the total cost for all the months.\n */\nconst getTotalMonthCost = month => {\n  const monthKey = month === 'total' ? month : month.format('YYYY-MM')\n  let cost =\n    month === 'total'\n      ? props.totalEntry.total\n      : props.totalEntry.monthCosts[monthKey] || 0\n  if (props.isShowingItems) {\n    cost += props.budgetDepartments.reduce((acc, departmentEntry) => {\n      return (\n        acc +\n        (props.hardwareItemsCosts[departmentEntry.id]?.[monthKey] || 0) +\n        (props.softwareLicensesCosts[departmentEntry.id]?.[monthKey] || 0)\n      )\n    }, 0)\n  }\n  return cost ? cost.toLocaleString() : ''\n}\n</script>\n\n<style lang=\"scss\" scoped>\nth.month {\n  text-align: center;\n  max-width: 80px;\n  min-width: 80px;\n  width: 80px;\n}\n\ntd.month {\n  text-align: right;\n  max-width: 80px;\n  min-width: 80px;\n  width: 80px;\n}\n\n.total-cost {\n  font-weight: bold;\n  text-align: right;\n  max-width: 100px;\n  width: 100px;\n}\n</style>\n","<template>\n  <tr\n    class=\"datatable-row department-row pointer\"\n    @click=\"toggleDepartment(departmentEntry.id)\"\n  >\n    <td class=\"datatable-row-header strong department-header\" colspan=\"3\">\n      <div\n        class=\"flexrow department-header-content\"\n        :style=\"getDepartmentStyle(departmentEntry.id, '99')\"\n      >\n        <chevron-right-icon\n          class=\"flexrow-item\"\n          v-if=\"collapsedDepartments[departmentEntry.id]\"\n        />\n        <chevron-down-icon class=\"flexrow-item\" v-else />\n        <div class=\"flexrow-item\">\n          {{ departmentMap.get(departmentEntry.id).name }}\n        </div>\n      </div>\n    </td>\n    <td\n      class=\"base-salary-header text-right month\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n    ></td>\n    <td\n      class=\"duration-header text-right month\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n    ></td>\n\n    <template v-if=\"isShowingExpenses\">\n      <td\n        :key=\"month\"\n        class=\"month\"\n        :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n        v-for=\"month in monthsBetweenStartAndNow\"\n      >\n        {{ departmentExpense?.[month.format('YYYY-MM')]?.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost remaining-previsional\"\n        :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{ departmentExpense.total.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost\"\n        :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{ departmentDonePrevisional.toLocaleString() }}\n      </td>\n      <td\n        class=\"total-cost gap\"\n        :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n        :class=\"{\n          positive: departmentDonePrevisional > departmentExpense.total,\n          negative: departmentDonePrevisional < departmentExpense.total\n        }\"\n        v-if=\"isShowingExpenses\"\n      >\n        {{\n          (departmentDonePrevisional - departmentExpense.total).toLocaleString()\n        }}\n      </td>\n    </template>\n    <td\n      :key=\"departmentEntry.id + '-' + month\"\n      class=\"month\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n      v-for=\"month in isShowingExpenses\n        ? monthsBetweenNowAndEnd\n        : monthsBetweenProductionDates\"\n    >\n      {{ getDepartmentMonthCost(departmentEntry, month) || '' }}\n    </td>\n    <td\n      class=\"total-cost remaining-previsional\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ departmentRemainingPrevisional.toLocaleString() }}\n    </td>\n    <td\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n      class=\"total-cost expense-and-remaining\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{\n        (\n          departmentExpense.total + departmentRemainingPrevisional\n        ).toLocaleString()\n      }}\n    </td>\n    <td\n      class=\"total-cost\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n    >\n      {{ getDepartmentMonthCost(departmentEntry, 'total') || '' }}\n    </td>\n    <td\n      class=\"total-cost gap\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n      :class=\"{\n        positive: departmentTotalGap > 0,\n        negative: departmentTotalGap < 0\n      }\"\n      v-if=\"isShowingExpenses\"\n    >\n      {{ departmentTotalGap.toLocaleString() }}\n    </td>\n    <td\n      class=\"actions\"\n      :style=\"getDepartmentStyle(departmentEntry.id, '33')\"\n    ></td>\n  </tr>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nimport { ChevronDownIcon, ChevronRightIcon } from 'lucide-vue-next'\n\nconst props = defineProps({\n  departmentEntry: {\n    type: Object,\n    required: true\n  },\n  isShowingExpenses: {\n    type: Boolean,\n    required: true\n  },\n  isShowingItems: {\n    type: Boolean,\n    required: true\n  },\n  donePrevisional: {\n    type: Object,\n    required: true\n  },\n  remainingPrevisional: {\n    type: Object,\n    required: true\n  },\n  monthsBetweenStartAndNow: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenNowAndEnd: {\n    type: Array,\n    required: true\n  },\n  monthsBetweenProductionDates: {\n    type: Array,\n    required: true\n  },\n  convertedExpenses: {\n    type: Object,\n    required: true\n  },\n  hardwareItemsCosts: {\n    type: Object,\n    required: true\n  },\n  softwareLicensesCosts: {\n    type: Object,\n    required: true\n  },\n  collapsedDepartments: {\n    type: Object,\n    required: true\n  },\n  departmentMap: {\n    type: Object,\n    required: true\n  },\n  toggleDepartment: {\n    type: Function,\n    required: true\n  }\n})\n\nconst departmentExpense = computed(() => {\n  return props.convertedExpenses[props.departmentEntry.id] || { total: 0 }\n})\n\nconst departmentDonePrevisional = computed(() => {\n  return props.donePrevisional[props.departmentEntry.id]?.total || 0\n})\n\nconst departmentRemainingPrevisional = computed(() => {\n  return props.remainingPrevisional[props.departmentEntry.id]?.total || 0\n})\n\nconst departmentTotalGap = computed(() => {\n  return props.isShowingExpenses\n    ? props.departmentEntry.total -\n        (departmentExpense.value.total + departmentRemainingPrevisional.value)\n    : 0\n})\n\n/* It sets the background with the color of the department. */\nconst getDepartmentStyle = (departmentId, opacity) => {\n  return {\n    backgroundColor: props.departmentMap.get(departmentId).color + opacity\n  }\n}\n\n/*\n * It returns the total cost for a given department and a given month:\n * salaries and items.\n * 'total' is a valid key to get the total cost for all the months.\n */\nconst getDepartmentMonthCost = (departmentEntry, month) => {\n  const monthKey = month === 'total' ? month : month.format('YYYY-MM')\n  let cost =\n    month === 'total'\n      ? departmentEntry.total\n      : departmentEntry.monthCosts[monthKey] || 0\n  if (props.isShowingItems) {\n    cost += props.hardwareItemsCosts[departmentEntry.id]?.[monthKey] || 0\n    cost += props.softwareLicensesCosts[departmentEntry.id]?.[monthKey] || 0\n  }\n  return cost ? cost.toLocaleString() : ''\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@use '@/components/pages/budget/budget.scss';\n\n.department-header {\n  max-width: 400px;\n  min-width: 400px;\n  position: sticky;\n  padding: 0;\n}\n\n.department-header-content {\n  color: $white;\n  height: 100%;\n  min-width: 400px;\n  max-width: 400px;\n  padding: 0.6em 1em;\n}\n</style>\n","<template>\n  <div class=\"budget-data\">\n    <div class=\"has-text-centered mt2\" v-if=\"isLoading\">\n      <spinner />\n    </div>\n\n    <div class=\"flexrow mt2\" v-else-if=\"isError\">\n      <p class=\"list-error\">\n        {{ $t('budget.budget_entries_error') }}\n      </p>\n    </div>\n\n    <div class=\"mt2\" v-else-if=\"budgetDepartments.length === 0\">\n      <p class=\"has-text-centered mt1\">\n        {{ $t('budget.no_budget_entries_found') }}\n      </p>\n      <p class=\"has-text-centered mt1\">\n        <button-simple\n          :text=\"$t('budget.add_entry')\"\n          @click=\"$emit('add-budget-entry')\"\n        />\n      </p>\n    </div>\n\n    <div class=\"data-list filler\" v-else>\n      <div ref=\"body\" class=\"datatable-wrapper flexcolumn filler\">\n        <table class=\"datatable\">\n          <budget-list-header\n            :is-showing-expenses=\"isShowingExpenses\"\n            :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n            :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n            :months-between-production-dates=\"monthsBetweenProductionDates\"\n            @add-budget-entry=\"$emit('add-budget-entry')\"\n          />\n          <tbody\n            class=\"datatable-body\"\n            @mousedown=\"startBrowsing\"\n            @touchstart=\"startBrowsing\"\n          >\n            <budget-total-row\n              :budget-departments=\"budgetDepartments\"\n              :total-entry=\"totalEntry\"\n              :is-showing-expenses=\"isShowingExpenses\"\n              :is-showing-items=\"isShowingItems\"\n              :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n              :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n              :months-between-production-dates=\"monthsBetweenProductionDates\"\n              :converted-expenses=\"convertedExpenses\"\n              :hardware-items-costs=\"hardwareItemsCosts\"\n              :software-licenses-costs=\"softwareLicensesCosts\"\n              :done-previsional=\"doneSubset\"\n              :remaining-previsional=\"remainingPrevisional\"\n            />\n\n            <template\n              v-for=\"departmentEntry in extendedBudgetDepartments\"\n              :key=\"departmentEntry.id\"\n            >\n              <budget-department-row\n                :department-entry=\"departmentEntry\"\n                :is-showing-expenses=\"isShowingExpenses\"\n                :is-showing-items=\"isShowingItems\"\n                :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n                :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n                :months-between-production-dates=\"monthsBetweenProductionDates\"\n                :converted-expenses=\"convertedExpenses\"\n                :hardware-items-costs=\"hardwareItemsCosts\"\n                :software-licenses-costs=\"softwareLicensesCosts\"\n                :collapsed-departments=\"collapsedDepartments\"\n                :department-map=\"departmentMap\"\n                :done-previsional=\"doneSubset\"\n                :remaining-previsional=\"remainingPrevisional\"\n                :toggle-department=\"toggleDepartment\"\n              />\n\n              <template v-if=\"!collapsedDepartments[departmentEntry.id]\">\n                <budget-hardware-item-row\n                  :key=\"departmentEntry.id\"\n                  :department-entry=\"departmentEntry\"\n                  :is-showing-expenses=\"isShowingExpenses\"\n                  :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n                  :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n                  :months-between-production-dates=\"\n                    monthsBetweenProductionDates\n                  \"\n                  :converted-expenses=\"convertedExpenses\"\n                  :hardware-items-costs=\"hardwareItemsCosts\"\n                  :done-previsional=\"doneSubset\"\n                  :remaining-previsional=\"remainingPrevisional\"\n                  v-if=\"isShowingItems\"\n                />\n\n                <budget-software-license-row\n                  :key=\"departmentEntry.id\"\n                  :department-entry=\"departmentEntry\"\n                  :is-showing-expenses=\"isShowingExpenses\"\n                  :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n                  :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n                  :months-between-production-dates=\"\n                    monthsBetweenProductionDates\n                  \"\n                  :converted-expenses=\"convertedExpenses\"\n                  :software-licenses-costs=\"softwareLicensesCosts\"\n                  :done-previsional=\"doneSubset\"\n                  :remaining-previsional=\"remainingPrevisional\"\n                  v-if=\"isShowingItems\"\n                />\n\n                <budget-person-row\n                  :key=\"personEntry.id\"\n                  :department-entry=\"departmentEntry\"\n                  :person-entry=\"personEntry\"\n                  :is-showing-expenses=\"isShowingExpenses\"\n                  :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n                  :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n                  :months-between-production-dates=\"\n                    monthsBetweenProductionDates\n                  \"\n                  :converted-expenses=\"convertedExpenses\"\n                  :person-map=\"personMap\"\n                  :done-previsional=\"doneSubset\"\n                  :remaining-previsional=\"remainingPrevisional\"\n                  @delete-budget-entry=\"\n                    $emit('delete-budget-entry', personEntry)\n                  \"\n                  @edit-budget-entry=\"$emit('edit-budget-entry', personEntry)\"\n                  @add-person-exception=\"addPersonException($event)\"\n                  v-for=\"personEntry in departmentEntry.persons\"\n                />\n              </template>\n            </template>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { domMixin } from '@/components/mixins/dom'\nimport { grabListMixin } from '@/components/mixins/grablist'\n\nimport preferences from '@/lib/preferences'\n\nimport BudgetListHeader from '@/components/pages/budget/BudgetListHeader.vue'\nimport BudgetHardwareItemRow from '@/components/pages/budget/BudgetHardwareItemRow.vue'\nimport BudgetSoftwareLicenseRow from '@/components/pages/budget/BudgetSoftwareLicenseRow.vue'\nimport BudgetPersonRow from '@/components/pages/budget/BudgetPersonRow.vue'\nimport BudgetTotalRow from '@/components/pages/budget/BudgetTotalRow.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport BudgetDepartmentRow from '@/components/pages/budget/BudgetDepartmentRow.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\n\nexport default {\n  name: 'budget-list',\n\n  mixins: [domMixin, grabListMixin],\n\n  emits: ['add-budget-entry', 'delete-budget-entry', 'edit-budget-entry'],\n\n  components: {\n    BudgetListHeader,\n    BudgetPersonRow,\n    BudgetHardwareItemRow,\n    BudgetSoftwareLicenseRow,\n    BudgetTotalRow,\n    BudgetDepartmentRow,\n    ButtonSimple,\n    Spinner\n  },\n\n  props: {\n    budgetDepartments: {\n      type: Array,\n      default: () => []\n    },\n    currentBudget: {\n      type: Object,\n      default: () => {}\n    },\n    expenses: {\n      type: Object,\n      default: () => {}\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isShowingExpenses: {\n      type: Boolean,\n      default: false\n    },\n    isShowingItems: {\n      type: Boolean,\n      default: false\n    },\n    linkedHardwareItems: {\n      type: Object,\n      required: true\n    },\n    linkedSoftwareLicenses: {\n      type: Object,\n      required: true\n    },\n    monthsBetweenStartAndNow: {\n      type: Array,\n      default: () => []\n    },\n    monthsBetweenNowAndEnd: {\n      type: Array,\n      default: () => []\n    },\n    monthsBetweenProductionDates: {\n      type: Array,\n      default: () => []\n    },\n    salaryScale: {\n      type: Object,\n      default: () => {}\n    },\n    totalEntry: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n\n  data() {\n    return {\n      collapsedDepartments: {},\n      domEvents: [\n        ['mousemove', this.onMouseMove],\n        ['touchmove', this.onMouseMove],\n        ['mouseup', this.stopBrowsing],\n        ['mouseleave', this.stopBrowsing],\n        ['touchend', this.stopBrowsing],\n        ['touchcancel', this.stopBrowsing],\n        ['keyup', this.stopBrowsing]\n      ]\n    }\n  },\n\n  mounted() {\n    const key = `budget:collapsed-departments-${this.currentProduction.id}`\n    this.addEvents(this.domEvents)\n    this.collapsedDepartments = preferences.getObjectPreference(key) || {}\n  },\n\n  beforeUnmount() {\n    this.removeEvents(this.domEvents)\n    document.body.style.cursor = 'default'\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'departmentMap',\n      'personMap',\n      'organisation'\n    ]),\n\n    /* It converts the expenses to the budget format where there is an\n     * entry for each department and each person. It also calculates the totals\n     * for each person, department and for all the departments.\n     * It also converts the time spent to a cost.\n     */\n    convertedExpenses() {\n      const convertedExpenses = {}\n      const expenses = this.expenses || {}\n      let total = 0\n      Object.keys(expenses).forEach(departmentId => {\n        let departmentTotal = 0\n        convertedExpenses[departmentId] = {\n          'software-licenses': { total: 0 },\n          'hardware-items': { total: 0 }\n        }\n        const licenses = this.linkedSoftwareLicenses[departmentId] || []\n        const items = this.linkedHardwareItems[departmentId] || []\n        const monthlySoftwareLicensesCosts = licenses.reduce((acc, item) => {\n          return acc + item.monthly_cost\n        }, 0)\n        const monthlyHardwareItemsCosts = items.reduce((acc, item) => {\n          return acc + item.monthly_cost\n        }, 0)\n\n        Object.keys(expenses[departmentId]).forEach(personId => {\n          let personTotal = 0\n          let personTotalWithItems = 0\n\n          const dailyRate = this.getDailyRate(departmentId, personId)\n\n          convertedExpenses[departmentId][personId] = {}\n          Object.keys(expenses[departmentId][personId]).forEach(month => {\n            if (month === 'total') return\n\n            // Salaries\n            const timeSpent = expenses[departmentId][personId][month]\n            const { cost, ratio } = this.convertTimeSpentToCost(\n              dailyRate,\n              timeSpent\n            )\n            convertedExpenses[departmentId][personId][month] = cost\n            if (!convertedExpenses[departmentId][month]) {\n              convertedExpenses[departmentId][month] = 0\n            }\n\n            // Hardware and software\n            let costWithItems = cost\n            if (this.isShowingItems && cost > 0) {\n              if (\n                !convertedExpenses[departmentId]['software-licenses'][month]\n              ) {\n                convertedExpenses[departmentId]['software-licenses'][month] = 0\n              }\n              if (!convertedExpenses[departmentId]['hardware-items'][month]) {\n                convertedExpenses[departmentId]['hardware-items'][month] = 0\n              }\n              const softwareCost = Math.round(\n                monthlySoftwareLicensesCosts * ratio\n              )\n              const hardwareCost = Math.round(monthlyHardwareItemsCosts * ratio)\n              convertedExpenses[departmentId]['software-licenses'][month] +=\n                softwareCost\n              convertedExpenses[departmentId]['software-licenses'].total +=\n                softwareCost\n              convertedExpenses[departmentId]['hardware-items'][month] +=\n                hardwareCost\n              convertedExpenses[departmentId]['hardware-items'].total +=\n                hardwareCost\n              costWithItems += softwareCost + hardwareCost\n            }\n\n            convertedExpenses[departmentId][month] += costWithItems\n            if (!convertedExpenses[month]) {\n              convertedExpenses[month] = 0\n            }\n            convertedExpenses[month] += costWithItems\n            personTotal += cost\n            personTotalWithItems += costWithItems\n          })\n\n          convertedExpenses[departmentId][personId].total = personTotal\n          departmentTotal += personTotalWithItems\n        })\n        convertedExpenses[departmentId].total = departmentTotal\n        total += departmentTotal\n      })\n      convertedExpenses.total = total\n      return convertedExpenses\n    },\n\n    /* It extends the budget departments with the expenses that don't have\n     * equivalent entries in the budget departments. It also adds the new\n     * departments to the budget departments if needed.\n     */\n    extendedBudgetDepartments() {\n      if (!this.isShowingExpenses) return this.budgetDepartments\n\n      const existingDepartments = this.budgetDepartments.reduce(\n        (acc, department) => {\n          acc[department.id] = true\n          return acc\n        },\n        {}\n      )\n\n      const newDepartments = Object.keys(this.expenses)\n        .filter(departmentId => !existingDepartments[departmentId])\n        .map(departmentId => ({\n          id: departmentId,\n          monthCosts: {},\n          total: 0,\n          duration: 0,\n          persons: [],\n          start_date: null\n        }))\n\n      const extendedBudgetDepartments = [\n        ...this.budgetDepartments,\n        ...newDepartments\n      ]\n\n      const existingEntries = extendedBudgetDepartments.reduce(\n        (acc, department) => {\n          department.persons.forEach(entry => {\n            if (!acc[department.id]) {\n              acc[department.id] = {}\n            }\n            acc[department.id][entry.person_id] = true\n          })\n          return acc\n        },\n        {}\n      )\n\n      Object.keys(this.expenses).forEach(departmentId => {\n        if (departmentId === 'total') return\n        Object.keys(this.expenses[departmentId]).forEach(personId => {\n          if (personId === 'total') return\n          if (!existingEntries[departmentId]?.[personId]) {\n            const person = this.personMap.get(personId)\n            extendedBudgetDepartments\n              .find(department => department.id === departmentId)\n              .persons.push({\n                id: null,\n                person_id: personId,\n                budget_entry_id: null,\n                department_id: departmentId,\n                monthCosts: {},\n                position: person.position,\n                seniority: person.seniority,\n                total: 0,\n                months_duration: 0,\n                monthly_salary: 0,\n                daily_salary: person.daily_salary,\n                start_date: null,\n                exceptions: {}\n              })\n          }\n        })\n      })\n\n      return extendedBudgetDepartments\n    },\n\n    remainingPrevisional() {\n      return this.getPrevisionalSubset(this.monthsBetweenNowAndEnd)\n    },\n\n    doneSubset() {\n      return this.getPrevisionalSubset(this.monthsBetweenStartAndNow)\n    },\n\n    hardwareItemsCosts() {\n      return this.getItemCosts(this.linkedHardwareItems)\n    },\n\n    softwareLicensesCosts() {\n      return this.getItemCosts(this.linkedSoftwareLicenses)\n    }\n  },\n\n  methods: {\n    ...mapActions(['updateProductionBudgetEntry']),\n\n    getPrevisionalSubset(months) {\n      const subset = { total: 0 }\n      this.budgetDepartments.forEach(department => {\n        if (!subset[department.id]) {\n          subset[department.id] = { total: 0 }\n        }\n        department.persons.forEach(person => {\n          if (!person.budget_entry_id) {\n            return\n          }\n\n          if (!subset[department.id][person.budget_entry_id]) {\n            subset[department.id][person.budget_entry_id] = 0\n          }\n          let personTotal = 0\n          months.forEach(month => {\n            personTotal += this.getMonthCost(person, month)\n          })\n          subset[department.id][person.budget_entry_id] = personTotal\n          subset[department.id].total += personTotal\n        })\n        if (this.isShowingItems) {\n          let softwareCosts = 0\n          let hardwareCosts = 0\n          months.forEach(month => {\n            softwareCosts +=\n              this.softwareLicensesCosts[department.id][\n                month.format('YYYY-MM')\n              ] || 0\n            hardwareCosts +=\n              this.hardwareItemsCosts[department.id][month.format('YYYY-MM')] ||\n              0\n          })\n          subset[department.id]['software-licenses'] = softwareCosts\n          subset[department.id]['hardware-items'] = hardwareCosts\n          subset[department.id].total += softwareCosts + hardwareCosts\n        }\n        subset.total += subset[department.id].total\n      })\n      return subset\n    },\n    /*\n     * It calculates the cost of the items for each department and each month.\n     * It returns an object with the cost of the items for each department and\n     * each month.\n     */\n    getItemCosts(linkedItems) {\n      const itemCosts = {}\n      this.budgetDepartments.forEach(department => {\n        const items = linkedItems[department.id] || []\n        const monthlyDepartmentCost = items.reduce((acc, item) => {\n          return acc + item.monthly_cost\n        }, 0)\n\n        if (!itemCosts[department.id]) {\n          itemCosts[department.id] = { total: 0 }\n        }\n        this.monthsBetweenProductionDates.forEach(month => {\n          itemCosts[department.id][month.format('YYYY-MM')] = 0\n          department.persons.forEach(person => {\n            const personCost = this.getMonthCost(person, month)\n            if (personCost > 0) {\n              itemCosts[department.id][month.format('YYYY-MM')] +=\n                monthlyDepartmentCost\n              itemCosts[department.id].total += monthlyDepartmentCost\n            }\n          })\n        })\n      })\n      return itemCosts\n    },\n\n    /* It gets the daily rate of a person, and use the salary scale if\n     * no daily rate is available.\n     */\n    getDailyRate(deparmentId, personId) {\n      const person = this.personMap.get(personId)\n      if (!person) return 0\n      const salaryScale =\n        person.seniority && person.position\n          ? this.salaryScale[deparmentId][person.position][person.seniority]\n          : 0\n      return person.daily_salary || salaryScale\n    },\n\n    /* It converts the time spent to days then multiply it with the\n     * given daily rate.\n     */\n    convertTimeSpentToCost(dailyRate, timeSpent) {\n      const days = timeSpent / 60 / this.organisation.hours_by_day\n      const ratio = days / 20\n      return { cost: Math.round(days * dailyRate), ratio }\n    },\n\n    /* It gets the cost of a person for a given month, exceptions are\n     * prioritized over the month costs.\n     */\n    getMonthCost(personEntry, month) {\n      let monthKey = ''\n      if (typeof month === 'string') {\n        monthKey = month\n      } else {\n        monthKey = month.format('YYYY-MM')\n      }\n      personEntry.exceptions = personEntry.exceptions || {}\n      return (\n        parseInt(personEntry.exceptions[monthKey]) ||\n        parseInt(personEntry.monthCosts[monthKey]) ||\n        0\n      )\n    },\n\n    /* It toggles the department visibility and save it to local storage. */\n    toggleDepartment(departmentId) {\n      this.collapsedDepartments[departmentId] =\n        !this.collapsedDepartments[departmentId]\n\n      const key = `budget:collapsed-departments-${this.currentProduction.id}`\n      preferences.setObjectPreference(key, this.collapsedDepartments)\n    },\n\n    /* It sets an salary exception for a person, for a given month. */\n    addPersonException({ personEntry, month, value }) {\n      value = parseInt(value)\n      const exceptions = personEntry.exceptions || {}\n      exceptions[month.format('YYYY-MM')] = value\n      const budgetEntry = {\n        id: personEntry.budget_entry_id,\n        ...personEntry,\n        exceptions\n      }\n      this.updateProductionBudgetEntry({\n        productionId: this.currentProduction.id,\n        budgetId: this.currentBudget.id,\n        budgetEntryId: personEntry.budget_entry_id,\n        budgetEntry\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n  <base-modal :active=\"active\" :title=\"modalTitle\" @cancel=\"$emit('cancel')\">\n    <form @submit.prevent>\n      <div class=\"field\">\n        <label class=\"label\">\n          {{ $t('budget.fields.revision') }}\n        </label>\n        <p class=\"revision-number\">\n          v{{ isEditing ? budgetToEdit.revision : lastRevision + 1 }}\n        </p>\n      </div>\n\n      <text-field\n        ref=\"nameField\"\n        :label=\"$t('budget.fields.name')\"\n        :maxlength=\"30\"\n        v-model=\"form.name\"\n        @enter=\"runConfirmation\"\n        v-focus\n      />\n\n      <combobox\n        :label=\"$t('budget.fields.currency')\"\n        :options=\"currencieOptions\"\n        v-model=\"form.currency\"\n      />\n    </form>\n\n    <modal-footer\n      :error-text=\"$t('budget.create_budget_error')\"\n      :is-error=\"isError\"\n      :is-loading=\"isLoading\"\n      :is-disabled=\"isDisabled\"\n      @confirm=\"runConfirmation\"\n      @cancel=\"$emit('cancel')\"\n    />\n  </base-modal>\n</template>\n\n<script>\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport BaseModal from '@/components/modals/BaseModal.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ModalFooter from '@/components/modals/ModalFooter.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nexport default {\n  name: 'edit-budget-modal',\n\n  mixins: [modalMixin],\n\n  components: {\n    BaseModal,\n    Combobox,\n    ModalFooter,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    budgetToEdit: {\n      type: Object,\n      default: () => {}\n    },\n    lastRevision: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  emits: ['cancel', 'confirm'],\n\n  data() {\n    return {\n      form: {\n        name: '',\n        currency: 'USD'\n      },\n      currencieOptions: [\n        { label: 'USD', value: 'USD' },\n        { label: 'EUR', value: 'EUR' },\n        { label: 'GBP', value: 'GBP' },\n        { label: 'CAD', value: 'CAD' },\n        { label: 'AUD', value: 'AUD' },\n        { label: 'CHF', value: 'CHF' },\n        { label: 'JPY', value: 'JPY' },\n        { label: 'CNY', value: 'CNY' },\n        { label: 'INR', value: 'INR' }\n      ]\n    }\n  },\n\n  computed: {\n    isDisabled() {\n      return this.form.name.length === 0\n    },\n\n    isEditing() {\n      return this.budgetToEdit && this.budgetToEdit.id\n    },\n\n    modalTitle() {\n      return this.isEditing\n        ? this.$t('budget.edit_budget')\n        : this.$t('budget.create_budget')\n    }\n  },\n\n  methods: {\n    runConfirmation() {\n      this.$emit('confirm', this.form)\n    }\n  },\n\n  watch: {\n    active() {\n      if (this.active) {\n        setTimeout(() => {\n          this.$refs.nameField.focus()\n        }, 100)\n      }\n    },\n\n    budgetToEdit() {\n      if (this.budgetToEdit.id) {\n        this.form = {\n          id: this.budgetToEdit.id,\n          name: this.budgetToEdit.name,\n          currency: this.budgetToEdit.currency || 'USD'\n        }\n      } else {\n        this.form = {\n          id: null,\n          name: '',\n          currency: 'USD'\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n\n.revision-number {\n  font-size: 1.4rem;\n  font-weight: bold;\n}\n</style>\n","<template>\n  <div class=\"month-field flexcolumn\">\n    <label class=\"label\" v-if=\"label.length > 0\">\n      {{ label }}\n    </label>\n    <div class=\"date-selector\">\n      <combobox-number :options=\"availableYears\" v-model=\"selectedYear\" />\n      <combobox-number :options=\"availableMonths\" v-model=\"selectedMonth\" />\n    </div>\n  </div>\n</template>\n<script>\nimport moment from 'moment'\nimport { range } from '@/lib/time'\n\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber.vue'\n\nexport default {\n  name: 'month-field',\n\n  emits: ['update:modelValue'],\n  components: {\n    ComboboxNumber\n  },\n\n  props: {\n    label: {\n      type: String,\n      default: ''\n    },\n    minDate: {\n      type: Date,\n      required: true\n    },\n    maxDate: {\n      type: Date,\n      required: true\n    },\n    modelValue: {}\n  },\n\n  data() {\n    return {\n      selectedMonth: null,\n      selectedYear: null,\n      months: []\n    }\n  },\n\n  mounted() {\n    this.months = range(1, 12).map(month => ({\n      value: month - 1,\n      label: moment()\n        .month(month - 1)\n        .format('MMMM')\n    }))\n    if (this.modelValue && this.modelValue.getMonth) {\n      this.selectedMonth = this.modelValue.getMonth()\n      this.selectedYear = this.modelValue.getFullYear()\n    }\n  },\n\n  computed: {\n    availableYears() {\n      const years = []\n      const startYear = this.minDate.getFullYear()\n      const endYear = this.maxDate.getFullYear()\n\n      for (let year = startYear; year <= endYear; year++) {\n        years.push(year)\n      }\n      return years.map(year => ({\n        value: year,\n        label: year\n      }))\n    },\n\n    availableMonths() {\n      const currentYear = this.selectedYear || this.availableYears[0].value\n      const startYear = this.minDate.getFullYear()\n      const endYear = this.maxDate.getFullYear()\n      const minMonth = this.minDate.getMonth()\n      const maxMonth = this.maxDate.getMonth()\n\n      return this.months\n        .filter(month => {\n          if (currentYear === startYear && currentYear === endYear) {\n            // If same year, only show months between start and end\n            return month.value >= minMonth && month.value <= maxMonth\n          } else if (currentYear === startYear) {\n            // If start year, only show months after start date\n            return month.value >= minMonth\n          } else if (currentYear === endYear) {\n            // If end year, only show months before end date\n            return month.value <= maxMonth\n          }\n          return true\n        })\n        .map(month => ({\n          value: month.value,\n          label: month.label\n        }))\n    }\n  },\n\n  watch: {\n    modelValue() {\n      this.$options.silent = true\n      if (this.modelValue && this.modelValue.getMonth) {\n        this.selectedMonth = this.modelValue.getMonth()\n        this.selectedYear = this.modelValue.getFullYear()\n      }\n      this.$nextTick(() => {\n        this.$options.silent = false\n      })\n    },\n\n    selectedMonth(newMonth) {\n      if (this.$options.silent) return\n      const date = moment(new Date(this.selectedYear, newMonth, 1, 0, 0, 0, 0))\n      this.$emit('update:modelValue', date.startOf('month').toDate())\n    },\n\n    selectedYear(newYear) {\n      if (this.$options.silent) return\n      this.$nextTick(() => {\n        this.selectedMonth = this.availableMonths[0].value\n        const date = moment(\n          new Date(newYear, this.selectedMonth, 1, 0, 0, 0, 0)\n        )\n        this.$emit('update:modelValue', date.startOf('month').toDate())\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.date-selector {\n  display: flex;\n  gap: 1rem;\n}\n</style>\n","<template>\n  <base-modal\n    :active=\"active\"\n    :title=\"isEditing ? $t('budget.edit_budget_entry') : $t('budget.add_entry')\"\n    @cancel=\"$emit('cancel')\"\n  >\n    <form @submit.prevent>\n      <combobox-department\n        ref=\"departmentField\"\n        :label=\"$t('budget.fields.department')\"\n        v-model=\"form.department_id\"\n        @enter=\"runConfirmation\"\n        v-focus\n      />\n\n      <people-field\n        class=\"mt2\"\n        :label=\"$t('budget.fields.person')\"\n        :people=\"departmentPeople\"\n        @select=\"onPersonChanged\"\n        @enter=\"runConfirmation\"\n        v-model=\"form.person\"\n      />\n\n      <combobox\n        class=\"mt2\"\n        :label=\"$t('budget.fields.position')\"\n        :options=\"positionOptions\"\n        locale-key-prefix=\"people.position.\"\n        v-model=\"form.position\"\n        @enter=\"runConfirmation\"\n      />\n\n      <combobox\n        class=\"mt2\"\n        :label=\"$t('budget.fields.seniority')\"\n        :options=\"seniorityOptions\"\n        locale-key-prefix=\"people.seniority.\"\n        v-model=\"form.seniority\"\n        @enter=\"runConfirmation\"\n      />\n\n      <div class=\"flexrow\">\n        <month-field\n          class=\"mr1\"\n          :label=\"$t('budget.fields.start_date')\"\n          :min-date=\"projectStartDate\"\n          :max-date=\"projectEndDate\"\n          v-model=\"form.start_date\"\n        />\n\n        <text-field\n          class=\"month-duration\"\n          type=\"number\"\n          :min=\"1\"\n          :max=\"maxDuration\"\n          :label=\"$t('budget.fields.months_duration')\"\n          v-model=\"form.months_duration\"\n          @enter=\"runConfirmation\"\n        />\n\n        <text-field\n          class=\"month-duration\"\n          type=\"number\"\n          :min=\"0\"\n          :label=\"$t('budget.fields.daily_salary')\"\n          v-model=\"form.daily_salary\"\n          @enter=\"runConfirmation\"\n        />\n      </div>\n      <div class=\"mt0\">\n        <span class=\"salary-label\">{{ $t('budget.fields.start_date') }}</span>\n        <span class=\"salary-value\">{{\n          formatDate(form.start_date).substring(0, 7)\n        }}</span>\n        <br />\n        <span class=\"salary-label\">{{ $t('budget.fields.end_date') }}</span>\n        <span class=\"salary-value\">{{ endMonth }}</span>\n        <br />\n        <span class=\"salary-label\">\n          {{ $t('budget.fields.monthly_salary') }}\n        </span>\n        <span class=\"salary-value\">{{ monthlySalary }}</span>\n        <br />\n        <span class=\"salary-label\">{{ $t('budget.fields.total_salary') }}</span>\n        <span class=\"salary-value\">{{ totalSalary }}</span>\n      </div>\n    </form>\n\n    <modal-footer\n      :error-text=\"$t('budget.create_budget_error')\"\n      :is-error=\"isError\"\n      :is-loading=\"isLoading\"\n      :is-disabled=\"isDisabled\"\n      @confirm=\"runConfirmation\"\n      @cancel=\"$emit('cancel')\"\n    />\n  </base-modal>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { mapGetters } from 'vuex'\n\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport { parseSimpleDate, formatSimpleDate } from '@/lib/time'\n\nimport BaseModal from '@/components/modals/BaseModal.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment.vue'\nimport ModalFooter from '@/components/modals/ModalFooter.vue'\nimport MonthField from '@/components/widgets/MonthField.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nexport default {\n  name: 'edit-budget-entry-modal',\n\n  mixins: [modalMixin],\n\n  components: {\n    BaseModal,\n    Combobox,\n    ComboboxDepartment,\n    ModalFooter,\n    MonthField,\n    PeopleField,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    budgetEntryToEdit: {\n      type: Object,\n      default: () => {}\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    salaryScale: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  emits: ['cancel', 'confirm'],\n\n  data() {\n    return {\n      form: {\n        department_id: '',\n        person: null,\n        position: 'artist',\n        seniority: 'junior',\n        start_date: null,\n        months_duration: 1\n      },\n      positionOptions: [\n        { label: 'artist', value: 'artist' },\n        { label: 'supervisor', value: 'supervisor' },\n        { label: 'lead', value: 'lead' }\n      ],\n      refreshKeys: {\n        endMonth: 0\n      },\n      seniorityOptions: [\n        { label: 'junior', value: 'junior' },\n        { label: 'mid', value: 'mid' },\n        { label: 'senior', value: 'senior' }\n      ]\n    }\n  },\n\n  mounted() {\n    this.resetForm()\n  },\n\n  computed: {\n    ...mapGetters(['activePeople', 'currentProduction', 'personMap']),\n\n    isDisabled() {\n      return !this.form.department_id || this.form.months_duration < 1\n    },\n\n    isEditing() {\n      return this.budgetEntryToEdit && this.budgetEntryToEdit.id\n    },\n\n    projectStartDate() {\n      return parseSimpleDate(this.currentProduction.start_date).toDate()\n    },\n\n    projectEndDate() {\n      return parseSimpleDate(this.currentProduction.end_date).toDate()\n    },\n\n    endMonth() {\n      this.refreshKeys.endMonth\n      const startDate = parseSimpleDate(this.form.start_date)\n      const projectEndDate = parseSimpleDate(this.currentProduction.end_date)\n      let endDate = startDate.add(this.form.months_duration, 'months')\n      endDate = moment.min(endDate, projectEndDate)\n      return endDate.format('YYYY-MM')\n    },\n\n    dailySalary() {\n      if (!this.form.department_id) {\n        return 0\n      } else if (!this.form.person || !this.form.person.daily_salary) {\n        const departmentScale = this.salaryScale[this.form.department_id]\n        return departmentScale[this.form.position || 'artist'][\n          this.form.seniority || 'junior'\n        ].salary\n      } else {\n        return this.form.person.daily_salary\n      }\n    },\n\n    monthlySalary() {\n      return this.dailySalary * 20\n    },\n\n    totalSalary() {\n      if (!this.form.department_id) {\n        return 0\n      } else {\n        const duration = Math.min(this.form.months_duration, this.maxDuration)\n        return this.monthlySalary * duration\n      }\n    },\n\n    maxDuration() {\n      const startDate = parseSimpleDate(this.form.start_date)\n      const projectEndDate = parseSimpleDate(\n        this.currentProduction.end_date\n      ).endOf('month')\n      const maxDuration = projectEndDate.diff(startDate, 'months')\n      return maxDuration > 0 ? maxDuration : 1\n    },\n\n    departmentPeople() {\n      if (this.form.department_id) {\n        return this.activePeople.filter(person =>\n          person.departments.includes(this.form.department_id)\n        )\n      } else {\n        return this.activePeople\n      }\n    }\n  },\n\n  methods: {\n    runConfirmation() {\n      this.$emit('confirm', {\n        ...this.form,\n        person_id: this.form.person?.id,\n        duration: Math.min(this.form.months_duration, this.maxDuration),\n        salary: this.monthlySalary,\n        total_salary: this.totalSalary\n      })\n    },\n\n    onPersonChanged(person) {\n      this.form.position = person?.position || 'artist'\n      this.form.seniority = person?.seniority || 'junior'\n    },\n\n    formatDate(date) {\n      return formatSimpleDate(date)\n    },\n\n    resetForm() {\n      if (this.isEditing) {\n        const person = this.personMap.get(this.budgetEntryToEdit.person_id)\n        Object.assign(this.form, {\n          id: this.budgetEntryToEdit.id,\n          department_id: this.budgetEntryToEdit.department_id,\n          person,\n          position: this.budgetEntryToEdit.position || 'artist',\n          seniority: this.budgetEntryToEdit.seniority || 'junior',\n          start_date: parseSimpleDate(\n            this.budgetEntryToEdit.start_date\n          ).toDate(),\n          months_duration: this.budgetEntryToEdit.months_duration,\n          daily_salary: this.budgetEntryToEdit.daily_salary\n        })\n        this.form.person = person\n        // Needed to bypass watcher\n        this.$nextTick(() => {\n          this.form.daily_salary = this.budgetEntryToEdit.daily_salary\n        })\n      } else {\n        this.form = {\n          id: null,\n          department_id: '',\n          person: null,\n          position: 'artist',\n          seniority: 'junior',\n          start_date: parseSimpleDate(this.currentProduction.start_date)\n            .startOf('month')\n            .toDate(),\n          months_duration: 1,\n          daily_salary: 0\n        }\n      }\n    }\n  },\n\n  watch: {\n    active() {\n      if (this.active) {\n        this.resetForm()\n        setTimeout(() => {\n          this.$refs.departmentField.focus()\n        }, 100)\n      }\n    },\n\n    dailySalary() {\n      this.form.daily_salary = this.dailySalary\n    },\n\n    budgetEntryToEdit() {\n      this.resetForm()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.salary-label {\n  display: inline-block;\n  font-weight: bold;\n  width: 120px;\n}\n\n.salary-value {\n  display: inline-block;\n  text-align: right;\n  width: 80px;\n}\n\n.month-duration {\n  margin-left: 1em;\n  width: 160px;\n}\n</style>\n","<template>\n  <page-layout>\n    <template #main>\n      <div class=\"flexcolumn page\">\n        <budget-header\n          :budget-options=\"budgetOptions\"\n          :budget=\"currentBudget\"\n          :is-loading=\"loading.budgets\"\n          :is-error=\"errors.budgets\"\n          :is-error-expenses=\"errors.expenses\"\n          :is-loading-expenses=\"loading.expenses\"\n          :is-showing-expenses=\"expenses.showing\"\n          :is-showing-items=\"items.showing\"\n          @change-budget=\"onChangeBudget\"\n          @delete-budget=\"onDeleteBudgetClicked\"\n          @edit-budget=\"onEditBudgetClicked\"\n          @export-budget=\"onExportBudgetClicked\"\n          @new-version=\"onNewBudgetVersionClicked\"\n          @toggle-expenses=\"onToggleExpenses\"\n          @toggle-items=\"onToggleItems\"\n        />\n\n        <budget-list\n          :budget-departments=\"budgetDepartments\"\n          :current-budget=\"currentBudget\"\n          :expenses=\"expenses.data\"\n          :is-error=\"errors.entries\"\n          :is-loading=\"loading.entries\"\n          :is-showing-expenses=\"expenses.showing\"\n          :is-showing-items=\"items.showing\"\n          :linked-hardware-items=\"linkedHardwareItems\"\n          :linked-software-licenses=\"linkedSoftwareLicenses\"\n          :months-between-start-and-now=\"monthsBetweenStartAndNow\"\n          :months-between-now-and-end=\"monthsBetweenNowAndEnd\"\n          :months-between-production-dates=\"monthsBetweenProductionDates\"\n          :salary-scale=\"salaryScale\"\n          :total-entry=\"totalEntry\"\n          @add-budget-entry=\"onAddBudgetEntry\"\n          @delete-budget-entry=\"deleteBudgetEntry\"\n          @edit-budget-entry=\"editBudgetEntry\"\n          v-if=\"currentBudget.id\"\n        />\n\n        <edit-budget-modal\n          :active=\"modals.createBudget\"\n          :budget-to-edit=\"budgetToEdit\"\n          :last-revision=\"lastRevision\"\n          :is-loading=\"loading.createBudget || loading.editBudget\"\n          :is-error=\"errors.createBudget || errors.editBudget\"\n          @cancel=\"modals.createBudget = false\"\n          @confirm=\"createBudget\"\n        />\n\n        <edit-budget-entry-modal\n          :active=\"modals.createBudgetEntry\"\n          :budget-entry-to-edit=\"budgetEntryToEdit\"\n          :is-loading=\"loading.createBudgetEntry\"\n          :is-error=\"errors.createBudgetEntry || errors.editBudgetEntry\"\n          :salary-scale=\"salaryScale\"\n          @cancel=\"modals.createBudgetEntry = false\"\n          @confirm=\"confirmCreateBudgetEntry\"\n        />\n\n        <hard-delete-modal\n          :active=\"modals.deleteBudget\"\n          :error-text=\"$t('budget.delete_budget_error')\"\n          :is-loading=\"loading.del\"\n          :is-error=\"errors.deleteBudget\"\n          :lock-text=\"currentBudget?.name\"\n          :text=\"$t('budget.delete_budget_message')\"\n          @cancel=\"modals.deleteBudget = false\"\n          @confirm=\"deleteBudget\"\n        />\n\n        <delete-modal\n          :active=\"modals.deleteBudgetEntry\"\n          :error-text=\"$t('budget.delete_budget_entry_error')\"\n          :is-loading=\"loading.deleteBudgetEntry\"\n          :is-error=\"errors.deleteBudgetEntry\"\n          :text=\"$t('budget.delete_budget_entry_message')\"\n          @cancel=\"modals.deleteBudgetEntry = false\"\n          @confirm=\"confirmDeleteBudgetEntry\"\n        />\n      </div>\n    </template>\n\n    <template #side>\n      <budget-analytics\n        :amount=\"totalEntry.total\"\n        :currency=\"currentBudget.currency\"\n        :budgets=\"budgets\"\n        :budget-departments=\"budgetDepartments\"\n        :budget-entries=\"budgetEntries\"\n        :months-between-production-dates=\"monthsBetweenProductionDates\"\n        :pie-chart-data=\"pieChartData\"\n        :pie-chart-colors=\"pieChartColors\"\n        :column-chart-data=\"columnChartData\"\n      />\n    </template>\n  </page-layout>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport moment from 'moment'\n\nimport { pageMixin } from '@/components/mixins/page'\nimport { parseSimpleDate } from '@/lib/time'\nimport csv from '@/lib/csv'\n\nimport BudgetAnalytics from '@/components/pages/budget/BudgetAnalytics.vue'\nimport BudgetHeader from '@/components/pages/budget/BudgetHeader.vue'\nimport BudgetList from '@/components/pages/budget/BudgetList.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditBudgetModal from '@/components/modals/EditBudgetModal.vue'\nimport EditBudgetEntryModal from '@/components/modals/EditBudgetEntryModal.vue'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal.vue'\nimport PageLayout from '@/components/layouts/PageLayout.vue'\n\nconst helpers = {\n  resetDepartmentTotals(departmentData) {\n    departmentData.total = departmentData.persons.reduce(\n      (acc, person) => acc + person.total,\n      0\n    )\n    departmentData.monthCosts = departmentData.persons.reduce((acc, person) => {\n      Object.keys(person.monthCosts).forEach(month => {\n        acc[month] = (acc[month] || 0) + person.monthCosts[month]\n      })\n      return acc\n    }, {})\n  }\n}\n\nexport default {\n  name: 'budget',\n\n  mixins: [pageMixin],\n\n  components: {\n    BudgetAnalytics,\n    BudgetHeader,\n    BudgetList,\n    DeleteModal,\n    EditBudgetEntryModal,\n    EditBudgetModal,\n    HardDeleteModal,\n    PageLayout\n  },\n\n  data() {\n    return {\n      budgets: [],\n      budgetEntries: [],\n      budgetEntryToEdit: {},\n      budgetToEdit: {},\n      currentBudget: {},\n      linkedHardwareItems: {},\n      linkedSoftwareLicenses: {},\n      errors: {\n        budgets: false,\n        createBudget: false,\n        deleteBudget: false,\n        deleteBudgetEntry: false,\n        editBudget: false,\n        editBudgetEntry: false,\n        entries: false,\n        expenses: false\n      },\n      items: {\n        showing: false\n      },\n      expenses: {\n        data: {},\n        showing: false\n      },\n      loading: {\n        budgets: true,\n        createBudget: false,\n        deleteBudget: false,\n        deleteBudgetEntry: false,\n        editBudget: false,\n        editBudgetEntry: false,\n        entries: true,\n        expenses: false\n      },\n      modals: {\n        createBudget: false,\n        createBudgetEntry: false,\n        deleteBudget: false,\n        deleteBudgetEntry: false\n      },\n      monthsBetweenProductionDates: [],\n      salaryScale: {}\n    }\n  },\n\n  async mounted() {\n    this.pageTitle = this.$t('budget.title')\n    await this.setSalaryScale()\n    await this.loadBudgets()\n    await this.loadBudgetEntries()\n    this.linkedHardwareItems = await this.loadLinkedHardwareItems()\n    this.linkedSoftwareLicenses = await this.loadLinkedSoftwareLicenses()\n    this.resetMonths()\n  },\n\n  computed: {\n    ...mapGetters(['currentProduction', 'departmentMap', 'personMap']),\n\n    monthsBetweenStartAndNow() {\n      return this.getMonthsBetweenDates(\n        this.currentProduction.start_date,\n        moment().format('YYYY-MM-DD')\n      )\n    },\n\n    monthsBetweenNowAndEnd() {\n      return this.getMonthsBetweenDates(\n        moment().add(1, 'month').format('YYYY-MM-DD'),\n        this.currentProduction.end_date\n      )\n    },\n\n    budgetOptions() {\n      return this.budgets.map(budget => ({\n        label: `v${budget.revision} - ${budget.name}`,\n        value: budget\n      }))\n    },\n\n    lastRevision() {\n      return this.budgets?.[0]?.revision || 0\n    },\n\n    budgetDepartments() {\n      const departmentIds = new Set(\n        this.budgetEntries.map(entry => entry.department_id)\n      )\n      const budgetDepartments = []\n      Array.from(departmentIds).map(departmentId => {\n        const departmentEntries = this.budgetEntries.filter(\n          entry => entry.department_id === departmentId\n        )\n        const departmentData = {\n          id: departmentId,\n          monthCosts: {},\n          total: 0,\n          duration: 0,\n          persons: [],\n          start_date: null\n        }\n        departmentEntries.forEach(entry => {\n          const monthlySalary = entry.daily_salary * 20\n          const monthCosts = {}\n          let total = 0\n          entry.exceptions = entry.exceptions || {}\n          for (let i = 0; i < entry.months_duration; i++) {\n            const month = moment(entry.start_date).add(i, 'month')\n            const monthKey = month.format('YYYY-MM')\n            const monthCost = entry.exceptions[monthKey] || monthlySalary\n            monthCosts[monthKey] = monthCost\n            total += monthCost\n          }\n          departmentData.persons.push({\n            id: entry.id,\n            person_id: entry.person_id,\n            budget_entry_id: entry.id,\n            department_id: entry.department_id,\n            monthCosts,\n            position: entry.position,\n            seniority: entry.seniority,\n            total,\n            months_duration: entry.months_duration,\n            monthly_salary: monthlySalary,\n            daily_salary: entry.daily_salary,\n            start_date: entry.start_date,\n            exceptions: entry.exceptions\n          })\n          const startDate = moment(entry.start_date)\n          const departmentStartDate = moment(departmentData.start_date)\n          if (\n            !departmentData.start_date ||\n            startDate.isBefore(departmentStartDate)\n          ) {\n            departmentData.start_date = entry.start_date\n          }\n          departmentData.persons.sort(this.sortDepartmentPersons)\n        })\n        helpers.resetDepartmentTotals(departmentData)\n        budgetDepartments.push(departmentData)\n      })\n      budgetDepartments.sort((a, b) => {\n        const departmentA = this.departmentMap.get(a.id)\n        const departmentB = this.departmentMap.get(b.id)\n        return departmentA.name.localeCompare(departmentB.name)\n      })\n      return budgetDepartments\n    },\n\n    totalEntry() {\n      const total = this.budgetDepartments.reduce(\n        (acc, department) => acc + department.total,\n        0\n      )\n      const monthCosts = this.budgetDepartments.reduce((acc, department) => {\n        Object.keys(department.monthCosts).forEach(month => {\n          acc[month] = (acc[month] || 0) + department.monthCosts[month]\n        })\n        return acc\n      }, {})\n      return {\n        total,\n        monthCosts\n      }\n    },\n\n    pieChartData() {\n      return this.budgetDepartments.map(departmentEntry => {\n        const department = this.departmentMap.get(departmentEntry.id)\n        return [department.name, departmentEntry.total]\n      })\n    },\n\n    pieChartColors() {\n      return this.budgetDepartments.map(departmentEntry => {\n        const department = this.departmentMap.get(departmentEntry.id)\n        return department.color\n      })\n    },\n\n    columnChartData() {\n      return this.monthsBetweenProductionDates.map(monthDate => {\n        const monthKey = monthDate.format('YYYY-MM')\n        const [year, month] = monthKey.split('-')\n        const label = `${month}/${year.slice(2)}`\n        return [label, this.totalEntry.monthCosts[monthKey] || 0]\n      })\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'createProductionBudgetEntry',\n      'createProductionBudget',\n      'deleteProductionBudget',\n      'deleteProductionBudgetEntry',\n      'loadExpenses',\n      'loadLinkedHardwareItems',\n      'loadLinkedSoftwareLicenses',\n      'loadProductionBudget',\n      'loadProductionBudgets',\n      'loadProductionBudgetEntry',\n      'loadProductionBudgetEntries',\n      'loadSalaryScale',\n      'updateProductionBudget',\n      'updateProductionBudgetEntry'\n    ]),\n\n    resetMonths() {\n      this.monthsBetweenProductionDates = this.getMonthsBetweenDates(\n        this.currentProduction.start_date,\n        this.currentProduction.end_date\n      )\n    },\n\n    sortDepartmentPersons(a, b) {\n      const seniorityWeight = {\n        junior: 1,\n        mid: 2,\n        senior: 3\n      }\n      const positionWeight = {\n        artist: 1,\n        lead: 2,\n        supervisor: 3\n      }\n      const seniorityA = seniorityWeight[a.seniority]\n      const seniorityB = seniorityWeight[b.seniority]\n      const positionA = positionWeight[a.position]\n      const positionB = positionWeight[b.position]\n      if (a.person_id === null && b.person_id === null) {\n        if (positionA === positionB) {\n          return seniorityB - seniorityA\n        } else {\n          return positionB - positionA\n        }\n      } else if (a.person_id === null) {\n        return 1\n      } else if (b.person_id === null) {\n        return -1\n      } else {\n        const personA = this.personMap.get(a.person_id)\n        const personB = this.personMap.get(b.person_id)\n        if (personA.name === personB.name) {\n          if (positionA === positionB) {\n            return seniorityB - seniorityA\n          } else {\n            return positionB - positionA\n          }\n        } else {\n          return personA.name.localeCompare(personB.name)\n        }\n      }\n    },\n\n    async setSalaryScale() {\n      this.salaryScale = await this.loadSalaryScale()\n    },\n\n    onChangeBudget(budget) {\n      this.currentBudget = budget\n    },\n\n    onEditBudgetClicked() {\n      this.budgetToEdit = this.currentBudget\n      this.modals.createBudget = true\n    },\n\n    onExportBudgetClicked() {\n      const nameData = [\n        this.$t('budget.title').toLowerCase(),\n        this.currentProduction.name,\n        `v${this.currentBudget.revision}`,\n        this.currentBudget.name,\n        this.currentBudget.currency\n      ]\n      csv.generateBudget(\n        this.$t,\n        this.departmentMap,\n        this.personMap,\n        nameData,\n        this.currentBudget.currency,\n        this.monthsBetweenProductionDates,\n        this.totalEntry,\n        this.budgetDepartments\n      )\n    },\n\n    onNewBudgetVersionClicked() {\n      this.budgetToEdit = {}\n      this.modals.createBudget = true\n    },\n\n    async createBudget(budget) {\n      try {\n        this.loading.createBudget = true\n        this.errors.createBudget = false\n        if (budget.id) {\n          await this.updateProductionBudget({\n            productionId: this.currentProduction.id,\n            budget: {\n              id: this.currentBudget.id,\n              name: budget.name,\n              currency: budget.currency\n            }\n          })\n          const oldBudget = this.budgets.find(\n            b => b.id === this.currentBudget.id\n          )\n          if (oldBudget) {\n            Object.assign(oldBudget, {\n              name: budget.name,\n              currency: budget.currency\n            })\n          }\n        } else {\n          this.loading.createBudget = true\n          const newBudget = await this.createProductionBudget({\n            productionId: this.currentProduction.id,\n            budget\n          })\n          this.budgets.unshift(newBudget)\n          this.currentBudget = newBudget\n        }\n        this.modals.createBudget = false\n      } catch (error) {\n        console.error(error)\n        this.errors.createBudget = true\n      } finally {\n        this.loading.createBudget = false\n      }\n    },\n\n    onDeleteBudgetClicked() {\n      this.errors.deleteBudget = false\n      this.modals.deleteBudget = true\n    },\n\n    async deleteBudget() {\n      this.loading.deleteBudget = true\n      try {\n        const budget = this.currentBudget\n        await this.deleteProductionBudget({\n          productionId: this.currentProduction.id,\n          budgetId: budget.id\n        })\n        this.budgets = this.budgets.filter(b => b.id !== budget.id)\n        this.currentBudget = this.budgets?.[0] || {}\n        this.modals.deleteBudget = false\n      } catch (error) {\n        console.error(error)\n        this.errors.deleteBudget = true\n      } finally {\n        this.loading.deleteBudget = false\n      }\n    },\n\n    onAddBudgetEntry() {\n      this.budgetEntryToEdit = {}\n      this.modals.createBudgetEntry = true\n    },\n\n    async confirmCreateBudgetEntry(budgetEntry) {\n      if (budgetEntry.id) {\n        await this.runRemoteBudgetEntryEdition(budgetEntry)\n      } else {\n        await this.runRemoteBudgetEntryCreation(budgetEntry)\n      }\n    },\n\n    async runRemoteBudgetEntryCreation(budgetEntry) {\n      try {\n        this.loading.createBudgetEntry = true\n        this.errors.createBudgetEntry = false\n        await this.createProductionBudgetEntry({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id,\n          budgetEntry: {\n            ...budgetEntry,\n            person_id: budgetEntry.person ? budgetEntry.person.id : null\n          }\n        })\n        this.modals.createBudgetEntry = false\n      } catch (error) {\n        console.error(error)\n        this.errors.createBudgetEntry = true\n      } finally {\n        this.loading.createBudgetEntry = false\n      }\n    },\n\n    editBudgetEntry(budgetEntry) {\n      this.budgetEntryToEdit = budgetEntry\n      this.modals.createBudgetEntry = true\n    },\n\n    async runRemoteBudgetEntryEdition(budgetEntry) {\n      try {\n        this.loading.editBudgetEntry = true\n        this.errors.editBudgetEntry = false\n        await this.updateProductionBudgetEntry({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id,\n          budgetEntryId: budgetEntry.id,\n          budgetEntry: {\n            id: budgetEntry.id,\n            department_id: budgetEntry.department_id,\n            person_id: budgetEntry.person ? budgetEntry.person.id : null,\n            position: budgetEntry.position,\n            seniority: budgetEntry.seniority,\n            start_date: budgetEntry.start_date,\n            months_duration: budgetEntry.duration,\n            daily_salary: budgetEntry.daily_salary\n          }\n        })\n        this.modals.createBudgetEntry = false\n      } catch (error) {\n        console.error(error)\n        this.errors.editBudgetEntry = true\n      } finally {\n        this.loading.editBudgetEntry = false\n      }\n    },\n\n    afterEditBudgetEntry(budgetEntry) {\n      const oldBudgetEntry = this.budgetEntries.find(\n        b => b.id === budgetEntry.id\n      )\n      if (oldBudgetEntry) {\n        Object.assign(oldBudgetEntry, budgetEntry)\n      }\n    },\n\n    async deleteBudgetEntry(budgetEntry) {\n      this.loading.deleteBudgetEntry = false\n      this.errors.deleteBudgetEntry = false\n      this.modals.deleteBudgetEntry = true\n      this.budgetEntryToDelete = budgetEntry\n    },\n\n    async confirmDeleteBudgetEntry() {\n      this.loading.deleteBudgetEntry = true\n      try {\n        await this.deleteProductionBudgetEntry({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id,\n          budgetEntryId: this.budgetEntryToDelete.budget_entry_id\n        })\n        this.postDeleteBudgetEntry(this.budgetEntryToDelete)\n        this.modals.deleteBudgetEntry = false\n      } catch (error) {\n        console.error(error)\n        this.errors.deleteBudgetEntry = true\n      } finally {\n        this.loading.deleteBudgetEntry = false\n      }\n    },\n\n    postDeleteBudgetEntry(budgetEntry) {\n      this.budgetEntries = this.budgetEntries.filter(\n        entry => entry.id !== budgetEntry.id\n      )\n    },\n\n    async loadBudgets() {\n      try {\n        this.loading.budgets = true\n        this.errors.budgets = false\n        this.budgets = await this.loadProductionBudgets(\n          this.currentProduction.id\n        )\n        this.budgets.sort((a, b) => b.revision - a.revision)\n        this.currentBudget = this.budgets?.[0] || {}\n      } catch (error) {\n        console.error(error)\n        this.errors.budgets = true\n      } finally {\n        this.loading.budgets = false\n      }\n    },\n\n    async loadBudgetEntries() {\n      if (!this.currentBudget || !this.currentBudget.id) return\n      try {\n        this.loading.entries = true\n        this.errors.entries = false\n        this.budgetEntries = await this.loadProductionBudgetEntries({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id\n        })\n      } catch (error) {\n        console.error(error)\n        this.errors.entries = true\n      } finally {\n        this.loading.entries = false\n      }\n    },\n\n    getMonthsBetweenDates(startDate, endDate) {\n      const months = []\n      const current = parseSimpleDate(startDate)\n      const end = parseSimpleDate(endDate)\n      while (current <= end) {\n        months.push(current.clone())\n        current.add(1, 'month')\n      }\n      return months\n    },\n\n    async onToggleExpenses() {\n      if (!this.expenses.showing) {\n        try {\n          this.loading.expenses = true\n          this.errors.expenses = false\n          this.expenses.data = await this.loadExpenses(\n            this.currentProduction.id\n          )\n        } catch (error) {\n          console.error(error)\n          this.errors.expenses = true\n        } finally {\n          this.loading.expenses = false\n        }\n      }\n      this.expenses.showing = !this.expenses.showing\n    },\n\n    onToggleItems() {\n      this.items.showing = !this.items.showing\n    }\n  },\n\n  watch: {\n    currentProduction() {\n      this.loadBudgets()\n      this.resetMonths()\n    },\n\n    currentBudget() {\n      this.loadBudgetEntries()\n    }\n  },\n\n  socket: {\n    events: {\n      async 'budget:create'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        const budget = await this.loadProductionBudget({\n          productionId: this.currentProduction.id,\n          budgetId: data.budget_id\n        })\n        const oldBudget = this.budgets.find(b => b.id === budget.id)\n        if (budget && !oldBudget) {\n          this.budgets.unshift(budget)\n        }\n      },\n\n      async 'budget:update'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        const budget = await this.loadProductionBudget({\n          productionId: this.currentProduction.id,\n          budgetId: data.budget_id\n        })\n        if (budget) {\n          const oldBudget = this.budgets.find(b => b.id === budget.id)\n          if (oldBudget) {\n            Object.assign(oldBudget, {\n              name: budget.name,\n              currency: budget.currency\n            })\n          }\n        }\n      },\n\n      async 'budget:delete'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        const oldBudget = this.budgets.find(b => b.id === data.budget_id)\n        const isCurrentBudgetDeleted = this.currentBudget.id === data.budget_id\n        if (oldBudget) {\n          this.budgets = this.budgets.filter(b => b.id !== data.budget_id)\n          if (isCurrentBudgetDeleted) {\n            this.currentBudget = this.budgets?.[0] || {}\n          }\n        }\n      },\n\n      async 'budget-entry:create'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        if (data.budget_id !== this.currentBudget.id) return\n        const oldBudgetEntry = this.budgetEntries.find(\n          b => b.id === data.budget_entry_id\n        )\n        if (oldBudgetEntry) return\n        const budgetEntry = await this.loadProductionBudgetEntry({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id,\n          budgetEntryId: data.budget_entry_id\n        })\n        this.budgetEntries.push(budgetEntry)\n      },\n\n      async 'budget-entry:update'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        if (data.budget_id !== this.currentBudget.id) return\n        const oldBudgetEntry = this.budgetEntries.find(\n          b => b.id === data.budget_entry_id\n        )\n        if (!oldBudgetEntry) return\n\n        const budgetEntry = await this.loadProductionBudgetEntry({\n          productionId: this.currentProduction.id,\n          budgetId: this.currentBudget.id,\n          budgetEntryId: data.budget_entry_id\n        })\n        this.afterEditBudgetEntry(budgetEntry)\n      },\n\n      async 'budget-entry:delete'(data) {\n        if (data.project_id !== this.currentProduction.id) return\n        if (data.budget_id !== this.currentBudget.id) return\n        const oldBudgetEntry = this.budgetEntries.find(\n          b => b.id === data.budget_entry_id\n        )\n        if (!oldBudgetEntry) return\n        this.postDeleteBudgetEntry({ id: data.budget_entry_id })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.budget-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  max-height: calc(100vh - 140px);\n}\n</style>\n"],"names":["pageMixin","mapGetters","props","__props","departmentHardwareItemExpense","computed","departmentHardwareItemDonePrevisional","departmentHardwareItemRemainingPrevisional","departmentHardwareItemTotalGap","departmentSoftwareLicenseExpense","departmentSoftwareLicenseRemainingPrevisional","departmentSoftwareLicenseDonePrevisional","departmentSoftwareLicenseTotalGap","personDonePrevisional","personRemainingPrevisional","personExpense","personTotalGap","getMonthCost","personEntry","month","monthKey","totalGap","getTotalMonthCost","cost","acc","departmentEntry","departmentExpense","departmentDonePrevisional","departmentRemainingPrevisional","departmentTotalGap","getDepartmentStyle","departmentId","opacity","getDepartmentMonthCost","_sfc_main","domMixin","grabListMixin","BudgetListHeader","BudgetPersonRow","BudgetHardwareItemRow","BudgetSoftwareLicenseRow","BudgetTotalRow","BudgetDepartmentRow","ButtonSimple","Spinner","key","preferences","convertedExpenses","expenses","total","departmentTotal","licenses","items","monthlySoftwareLicensesCosts","item","monthlyHardwareItemsCosts","personId","personTotal","personTotalWithItems","dailyRate","timeSpent","ratio","costWithItems","softwareCost","hardwareCost","existingDepartments","department","newDepartments","extendedBudgetDepartments","existingEntries","entry","person","mapActions","months","subset","softwareCosts","hardwareCosts","linkedItems","itemCosts","monthlyDepartmentCost","deparmentId","salaryScale","days","value","exceptions","budgetEntry","_hoisted_1","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_10","_openBlock","_createElementBlock","$props","_hoisted_2","_createVNode","_component_spinner","_hoisted_3","_createElementVNode","_toDisplayString","_ctx","_hoisted_5","_component_button_simple","_hoisted_8","_hoisted_9","_component_budget_list_header","args","_component_budget_total_row","$options","_Fragment","_renderList","_component_budget_department_row","$data","_createCommentVNode","_createBlock","_component_budget_hardware_item_row","_component_budget_software_license_row","_component_budget_person_row","$event","_cache","modalMixin","BaseModal","Combobox","ModalFooter","TextField","_component_base_modal","_withCtx","_withModifiers","_component_text_field","_component_combobox","_component_modal_footer","ComboboxNumber","range","moment","years","startYear","endYear","year","currentYear","minMonth","maxMonth","newMonth","date","newYear","_component_combobox_number","ComboboxDepartment","MonthField","PeopleField","parseSimpleDate","startDate","projectEndDate","endDate","duration","maxDuration","formatSimpleDate","_component_combobox_department","_component_people_field","_component_month_field","helpers","departmentData","BudgetAnalytics","BudgetHeader","BudgetList","DeleteModal","EditBudgetEntryModal","EditBudgetModal","HardDeleteModal","PageLayout","budget","departmentIds","budgetDepartments","departmentEntries","monthlySalary","monthCosts","i","monthCost","departmentStartDate","a","b","departmentA","departmentB","monthDate","seniorityWeight","positionWeight","seniorityA","seniorityB","positionA","positionB","personA","personB","nameData","csv","oldBudget","newBudget","error","oldBudgetEntry","current","end","data","isCurrentBudgetDeleted","_component_page_layout","_component_budget_header","_component_budget_list","_component_edit_budget_modal","_component_edit_budget_entry_modal","_component_hard_delete_modal","_component_delete_modal","_component_budget_analytics"],"mappings":"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"}