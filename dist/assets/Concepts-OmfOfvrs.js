import{_ as k,m as T,a as F,H as D,T as w,S as x,I as M,J as B,b as I,B as V,aL as A,s as E,y as P,r as i,c as d,o as r,e as l,f as c,k as L,d as u,t as m,F as N,g as Q,n as O,a3 as U,aM as G,M as K,aN as q}from"./index-hnrnHw2o.js";import{C as z}from"./ConceptCard-DQYxecqO.js";const H={name:"concepts",mixins:[E,P],components:{AddPreviewModal:A,ButtonSimple:V,Combobox:I,ComboboxStatus:B,ConceptCard:z,PeopleField:M,SearchField:x,TableInfo:w,TaskInfo:D},data(){return{imgExtensions:q.IMG_EXTENSIONS_STRING,isDraggingFile:!1,loading:{addingConcept:!1,loadingConcepts:!1,savingSearch:!1},errors:{addingConcept:!1,loadingConcepts:!1},filters:{entityType:null,publisher:null,sortBy:"created_at",taskStatusId:null},form:{file:null},modals:{addConcept:!1},conceptSearchQueries:[{id:"filter-test-1",list_type:"concept",name:"test",search_query:"test"}]}},mounted(){},computed:{...F(["assetMap","currentProduction","displayedConcepts","isDarkTheme","isTVShow","personMap","selectedConcepts","taskStatusMap"]),publishers(){const e=new Map;return this.filteredConcepts.forEach(s=>{const n=s.created_by;if(!e.has(n)){const p=this.personMap.get(n);p&&e.set(n,p)}}),K([...e.values()])},currentTask(){return this.currentConcept?.tasks?.[0]},currentConcept(){return this.selectedConcepts.size===1?this.selectedConcepts.values().next().value:null},entityTypeOptions(){const e={label:this.$t("main.all"),value:null},s=["assets","shots","sequences","edits","episodes"].map(n=>({label:this.$t(`${n}.title`),value:n}));return[e].concat(s)},sortByOptions(){return["created_at","updated_at","last_comment_date"].map(e=>({label:e,value:e}))},filteredConcepts(){let e=[...this.displayedConcepts];return this.filters.taskStatusId&&(e=e.filter(s=>s.tasks[0].task_status_id===this.filters.taskStatusId)),this.filters.publisher&&(e=e.filter(s=>s.created_by===this.filters.publisher.id)),this.filters.entityType&&(e=e.filter(s=>s.tags?.some(n=>n.type===this.filters.entityType))),e.sort(G.firstBy(this.filters.sortBy,-1).thenBy("created_at",-1))},searchField(){return this.$refs["search-field"]},taskStatusList(){const e={id:null,color:"#999",name:this.$t("main.all"),short_name:this.$t("main.all")},s=U(Array.from(this.taskStatusMap.values()).filter(n=>n.for_concept));return[e].concat(s)}},methods:{...T(["addSelectedConcepts","addSelectedTask","clearSelectedConcepts","clearSelectedTasks","loadAssets","loadConcepts","newConcepts","setCurrentEpisode"]),setConceptSearch:e=>Promise.resolve(),saveConceptSearch:e=>Promise.resolve(),removeConceptSearch:e=>Promise.resolve(),setSearch(e){this.searchField.setValue(e)},onSearchChange(){const e=this.searchField.getValue()||"";e?.length!==1&&this.setConceptSearch(e),this.setSearchInUrl()},saveSearchQuery(e){this.loading.savingSearch||(this.loading.savingSearch=!0,this.saveConceptSearch(e).catch(console.error).finally(()=>{this.loading.savingSearch=!1}))},removeSearchQuery(e){this.removeConceptSearch(e).catch(s=>{s&&console.error(s)})},async refreshConcepts(){this.loading.loadingConcepts=!0;try{this.isTVShow&&this.setCurrentEpisode("all"),await this.loadAssets({all:!0}),await this.loadConcepts()}catch(e){console.error(e),this.errors.loadingConcepts=!0}finally{this.loading.loadingConcepts=!1}},isSelected(e){return this.selectedConcepts.has(e.id)},onSelectConcept(e,s=!1){const n=s?new Map(this.selectedConcepts):new Map;s&&this.isSelected(e)||!s&&e===this.currentConcept?n.delete(e.id):n.set(e.id,e),this.clearSelectedConcepts(),this.addSelectedConcepts(n),this.clearSelectedTasks(),this.currentTask&&this.addSelectedTask(this.currentTask)},openAddConceptModal(){this.modals.addConcept=!0},closeAddConceptModal(){this.modals.addConcept=!1},async confirmAddConceptModal(e){this.loading.addingConcept=!0;try{await this.newConcepts(e),this.closeAddConceptModal()}catch(s){console.error(s),this.errors.addingConcept=!0}finally{this.loading.addingConcept=!1}},reset(){this.clearSelectedConcepts(),this.clearSelectedTasks(),this.refreshConcepts()},onFileDrop(e){this.pauseEvent(e);const s=e.dataTransfer.files;this.modals.addConcept=!0,this.isDraggingFile=!1,this.$nextTick(()=>{this.$refs["add-preview-modal"].setFiles(s)})},onFileDragover(e){this.pauseEvent(e),this.isDraggingFile=!0},onFileDragLeave(){this.isDraggingFile=!1}},watch:{currentProduction:{immediate:!0,handler(){const e=this.$route.params.production_id;this.currentProduction?.id===e&&this.reset()}}},head(){return{title:`${this.currentProduction.name} | ${this.$t("concepts.title")} - Kitsu`}}},J={class:"fixed-page columns"},R={class:"column main-column"},X={class:"concepts page"},j={class:"page-header"},W={class:"filters"},Y={class:"field"},Z={class:"label"},$={class:"items"},ee=["onClick"],se={key:2,class:"has-text-centered mb1 mt1 empty-concepts"},te={class:"footer mb2"},oe={class:"column side-column"};function ae(e,s,n,p,a,t){i("search-field");const f=i("combobox-status"),C=i("people-field"),g=i("combobox"),_=i("table-info"),y=i("concept-card"),v=i("button-simple"),S=i("add-preview-modal"),b=i("task-info");return r(),d("div",J,[l("div",R,[l("div",X,[l("div",j,[l("div",W,[u("",!0),c(f,{label:e.$t("main.status"),"task-status-list":t.taskStatusList,modelValue:a.filters.taskStatusId,"onUpdate:modelValue":s[0]||(s[0]=o=>a.filters.taskStatusId=o)},null,8,["label","task-status-list","modelValue"]),l("span",Y,[l("label",Z,m(e.$t("concepts.fields.publisher")),1),c(C,{small:"",people:t.publishers,modelValue:a.filters.publisher,"onUpdate:modelValue":s[1]||(s[1]=o=>a.filters.publisher=o)},null,8,["people","modelValue"])]),u("",!0),c(g,{class:"right",label:e.$t("main.sorted_by"),"locale-key-prefix":"concepts.fields.",options:t.sortByOptions,modelValue:a.filters.sortBy,"onUpdate:modelValue":s[3]||(s[3]=o=>a.filters.sortBy=o)},null,8,["label","options","modelValue"])])]),a.loading.loadingConcepts||a.errors.loadingConcepts?(r(),L(_,{key:0,"is-loading":a.loading.loadingConcepts,"is-error":a.errors.loadingConcepts},null,8,["is-loading","is-error"])):t.filteredConcepts?.length?(r(),d("div",{key:1,ref:"concept-list",class:"concept-list pb1",onDragover:s[7]||(s[7]=(...o)=>t.onFileDragover&&t.onFileDragover(...o))},[a.isDraggingFile?(r(),d("div",{key:0,class:"drop-mask",onDrop:s[4]||(s[4]=(...o)=>t.onFileDrop&&t.onFileDrop(...o)),onDragover:s[5]||(s[5]=(...o)=>t.onFileDragover&&t.onFileDragover(...o)),onDragleave:s[6]||(s[6]=(...o)=>t.onFileDragLeave&&t.onFileDragLeave(...o))}," Drop new concepts ",32)):u("",!0),l("ul",$,[(r(!0),d(N,null,Q(t.filteredConcepts,o=>(r(),d("li",{class:O(["item",{"selected-item":t.isSelected(o)}]),key:o.id,onClick:h=>t.onSelectConcept(o,h.ctrlKey||h.metaKey)},[c(y,{concept:o},null,8,["concept"])],10,ee))),128))])],544)):(r(),d("div",se,[l("strong",null,m(e.$t("concepts.empty")),1)])),l("div",te,[c(v,{class:"upload-button",disabled:a.loading.loadingConcepts,text:e.$t("concepts.add_new_concept"),onClick:t.openAddConceptModal},null,8,["disabled","text","onClick"])])])]),c(S,{ref:"add-preview-modal",active:a.modals.addConcept,extensions:a.imgExtensions,"is-concept":"","is-error":a.errors.addingConcept,"is-loading":a.loading.addingConcept,message:"",onCancel:t.closeAddConceptModal,onConfirm:t.confirmAddConceptModal},null,8,["active","extensions","is-error","is-loading","onCancel","onConfirm"]),l("div",oe,[c(b,{"entity-type":"Concept",task:t.currentTask,"with-actions":""},null,8,["task"])])])}const ie=k(H,[["render",ae],["__scopeId","data-v-89b59319"]]);export{ie as default};
//# sourceMappingURL=Concepts-OmfOfvrs.js.map
