{"version":3,"file":"Concepts-cDobJ4IE.js","sources":["../../src/components/pages/Concepts.vue"],"sourcesContent":["<template>\n  <div class=\"fixed-page columns\">\n    <div class=\"column main-column\">\n      <div class=\"concepts page\">\n        <div class=\"page-header\">\n          <div class=\"filters\">\n            <search-field\n              ref=\"search-field\"\n              class=\"field\"\n              :can-save=\"true\"\n              placeholder=\"ex: chara\"\n              @change=\"onSearchChange\"\n              @save=\"saveSearchQuery\"\n              v-if=\"false\"\n            />\n            <combobox-status\n              :label=\"$t('main.status')\"\n              :task-status-list=\"taskStatusList\"\n              v-model=\"filters.taskStatusId\"\n            />\n            <span class=\"field\">\n              <label class=\"label\">\n                {{ $t('concepts.fields.publisher') }}\n              </label>\n              <people-field\n                small\n                :people=\"publishers\"\n                v-model=\"filters.publisher\"\n              />\n            </span>\n            <combobox\n              :label=\"$t('concepts.fields.entity_type')\"\n              :options=\"entityTypeOptions\"\n              v-model=\"filters.entityType\"\n              v-if=\"false\"\n            />\n            <combobox\n              class=\"right\"\n              :label=\"$t('main.sorted_by')\"\n              locale-key-prefix=\"concepts.fields.\"\n              :options=\"sortByOptions\"\n              v-model=\"filters.sortBy\"\n            />\n          </div>\n        </div>\n        <table-info\n          :is-loading=\"loading.loadingConcepts\"\n          :is-error=\"errors.loadingConcepts\"\n          v-if=\"loading.loadingConcepts || errors.loadingConcepts\"\n        />\n        <div\n          ref=\"concept-list\"\n          class=\"concept-list pb1\"\n          @dragover=\"onFileDragover\"\n          v-else-if=\"filteredConcepts?.length\"\n        >\n          <div\n            class=\"drop-mask\"\n            @drop=\"onFileDrop\"\n            @dragover=\"onFileDragover\"\n            @dragleave=\"onFileDragLeave\"\n            v-if=\"isDraggingFile\"\n          >\n            Drop new concepts\n          </div>\n          <ul class=\"items\">\n            <li\n              class=\"item\"\n              :class=\"{\n                'selected-item': isSelected(concept)\n              }\"\n              :key=\"concept.id\"\n              @click=\"\n                onSelectConcept(concept, $event.ctrlKey || $event.metaKey)\n              \"\n              v-for=\"concept in filteredConcepts\"\n            >\n              <concept-card :concept=\"concept\" />\n            </li>\n          </ul>\n        </div>\n        <div class=\"has-text-centered mb1 mt1 empty-concepts\" v-else>\n          <strong>\n            {{ $t('concepts.empty') }}\n          </strong>\n        </div>\n        <div class=\"footer mb2\">\n          <button-simple\n            class=\"upload-button\"\n            :disabled=\"loading.loadingConcepts\"\n            :text=\"$t('concepts.add_new_concept')\"\n            @click=\"openAddConceptModal\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <add-preview-modal\n      ref=\"add-preview-modal\"\n      :active=\"modals.addConcept\"\n      :extensions=\"imgExtensions\"\n      is-concept\n      :is-error=\"errors.addingConcept\"\n      :is-loading=\"loading.addingConcept\"\n      message=\"\"\n      @cancel=\"closeAddConceptModal\"\n      @confirm=\"confirmAddConceptModal\"\n    />\n\n    <div class=\"column side-column\">\n      <task-info entity-type=\"Concept\" :task=\"currentTask\" with-actions />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { firstBy } from 'thenby'\n\nimport { sortByName, sortPeople } from '@/lib/sorting'\n\nimport { searchMixin } from '@/components/mixins/search'\nimport { domMixin } from '@/components/mixins/dom'\n\nimport files from '@/lib/files'\n\nimport AddPreviewModal from '@/components/modals/AddPreviewModal.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxStatus from '@/components/widgets/ComboboxStatus.vue'\nimport ConceptCard from '@/components/widgets/ConceptCard.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'concepts',\n\n  mixins: [searchMixin, domMixin],\n\n  components: {\n    AddPreviewModal,\n    ButtonSimple,\n    Combobox,\n    ComboboxStatus,\n    ConceptCard,\n    PeopleField,\n    SearchField,\n    TableInfo,\n    TaskInfo\n  },\n\n  data() {\n    return {\n      imgExtensions: files.IMG_EXTENSIONS_STRING,\n      isDraggingFile: false,\n      loading: {\n        addingConcept: false,\n        loadingConcepts: false,\n        savingSearch: false\n      },\n      errors: {\n        addingConcept: false,\n        loadingConcepts: false\n      },\n      filters: {\n        entityType: null,\n        publisher: null,\n        sortBy: 'created_at',\n        taskStatusId: null\n      },\n      form: {\n        file: null\n      },\n      modals: {\n        addConcept: false\n      },\n\n      // TODO: module getters\n      conceptSearchQueries: [\n        {\n          id: 'filter-test-1',\n          list_type: 'concept',\n          name: 'test',\n          search_query: 'test'\n        }\n      ]\n    }\n  },\n\n  mounted() {\n    // TODO: concept search\n    // this.setSearch(this.$route.query.search)\n    // this.searchField.focus()\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'currentProduction',\n      'displayedConcepts',\n      'isDarkTheme',\n      'isTVShow',\n      'personMap',\n      'selectedConcepts',\n      'taskStatusMap'\n    ]),\n\n    publishers() {\n      const publishers = new Map()\n      this.filteredConcepts.forEach(concept => {\n        const personId = concept.created_by\n        if (!publishers.has(personId)) {\n          const person = this.personMap.get(personId)\n          if (person) {\n            publishers.set(personId, person)\n          }\n        }\n      })\n      return sortPeople([...publishers.values()])\n    },\n\n    currentTask() {\n      return this.currentConcept?.tasks?.[0]\n    },\n\n    currentConcept() {\n      return this.selectedConcepts.size === 1\n        ? this.selectedConcepts.values().next().value\n        : null\n    },\n\n    entityTypeOptions() {\n      const allEntityTypeOptions = {\n        label: this.$t('main.all'),\n        value: null\n      }\n      const options = ['assets', 'shots', 'sequences', 'edits', 'episodes'].map(\n        name => ({\n          label: this.$t(`${name}.title`),\n          value: name\n        })\n      )\n      return [allEntityTypeOptions].concat(options)\n    },\n\n    sortByOptions() {\n      return ['created_at', 'updated_at', 'last_comment_date'].map(name => ({\n        label: name,\n        value: name\n      }))\n    },\n\n    filteredConcepts() {\n      let concepts = [...this.displayedConcepts]\n\n      if (this.filters.taskStatusId) {\n        concepts = concepts.filter(\n          concept =>\n            concept.tasks[0].task_status_id === this.filters.taskStatusId\n        )\n      }\n      if (this.filters.publisher) {\n        concepts = concepts.filter(\n          concept => concept.created_by === this.filters.publisher.id\n        )\n      }\n      if (this.filters.entityType) {\n        concepts = concepts.filter(concept =>\n          concept.tags?.some(\n            // FIXME: condition related to many-to-many relationship\n            entity => entity.type === this.filters.entityType\n          )\n        )\n      }\n      return concepts.sort(\n        firstBy(this.filters.sortBy, -1).thenBy('created_at', -1)\n      )\n    },\n\n    searchField() {\n      return this.$refs['search-field']\n    },\n\n    taskStatusList() {\n      const allStatusItem = {\n        id: null,\n        color: '#999',\n        name: this.$t('main.all'),\n        short_name: this.$t('main.all')\n      }\n      const conceptTaskStatusList = sortByName(\n        Array.from(this.taskStatusMap.values()).filter(\n          status => status.for_concept\n        )\n      )\n      return [allStatusItem].concat(conceptTaskStatusList)\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addSelectedConcepts',\n      'addSelectedTask',\n      'clearSelectedConcepts',\n      'clearSelectedTasks',\n      'loadAssets',\n      'loadConcepts',\n      'newConcepts',\n      'setCurrentEpisode'\n    ]),\n\n    setConceptSearch: searchQuery => Promise.resolve(),\n    saveConceptSearch: searchQuery => Promise.resolve(),\n    removeConceptSearch: searchQuery => Promise.resolve(),\n\n    setSearch(value) {\n      this.searchField.setValue(value)\n    },\n\n    onSearchChange() {\n      const searchQuery = this.searchField.getValue() || ''\n      if (searchQuery?.length !== 1) {\n        this.setConceptSearch(searchQuery)\n      }\n      this.setSearchInUrl()\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.saveConceptSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removeConceptSearch(searchQuery).catch(err => {\n        if (err) console.error(err)\n      })\n    },\n\n    async refreshConcepts() {\n      this.loading.loadingConcepts = true\n      try {\n        if (this.isTVShow) {\n          this.setCurrentEpisode('all') // mandatory to load all assets of a TV show\n        }\n        await this.loadAssets({ all: true })\n        await this.loadConcepts()\n      } catch (err) {\n        console.error(err)\n        this.errors.loadingConcepts = true\n      } finally {\n        this.loading.loadingConcepts = false\n      }\n    },\n\n    isSelected(concept) {\n      return this.selectedConcepts.has(concept.id)\n    },\n\n    onSelectConcept(concept, isMultipleSelection = false) {\n      const selection = isMultipleSelection\n        ? new Map(this.selectedConcepts)\n        : new Map()\n      if (\n        (isMultipleSelection && this.isSelected(concept)) ||\n        (!isMultipleSelection && concept === this.currentConcept)\n      ) {\n        selection.delete(concept.id)\n      } else {\n        selection.set(concept.id, concept)\n      }\n      this.clearSelectedConcepts()\n      this.addSelectedConcepts(selection)\n\n      this.clearSelectedTasks()\n      if (this.currentTask) {\n        this.addSelectedTask(this.currentTask)\n      }\n    },\n\n    openAddConceptModal() {\n      this.modals.addConcept = true\n    },\n\n    closeAddConceptModal() {\n      this.modals.addConcept = false\n    },\n\n    async confirmAddConceptModal(forms) {\n      this.loading.addingConcept = true\n      try {\n        await this.newConcepts(forms)\n        this.closeAddConceptModal()\n      } catch (err) {\n        console.error(err)\n        this.errors.addingConcept = true\n      } finally {\n        this.loading.addingConcept = false\n      }\n    },\n\n    reset() {\n      this.clearSelectedConcepts()\n      this.clearSelectedTasks()\n      this.refreshConcepts()\n    },\n\n    onFileDrop(event) {\n      this.pauseEvent(event)\n      const files = event.dataTransfer.files\n      this.modals.addConcept = true\n      this.isDraggingFile = false\n      this.$nextTick(() => {\n        this.$refs['add-preview-modal'].setFiles(files)\n      })\n    },\n\n    onFileDragover(event) {\n      this.pauseEvent(event)\n      this.isDraggingFile = true\n    },\n\n    onFileDragLeave() {\n      this.isDraggingFile = false\n    }\n  },\n\n  watch: {\n    currentProduction: {\n      immediate: true,\n      handler() {\n        // HACK: the store init a wrong current production by default\n        const productionId = this.$route.params.production_id\n        if (this.currentProduction?.id === productionId) {\n          this.reset()\n        }\n      }\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.currentProduction.name} | ${this.$t('concepts.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.concepts {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.filters {\n  display: flex;\n  align-items: flex-end;\n  gap: 0 20px;\n  padding: 10px;\n\n  .field {\n    margin-bottom: 1em;\n\n    .label {\n      padding-top: 5px;\n    }\n  }\n\n  .right {\n    margin-left: auto;\n  }\n}\n\n.concept-list {\n  flex: 1;\n  margin: 0 auto;\n  position: relative;\n  overflow-y: auto;\n}\n\n.items {\n  cursor: pointer;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n\n  .item {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--background);\n    border-radius: 1em;\n\n    border: 5px solid transparent;\n    transition: border-color 0.2s ease-in-out;\n\n    &:hover {\n      border-color: var(--background-selectable);\n    }\n\n    &.selected-item {\n      border-color: var(--background-selected);\n    }\n  }\n}\n\n.page-header {\n  margin-top: 0;\n  padding: 0;\n}\n\n.footer {\n  background: transparent;\n  position: sticky;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  padding: 5px;\n\n  .button {\n    border-radius: 10px;\n    font-size: 1.2em;\n    height: 50px;\n    transition: background-color 0.1s ease-in-out;\n    width: 100%;\n\n    &:hover {\n      background-color: var(--background-hover);\n    }\n  }\n}\n\n.drop-mask {\n  background: rgba(0.1, 0, 0, 0.5);\n  border-radius: 0.5em;\n  color: white;\n  font-size: 2em;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n}\n\n.empty-concepts {\n  flex: 1;\n}\n</style>\n"],"names":["_sfc_main","searchMixin","domMixin","AddPreviewModal","ButtonSimple","Combobox","ComboboxStatus","ConceptCard","PeopleField","SearchField","TableInfo","TaskInfo","files","mapGetters","publishers","concept","personId","person","sortPeople","allEntityTypeOptions","options","name","concepts","entity","firstBy","allStatusItem","conceptTaskStatusList","sortByName","status","mapActions","searchQuery","value","err","isMultipleSelection","selection","forms","event","productionId","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_openBlock","_createElementBlock","_createElementVNode","_createCommentVNode","_createVNode","_component_combobox_status","_ctx","$options","$data","_cache","$event","_toDisplayString","_component_people_field","_component_combobox","_createBlock","_component_table_info","args","_Fragment","_renderList","_normalizeClass","_component_concept_card","_hoisted_10","_component_button_simple","_component_add_preview_modal","_component_task_info"],"mappings":"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"}